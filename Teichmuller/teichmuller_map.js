// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 419430400;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 29584;











var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);



/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } });

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);


























































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,40,95,0,0,2,1,0,0,252,0,0,0,68,0,0,0,158,0,0,0,8,0,0,0,10,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,56,95,0,0,2,1,0,0,86,0,0,0,68,0,0,0,158,0,0,0,8,0,0,0,28,0,0,0,4,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;






















































































































































































































































































































































































































































































































































































var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
var __ZNSt9bad_allocC1Ev;
var __ZNSt9bad_allocD1Ev;
/* memory initializer */ allocate([101,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,115,111,108,118,101,32,108,105,110,101,97,114,32,115,121,115,116,101,109,46,0,0,0,78,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,32,116,111,32,112,101,114,102,111,114,109,32,102,97,99,116,111,114,105,122,97,116,105,111,110,46,0,0,0,0,0,105,110,102,111,58,32,102,97,99,116,111,114,105,122,97,116,105,111,110,32,105,115,32,110,111,116,32,115,117,99,99,101,115,115,102,117,108,0,0,0,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,105,110,32,116,101,99,104,109,117,108,108,101,114,95,109,97,112,95,119,105,116,104,95,98,111,117,110,100,97,114,121,46,0,100,97,116,97,32,97,114,101,32,110,111,116,32,105,110,32,114,105,103,104,116,32,115,105,122,101,44,32,112,108,101,97,115,101,32,99,104,101,99,107,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,115,112,95,100,103,101,109,118,32,0,0,0,0,0,0,0,70,101,98,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,97,116,97,95,114,111,119,105,110,100,91,93,0,0,0,79,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,66,106,99,111,108,46,83,116,111,114,101,0,0,0,0,73,108,108,101,103,97,108,32,110,111,114,109,32,115,112,101,99,105,102,105,101,100,46,0,85,0,0,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,0,0,0,0,79,99,116,111,98,101,114,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,0,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,100,115,112,95,98,108,97,115,50,46,99,0,0,0,0,0,65,112,114,105,108,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,97,116,97,95,99,111,108,112,116,114,91,93,0,0,0,76,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,101,100,32,102,111,114,32,98,117,102,32,105,110,32,100,111,117,98,108,101,67,97,108,108,111,99,40,41,10,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,83,97,102,101,32,109,105,110,105,109,117,109,0,0,0,0,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,46,0,0,0,0,0,0,0,0,85,110,105,116,0,0,0,0,74,97,110,117,97,114,121,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,119,111,114,107,32,105,110,32,115,112,95,100,116,114,115,118,40,41,46,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,116,95,114,111,119,105,110,100,91,93,0,0,0,0,0,85,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,101,100,32,102,111,114,32,98,117,102,32,105,110,32,100,111,117,98,108,101,77,97,108,108,111,99,40,41,10,0,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,69,112,115,105,108,111,110,0,69,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,78,111,32,116,114,97,110,115,0,0,0,0,0,0,0,0,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,105,110,32,102,105,108,101,58,32,37,115,44,32,102,117,110,99,116,105,111,110,58,32,37,115,44,32,108,105,110,101,58,32,37,100,10,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,116,95,99,111,108,112,116,114,91,93,0,0,0,0,0,0,0,77,0,0,0,0,0,0,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,67,97,110,39,116,32,101,120,112,97,110,100,32,77,101,109,84,121,112,101,32,37,100,58,32,106,99,111,108,32,37,100,10,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,100,103,115,114,102,115,46,99,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,40,112,60,61,115,116,97,114,116,73,100,32,124,124,32,109,95,100,97,116,97,46,105,110,100,101,120,40,112,45,49,41,33,61,105,110,110,101,114,41,32,38,38,32,34,121,111,117,32,99,97,110,110,111,116,32,105,110,115,101,114,116,32,97,110,32,101,108,101,109,101,110,116,32,116,104,97,116,32,97,108,114,101,97,100,121,32,101,120,105,115,116,44,32,121,111,117,32,109,117,115,116,32,99,97,108,108,32,99,111,101,102,102,82,101,102,32,116,111,32,116,104,105,115,32,101,110,100,34,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,101,110,100,62,61,115,116,97,114,116,32,38,38,32,34,121,111,117,32,112,114,111,98,97,98,108,121,32,99,97,108,108,101,100,32,99,111,101,102,102,82,101,102,32,111,110,32,97,32,110,111,110,32,102,105,110,97,108,105,122,101,100,32,109,97,116,114,105,120,34,0,0,109,95,97,110,97,108,121,115,105,115,73,115,79,107,32,38,38,32,34,89,111,117,32,109,117,115,116,32,102,105,114,115,116,32,99,97,108,108,32,97,110,97,108,121,122,101,80,97,116,116,101,114,110,40,41,34,0,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,68,84,82,83,86,32,0,0,115,112,95,100,116,114,115,118,0,0,0,0,0,0,0,0,109,95,105,115,73,110,105,116,105,97,108,105,122,101,100,32,38,38,32,34,68,101,99,111,109,112,111,115,105,116,105,111,110,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,34,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,105,119,111,114,107,91,93,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,109,97,114,107,101,114,91,93,0,0,0,0,0,0,0,82,0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,114,111,119,115,40,41,61,61,98,46,114,111,119,115,40,41,32,38,38,32,34,83,117,112,101,114,76,85,58,58,115,111,108,118,101,40,41,58,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,114,111,119,115,32,111,102,32,116,104,101,32,114,105,103,104,116,32,104,97,110,100,32,115,105,100,101,32,109,97,116,114,105,120,32,98,34,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,66,105,110,97,114,121,79,112,46,104,0,0,0,0,0,0,0,109,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,108,111,99,97,108,32,100,119,111,114,107,112,116,114,91,93,46,0,0,0,0,0,0,85,0,0,0,0,0,0,0,109,95,105,115,73,110,105,116,105,97,108,105,122,101,100,32,38,38,32,34,83,117,112,101,114,76,85,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,34,0,0,0,0,0,0,0,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,119,111,114,107,47,114,119,111,114,107,47,105,119,111,114,107,46,0,0,0,0,0,0,100,108,97,110,103,115,46,99,0,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,100,103,115,99,111,110,46,99,0,0,0,0,0,0,0,0,100,103,115,115,118,120,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,115,105,122,101,61,61,98,46,114,111,119,115,40,41,0,0,76,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,83,117,112,101,114,76,85,83,117,112,112,111,114,116,47,83,117,112,101,114,76,85,83,117,112,112,111,114,116,46,104,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,109,95,102,97,99,116,111,114,105,122,97,116,105,111,110,73,115,79,107,32,38,38,32,34,84,104,101,32,100,101,99,111,109,112,111,115,105,116,105,111,110,32,105,115,32,110,111,116,32,105,110,32,97,32,118,97,108,105,100,32,115,116,97,116,101,32,102,111,114,32,115,111,108,118,105,110,103,44,32,121,111,117,32,109,117,115,116,32,102,105,114,115,116,32,99,97,108,108,32,101,105,116,104,101,114,32,99,111,109,112,117,116,101,40,41,32,111,114,32,97,110,97,108,121,122,101,80,97,116,116,101,114,110,40,41,47,102,97,99,116,111,114,105,122,101,40,41,34,0,0,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,40,40,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,38,38,32,40,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,115,105,122,101,60,61,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,124,124,32,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,115,105,122,101,41,32,38,38,32,115,105,122,101,62,61,48,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,65,67,115,116,111,114,101,45,62,99,111,108,101,110,100,0,0,0,0,0,0,0,0,67,79,76,65,77,68,32,102,97,105,108,101,100,0,0,0,78,0,0,0,0,0,0,0,97,76,104,115,46,114,111,119,115,40,41,32,61,61,32,97,82,104,115,46,114,111,119,115,40,41,32,38,38,32,97,76,104,115,46,99,111,108,115,40,41,32,61,61,32,97,82,104,115,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,76,45,62,83,116,111,114,101,0,0,0,0,0,0,0,100,76,85,87,111,114,107,73,110,105,116,58,32,109,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,108,111,99,97,108,32,105,119,111,114,107,112,116,114,91,93,10,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,108,111,99,97,108,32,115,111,108,110,91,93,46,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,114,119,111,114,107,46,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,119,111,114,107,32,97,114,114,97,121,115,32,105,110,32,100,103,115,99,111,110,46,0,78,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,114,111,119,32,62,61,32,48,32,38,38,32,114,111,119,32,60,32,114,111,119,115,40,41,32,38,38,32,99,111,108,32,62,61,32,48,32,38,38,32,99,111,108,32,60,32,99,111,108,115,40,41,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,40,105,62,61,48,41,32,38,38,32,40,32,40,40,66,108,111,99,107,82,111,119,115,61,61,49,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,88,112,114,84,121,112,101,58,58,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,105,60,120,112,114,46,114,111,119,115,40,41,41,32,124,124,40,40,66,108,111,99,107,82,111,119,115,61,61,88,112,114,84,121,112,101,58,58,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,49,41,32,38,38,32,105,60,120,112,114,46,99,111,108,115,40,41,41,41,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,109,95,105,110,110,101,114,78,111,110,90,101,114,111,115,91,111,117,116,101,114,93,60,61,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,32,45,32,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,41,0,0,0,114,111,119,32,62,61,32,48,32,38,38,32,114,111,119,32,60,32,114,111,119,115,40,41,32,38,38,32,99,111,108,32,62,61,32,48,32,38,38,32,99,111,108,32,60,32,99,111,108,115,40,41,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,65,67,115,116,111,114,101,45,62,99,111,108,98,101,103,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,112,91,93,0,0,0,0,80,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,33,105,115,67,111,109,112,114,101,115,115,101,100,40,41,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,82,101,100,117,120,46,104,0,0,0,0,0,0,0,40,40,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,38,38,32,40,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,115,105,122,101,60,61,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,124,124,32,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,115,105,122,101,41,32,38,38,32,115,105,122,101,62,61,48,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,100,103,115,116,114,115,46,99,0,0,0,0,0,0,0,0,105,116,45,62,114,111,119,40,41,62,61,48,32,38,38,32,105,116,45,62,114,111,119,40,41,60,109,97,116,46,114,111,119,115,40,41,32,38,38,32,105,116,45,62,99,111,108,40,41,62,61,48,32,38,38,32,105,116,45,62,99,111,108,40,41,60,109,97,116,46,99,111,108,115,40,41,0,0,0,0,67,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,83,97,102,101,32,109,105,110,105,109,117,109,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,98,117,102,32,105,110,32,105,110,116,67,97,108,108,111,99,40,41,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,116,114,105,120,46,104,0,0,0,0,0,0,105,115,67,111,109,112,114,101,115,115,101,100,40,41,32,38,38,32,34,84,104,105,115,32,102,117,110,99,116,105,111,110,32,100,111,101,115,32,110,111,116,32,109,97,107,101,32,115,101,110,115,101,32,105,110,32,110,111,110,32,99,111,109,112,114,101,115,115,101,100,32,109,111,100,101,46,34,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,0,0,0,100,105,109,32,62,61,32,48,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,61,61,48,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,114,114,97,121,46,104,0,0,0,0,0,0,0,109,95,105,110,110,101,114,78,111,110,90,101,114,111,115,91,111,117,116,101,114,93,60,61,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,32,45,32,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,41,0,0,0,100,103,115,116,114,115,0,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,73,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,41,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,0,0,0,0,0,0,0,116,105,109,101,32,101,108,97,112,115,101,100,58,32,37,46,52,102,10,0,0,0,0,0,100,105,109,32,62,61,32,48,0,0,0,0,0,0,0,0,33,105,115,67,111,109,112,114,101,115,115,101,100,40,41,0,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,45,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,48,32,124,124,32,109,95,100,97,116,97,46,105,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,45,49,41,60,105,110,110,101,114,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,105,110,110,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,0,100,103,115,114,102,115,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,40,109,95,114,111,119,43,109,95,99,117,114,114,101,110,116,66,108,111,99,107,82,111,119,115,41,32,61,61,32,109,95,120,112,114,46,114,111,119,115,40,41,32,38,38,32,109,95,99,111,108,32,61,61,32,109,95,120,112,114,46,99,111,108,115,40,41,32,38,38,32,34,84,111,111,32,102,101,119,32,99,111,101,102,102,105,99,105,101,110,116,115,32,112,97,115,115,101,100,32,116,111,32,99,111,109,109,97,32,105,110,105,116,105,97,108,105,122,101,114,32,40,111,112,101,114,97,116,111,114,60,60,41,34,0,0,83,0,0,0,0,0,0,0,83,97,102,101,32,109,105,110,105,109,117,109,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,77,97,116,114,105,120,46,104,0,0,0,0,0,0,100,103,115,101,113,117,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,0,0,0,0,102,97,108,115,101,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,0,0,0,0,115,105,122,101,95,116,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,41,32,61,61,32,109,95,100,97,116,97,46,115,105,122,101,40,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,111,117,116,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,40,100,97,116,97,80,116,114,32,61,61,32,48,41,32,124,124,32,40,32,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,41,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,77,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,118,101,99,83,105,122,101,32,62,61,32,48,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,66,105,110,97,114,121,79,112,46,104,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,66,108,111,99,107,46,104,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,115,112,95,99,111,108,101,116,114,101,101,46,99,0,0,0,78,0,0,0,0,0,0,0,105,116,45,62,114,111,119,40,41,62,61,48,32,38,38,32,105,116,45,62,114,111,119,40,41,60,109,97,116,46,114,111,119,115,40,41,32,38,38,32,105,116,45,62,99,111,108,40,41,62,61,48,32,38,38,32,105,116,45,62,99,111,108,40,41,60,109,97,116,46,99,111,108,115,40,41,0,0,0,0,79,0,0,0,0,0,0,0,97,76,104,115,46,114,111,119,115,40,41,32,61,61,32,97,82,104,115,46,114,111,119,115,40,41,32,38,38,32,97,76,104,115,46,99,111,108,115,40,41,32,61,61,32,97,82,104,115,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,104,101,97,112,95,114,101,108,97,120,95,115,110,111,100,101,46,99,0,0,0,0,0,0,115,112,95,112,114,101,111,114,100,101,114,46,99,0,0,0,103,101,116,95,112,101,114,109,95,99,46,99,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,115,116,97,116,45,62,111,112,115,0,0,0,0,0,0,66,0,0,0,0,0,0,0,105,115,67,111,109,112,114,101,115,115,101,100,40,41,32,38,38,32,34,84,104,105,115,32,102,117,110,99,116,105,111,110,32,100,111,101,115,32,110,111,116,32,109,97,107,101,32,115,101,110,115,101,32,105,110,32,110,111,110,32,99,111,109,112,114,101,115,115,101,100,32,109,111,100,101,46,34,0,0,0,82,0,0,0,0,0,0,0,97,95,115,116,97,114,116,82,111,119,32,62,61,32,48,32,38,38,32,98,108,111,99,107,82,111,119,115,32,62,61,32,48,32,38,38,32,97,95,115,116,97,114,116,82,111,119,32,60,61,32,120,112,114,46,114,111,119,115,40,41,32,45,32,98,108,111,99,107,82,111,119,115,32,38,38,32,97,95,115,116,97,114,116,67,111,108,32,62,61,32,48,32,38,38,32,98,108,111,99,107,67,111,108,115,32,62,61,32,48,32,38,38,32,97,95,115,116,97,114,116,67,111,108,32,60,61,32,120,112,114,46,99,111,108,115,40,41,32,45,32,98,108,111,99,107,67,111,108,115,0,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,61,61,48,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,42,42,32,79,110,32,101,110,116,114,121,32,116,111,32,37,54,115,44,32,112,97,114,97,109,101,116,101,114,32,110,117,109,98,101,114,32,37,50,100,32,104,97,100,32,97,110,32,105,108,108,101,103,97,108,32,118,97,108,117,101,10,0,0,100,117,116,105,108,46,99,0,109,95,99,117,114,114,101,110,116,66,108,111,99,107,82,111,119,115,61,61,111,116,104,101,114,46,114,111,119,115,40,41,0,0,0,0,0,0,0,0,115,112,95,105,101,110,118,0,100,109,101,109,111,114,121,46,99,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,0,0,0,117,116,105,108,46,99,0,0,114,111,119,32,62,61,32,48,32,38,38,32,114,111,119,32,60,32,114,111,119,115,40,41,32,38,38,32,99,111,108,32,62,61,32,48,32,38,38,32,99,111,108,32,60,32,99,111,108,115,40,41,0,0,0,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,108,111,99,97,108,32,119,111,114,107,91,93,46,0,0,118,101,99,83,105,122,101,32,62,61,32,48,0,0,0,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,73,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,41,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,0,0,0,0,0,0,0,66,0,0,0,0,0,0,0,73,0,0,0,0,0,0,0,109,95,99,111,108,60,109,95,120,112,114,46,99,111,108,115,40,41,32,38,38,32,34,84,111,111,32,109,97,110,121,32,99,111,101,102,102,105,99,105,101,110,116,115,32,112,97,115,115,101,100,32,116,111,32,99,111,109,109,97,32,105,110,105,116,105,97,108,105,122,101,114,32,40,111,112,101,114,97,116,111,114,60,60,41,34,0,0,100,103,115,99,111,110,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,109,101,109,111,114,121,46,99,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,115,116,97,116,45,62,117,116,105,109,101,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,0,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,45,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,48,32,124,124,32,109,95,100,97,116,97,46,105,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,45,49,41,60,105,110,110,101,114,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,105,110,110,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,111,109,109,97,73,110,105,116,105,97,108,105,122,101,114,46,104,0,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,66,105,110,97,114,121,79,112,46,104,0,0,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,0,0,0,0,115,105,122,101,95,116,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,41,32,61,61,32,109,95,100,97,116,97,46,115,105,122,101,40,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,111,117,116,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,109,95,114,111,119,43,109,95,99,117,114,114,101,110,116,66,108,111,99,107,82,111,119,115,60,61,109,95,120,112,114,46], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([114,111,119,115,40,41,32,38,38,32,34,84,111,111,32,109,97,110,121,32,114,111,119,115,32,112,97,115,115,101,100,32,116,111,32,99,111,109,109,97,32,105,110,105,116,105,97,108,105,122,101,114,32,40,111,112,101,114,97,116,111,114,60,60,41,34,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,109,97,114,107,101,114,46,0,0,0,0,0,0,0,0,97,76,104,115,46,114,111,119,115,40,41,32,61,61,32,97,82,104,115,46,114,111,119,115,40,41,32,38,38,32,97,76,104,115,46,99,111,108,115,40,41,32,61,61,32,97,82,104,115,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,116,114,105,120,46,104,0,0,109,97,116,46,114,111,119,115,40,41,62,48,32,38,38,32,109,97,116,46,99,111,108,115,40,41,62,48,32,38,38,32,34,121,111,117,32,97,114,101,32,117,115,105,110,103,32,97,110,32,101,109,112,116,121,32,109,97,116,114,105,120,34,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,77,97,116,114,105,120,46,104,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,108,108,105,115,116,46,0,105,115,67,111,109,112,114,101,115,115,101,100,40,41,32,38,38,32,34,84,104,105,115,32,102,117,110,99,116,105,111,110,32,100,111,101,115,32,110,111,116,32,109,97,107,101,32,115,101,110,115,101,32,105,110,32,110,111,110,32,99,111,109,112,114,101,115,115,101,100,32,109,111,100,101,46,34,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,114,114,97,121,46,104,0,0,0,114,111,119,62,61,48,32,38,38,32,114,111,119,60,114,111,119,115,40,41,32,38,38,32,99,111,108,62,61,48,32,38,38,32,99,111,108,60,99,111,108,115,40,41,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,113,115,105,122,101,46,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,61,61,48,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,100,105,109,32,62,61,32,48,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,100,104,101,97,100,46,0,67,0,0,0,0,0,0,0,115,114,99,47,108,105,110,101,97,114,95,98,101,108,116,114,97,109,105,95,115,111,108,118,101,114,46,99,112,112,0,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,73,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,41,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,105,110,118,112,46,0,0,118,101,99,116,111,114,0,0,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,45,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,48,32,124,124,32,109,95,100,97,116,97,46,105,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,45,49,41,60,105,110,110,101,114,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,105,110,110,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,0,0,0,0,0,73,110,118,97,108,105,100,32,73,83,80,69,67,0,0,0,101,120,112,108,105,99,105,116,108,121,46,10,0,0,0,0,76,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,98,117,102,32,105,110,32,109,120,67,97,108,108,111,99,73,110,116,40,41,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,77,97,116,114,105,120,46,104,0,0,85,0,0,0,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,105,119,111,114,107,91,93,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,65,67,115,116,111,114,101,0,0,0,0,0,0,0,0,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,0,0,0,0,77,97,116,114,105,120,32,105,115,32,110,111,116,32,115,113,117,97,114,101,0,0,0,0,99,111,100,101,32,111,102,32,114,111,117,116,105,110,101,32,68,76,65,77,67,50,44,32,10,32,111,116,104,101,114,119,105,115,101,32,115,117,112,112,108,121,32,69,77,73,78,0,77,97,108,108,111,99,32,102,97,105,108,115,32,102,111,114,32,65,91,93,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,115,105,122,101,95,116,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,41,32,61,61,32,109,95,100,97,116,97,46,115,105,122,101,40,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,111,117,116,101,114,32,105,110,100,101,120,41,34,0,0,0,0,0,83,0,0,0,0,0,0,0,40,100,97,116,97,80,116,114,32,61,61,32,48,41,32,124,124,32,40,32,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,41,0,0,0,0,0,0,0,37,100,58,115,117,112,45,110,111,114,109,32,100,105,102,102,32,61,32,37,46,54,108,102,44,32,111,118,101,114,108,97,112,32,35,32,61,32,37,100,10,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,65,45,62,83,116,111,114,101,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,98,95,114,111,119,105,110,100,91,93,0,0,0,0,0,112,108,101,97,115,101,32,99,111,109,109,101,110,116,32,111,117,116,32,10,32,116,104,101,32,73,70,32,98,108,111,99,107,32,97,115,32,109,97,114,107,101,100,32,119,105,116,104,105,110,32,116,104,101,0,0,83,97,116,0,0,0,0,0,37,76,102,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,101,120,112,97,110,100,101,114,115,0,0,0,0,0,0,70,114,105,0,0,0,0,0,84,104,117,0,0,0,0,0,87,101,100,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,100,32,105,110,32,102,105,108,101,32,37,115,10,0,0,0,0,0,0,0,84,117,101,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,77,111,110,0,0,0,0,0,82,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,80,114,101,99,105,115,105,111,110,0,0,0,0,0,0,0,83,0,0,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,73,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,98,95,99,111,108,112,116,114,91,93,0,0,0,0,0,73,102,44,32,97,102,116,101,114,32,105,110,115,112,101,99,116,105,111,110,44,32,116,104,101,32,118,97,108,117,101,32,69,77,73,78,32,108,111,111,107,115,32,97,99,99,101,112,116,97,98,108,101,0,0,0,66,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,98,117,102,32,105,110,32,105,110,116,77,97,108,108,111,99,40,41,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,0,0,0,0,77,111,110,100,97,121,0,0,83,117,110,100,97,121,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,116,95,114,111,119,105,110,100,91,93,0,69,77,73,78,32,61,32,37,56,105,10,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,84,114,97,110,115,112,111,115,101,0,0,0,0,0,0,0,118,101,99,83,105,122,101,32,62,61,32,48,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,46,46,47,116,104,105,114,100,45,112,97,114,116,121,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,46,0,0,0,0,0,0,0,0,83,85,80,69,82,76,85,95,77,65,76,76,79,67,32,102,97,105,108,115,32,102,111,114,32,116,95,99,111,108,112,116,114,91,93,0,0,0,0,0,10,10,32,87,65,82,78,73,78,71,46,32,84,104,101,32,118,97,108,117,101,32,69,77,73,78,32,109,97,121,32,98,101,32,105,110,99,111,114,114,101,99,116,58,45,32,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,78,111,110,45,117,110,105,116,0,0,0,0,0,0,0,0,79,99,116,0,0,0,0,0,83,101,112,0,0,0,0,0,65,117,103,0,0,0,0,0,46,46,47,101,105,103,101,110,45,51,46,50,46,49,47,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,98,101,103,105,110,32,99,111,109,112,117,116,105,110,103,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,95,115,111,108,118,101,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,115,111,108,118,101,0,0,0,105,110,102,111,0,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,115,101,116,95,102,114,111,109,95,116,114,105,112,108,101,116,115,0,0,0,0,0,0,0,115,101,116,95,102,114,111,109,95,116,114,105,112,108,101,116,115,0,0,0,0,0,0,0,114,117,110,0,0,0,0,0,102,97,99,116,111,114,105,122,101,0,0,0,0,0,0,0,77,97,112,66,97,115,101,0,77,97,112,66,97,115,101,0,77,97,112,66,97,115,101,0,77,97,112,66,97,115,101,0,77,97,116,114,105,120,0,0,77,97,116,114,105,120,0,0,66,108,111,99,107,0,0,0,65,114,114,97,121,0,0,0,65,114,114,97,121,0,0,0,111,112,101,114,97,116,111,114,44,0,0,0,0,0,0,0,126,67,111,109,109,97,73,110,105,116,105,97,108,105,122,101,114,0,0,0,0,0,0,0,114,101,115,105,122,101,0,0,114,101,115,105,122,101,0,0,114,101,115,105,122,101,0,0,114,101,115,105,122,101,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,0,67,119,105,115,101,66,105,110,97,114,121,79,112,0,0,0,67,119,105,115,101,66,105,110,97,114,121,79,112,0,0,0,67,119,105,115,101,66,105,110,97,114,121,79,112,0,0,0,105,110,115,101,114,116,66,97,99,107,85,110,99,111,109,112,114,101,115,115,101,100,0,0,115,117,109,117,112,68,117,112,108,105,99,97,116,101,115,0,115,116,97,114,116,86,101,99,0,0,0,0,0,0,0,0,115,116,97,114,116,86,101,99,0,0,0,0,0,0,0,0,114,101,115,101,114,118,101,0,114,101,115,101,114,118,101,0,105,110,115,101,114,116,66,97,99,107,66,121,79,117,116,101,114,73,110,110,101,114,0,0,105,110,115,101,114,116,66,97,99,107,66,121,79,117,116,101,114,73,110,110,101,114,0,0,105,110,115,101,114,116,66,97,99,107,85,110,99,111,109,112,114,101,115,115,101,100,0,0,115,117,109,117,112,68,117,112,108,105,99,97,116,101,115,0,115,116,97,114,116,86,101,99,0,0,0,0,0,0,0,0,99,111,101,102,102,82,101,102,0,0,0,0,0,0,0,0,114,101,115,101,114,118,101,0,105,110,115,101,114,116,0,0,105,110,115,101,114,116,66,97,99,107,66,121,79,117,116,101,114,73,110,110,101,114,0,0,105,110,115,101,114,116,85,110,99,111,109,112,114,101,115,115,101,100,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,108,105,110,101,97,114,95,98,101,108,116,114,97,109,105,95,115,111,108,118,101,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,32,89,0,0,34,0,0,0,124,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,89,0,0,204,0,0,0,168,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,89,0,0,74,0,0,0,14,1,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,89,0,0,100,0,0,0,8,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,89,0,0,100,0,0,0,22,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,89,0,0,174,0,0,0,88,0,0,0,54,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,89,0,0,6,1,0,0,194,0,0,0,54,0,0,0,4,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,89,0,0,166,0,0,0,196,0,0,0,54,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,89,0,0,8,1,0,0,146,0,0,0,54,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,90,0,0,4,1,0,0,98,0,0,0,54,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,90,0,0,164,0,0,0,116,0,0,0,54,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,90,0,0,44,0,0,0,118,0,0,0,54,0,0,0,118,0,0,0,4,0,0,0,30,0,0,0,6,0,0,0,20,0,0,0,54,0,0,0,2,0,0,0,248,255,255,255,184,90,0,0,20,0,0,0,10,0,0,0,32,0,0,0,14,0,0,0,2,0,0,0,30,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,90,0,0,250,0,0,0,236,0,0,0,54,0,0,0,18,0,0,0,16,0,0,0,58,0,0,0,26,0,0,0,18,0,0,0,2,0,0,0,4,0,0,0,248,255,255,255,224,90,0,0,62,0,0,0,100,0,0,0,112,0,0,0,122,0,0,0,88,0,0,0,42,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,91,0,0,80,0,0,0,198,0,0,0,54,0,0,0,44,0,0,0,38,0,0,0,8,0,0,0,44,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,91,0,0,66,0,0,0,70,0,0,0,54,0,0,0,40,0,0,0,76,0,0,0,12,0,0,0,56,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,91,0,0,254,0,0,0,2,0,0,0,54,0,0,0,26,0,0,0,32,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,91,0,0,52,0,0,0,220,0,0,0,54,0,0,0,10,0,0,0,14,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,91,0,0,224,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,91,0,0,32,0,0,0,144,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,91,0,0,6,0,0,0,180,0,0,0,54,0,0,0,8,0,0,0,6,0,0,0,12,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,91,0,0,104,0,0,0,20,0,0,0,54,0,0,0,20,0,0,0,24,0,0,0,32,0,0,0,22,0,0,0,22,0,0,0,8,0,0,0,6,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,91,0,0,46,0,0,0,28,0,0,0,54,0,0,0,46,0,0,0,44,0,0,0,36,0,0,0,38,0,0,0,28,0,0,0,42,0,0,0,34,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,91,0,0,60,0,0,0,4,0,0,0,54,0,0,0,76,0,0,0,68,0,0,0,62,0,0,0,64,0,0,0,56,0,0,0,66,0,0,0,60,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,76,0,0,0,96,0,0,0,54,0,0,0,6,0,0,0,12,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,92,0,0,30,0,0,0,182,0,0,0,54,0,0,0,16,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,92,0,0,12,0,0,0,192,0,0,0,54,0,0,0,2,0,0,0,10,0,0,0,14,0,0,0,116,0,0,0,94,0,0,0,24,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,92,0,0,186,0,0,0,138,0,0,0,54,0,0,0,14,0,0,0,16,0,0,0,18,0,0,0,48,0,0,0,8,0,0,0,20,0,0,0,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,92,0,0,186,0,0,0,24,0,0,0,54,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,92,0,0,0,58,0,0,0,10,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,92,0,0,186,0,0,0,106,0,0,0,54,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,66,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,92,0,0,186,0,0,0,40,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,92,0,0,64,0,0,0,162,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,92,0,0,186,0,0,0,82,0,0,0,54,0,0,0,22,0,0,0,2,0,0,0,4,0,0,0,10,0,0,0,16,0,0,0,30,0,0,0,26,0,0,0,6,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,92,0,0,12,1,0,0,42,0,0,0,54,0,0,0,10,0,0,0,4,0,0,0,20,0,0,0,38,0,0,0,8,0,0,0,6,0,0,0,28,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,16,93,0,0,216,0,0,0,202,0,0,0,200,255,255,255,200,255,255,255,16,93,0,0,36,0,0,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,93,0,0,72,0,0,0,232,0,0,0,70,0,0,0,2,0,0,0,16,0,0,0,36,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,93,0,0,186,0,0,0,90,0,0,0,54,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,66,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,93,0,0,186,0,0,0,170,0,0,0,54,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,28,0,0,0,66,0,0,0,8,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,93,0,0,56,0,0,0,222,0,0,0,60,0,0,0,40,0,0,0,26,0,0,0,2,0,0,0,46,0,0,0,78,0,0,0,20,0,0,0,120,0,0,0,12,0,0,0,28,0,0,0,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,93,0,0,136,0,0,0,244,0,0,0,74,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,80,0,0,0,96,0,0,0,34,0,0,0,26,0,0,0,24,0,0,0,6,0,0,0,44,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,93,0,0,10,0,0,0,126,0,0,0,60,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,46,0,0,0,78,0,0,0,20,0,0,0,6,0,0,0,12,0,0,0,30,0,0,0,18,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,152,93,0,0,50,0,0,0,218,0,0,0,252,255,255,255,252,255,255,255,152,93,0,0,152,0,0,0,134,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,176,93,0,0,226,0,0,0,246,0,0,0,252,255,255,255,252,255,255,255,176,93,0,0,114,0,0,0,208,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,200,93,0,0,92,0,0,0,16,1,0,0,248,255,255,255,248,255,255,255,200,93,0,0,188,0,0,0,242,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,224,93,0,0,112,0,0,0,214,0,0,0,248,255,255,255,248,255,255,255,224,93,0,0,142,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,93,0,0,212,0,0,0,190,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,94,0,0,0,1,0,0,240,0,0,0,16,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,54,0,0,0,96,0,0,0,34,0,0,0,26,0,0,0,24,0,0,0,6,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,94,0,0,160,0,0,0,184,0,0,0,38,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,82,0,0,0,78,0,0,0,20,0,0,0,6,0,0,0,12,0,0,0,30,0,0,0,42,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,94,0,0,234,0,0,0,150,0,0,0,54,0,0,0,60,0,0,0,114,0,0,0,30,0,0,0,78,0,0,0,4,0,0,0,34,0,0,0,50,0,0,0,24,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,94,0,0,110,0,0,0,62,0,0,0,54,0,0,0,106,0,0,0,4,0,0,0,66,0,0,0,20,0,0,0,76,0,0,0,26,0,0,0,110,0,0,0,52,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,94,0,0,238,0,0,0,122,0,0,0,54,0,0,0,16,0,0,0,56,0,0,0,6,0,0,0,46,0,0,0,80,0,0,0,54,0,0,0,86,0,0,0,58,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,94,0,0,78,0,0,0,178,0,0,0,54,0,0,0,98,0,0,0,102,0,0,0,32,0,0,0,72,0,0,0,28,0,0,0,22,0,0,0,72,0,0,0,70,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,94,0,0,94,0,0,0,18,0,0,0,40,0,0,0,24,0,0,0,16,0,0,0,14,0,0,0,80,0,0,0,96,0,0,0,34,0,0,0,64,0,0,0,74,0,0,0,12,0,0,0,44,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,95,0,0,16,0,0,0,228,0,0,0,62,0,0,0,40,0,0,0,30,0,0,0,10,0,0,0,46,0,0,0,78,0,0,0,20,0,0,0,90,0,0,0,22,0,0,0,2,0,0,0,18,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,95,0,0,2,1,0,0,206,0,0,0,68,0,0,0,158,0,0,0,8,0,0,0,2,0,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,0,0,0,0,216,76,0,0,0,0,0,0,232,76,0,0,0,0,0,0,248,76,0,0,24,89,0,0,0,0,0,0,0,0,0,0,8,77,0,0,24,89,0,0,0,0,0,0,0,0,0,0,24,77,0,0,24,89,0,0,0,0,0,0,0,0,0,0,48,77,0,0,96,89,0,0,0,0,0,0,0,0,0,0,72,77,0,0,24,89,0,0,0,0,0,0,0,0,0,0,88,77,0,0,176,76,0,0,112,77,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,64,94,0,0,0,0,0,0,176,76,0,0,184,77,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,72,94,0,0,0,0,0,0,176,76,0,0,0,78,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,80,94,0,0,0,0,0,0,176,76,0,0,72,78,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,88,94,0,0,0,0,0,0,0,0,0,0,144,78,0,0,104,91,0,0,0,0,0,0,0,0,0,0,192,78,0,0,104,91,0,0,0,0,0,0,176,76,0,0,240,78,0,0,0,0,0,0,1,0,0,0,128,93,0,0,0,0,0,0,176,76,0,0,8,79,0,0,0,0,0,0,1,0,0,0,128,93,0,0,0,0,0,0,176,76,0,0,32,79,0,0,0,0,0,0,1,0,0,0,136,93,0,0,0,0,0,0,176,76,0,0,56,79,0,0,0,0,0,0,1,0,0,0,136,93,0,0,0,0,0,0,176,76,0,0,80,79,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,240,94,0,0,0,8,0,0,176,76,0,0,152,79,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,240,94,0,0,0,8,0,0,176,76,0,0,224,79,0,0,0,0,0,0,3,0,0,0,160,92,0,0,2,0,0,0,112,89,0,0,2,0,0,0,0,93,0,0,0,8,0,0,176,76,0,0,40,80,0,0,0,0,0,0,3,0,0,0,160,92,0,0,2,0,0,0,112,89,0,0,2,0,0,0,8,93,0,0,0,8,0,0,0,0,0,0,112,80,0,0,160,92,0,0,0,0,0,0,0,0,0,0,136,80,0,0,160,92,0,0,0,0,0,0,176,76,0,0,160,80,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,144,93,0,0,2,0,0,0,176,76,0,0,184,80,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,144,93,0,0,2,0,0,0,0,0,0,0,208,80,0,0,0,0,0,0,232,80,0,0,248,93,0,0,0,0,0,0,176,76,0,0,8,81,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,24,90,0,0,0,0,0,0,176,76,0,0,80,81,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,48,90,0,0,0,0,0,0,176,76,0,0,152,81,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,72,90,0,0,0,0,0,0,176,76,0,0,224,81,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,96,90,0,0,0,0,0,0,0,0,0,0,40,82,0,0,160,92,0,0,0,0,0,0,0,0,0,0,64,82,0,0,160,92,0,0,0,0,0,0,176,76,0,0,88,82,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,8,94,0,0,2,0,0,0,176,76,0,0,128,82,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,8,94,0,0,2,0,0,0,176,76,0,0,168,82,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,8,94,0,0,2,0,0,0,176,76,0,0,208,82,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,8,94,0,0,2,0,0,0,0,0,0,0,248,82,0,0,120,93,0,0,0,0,0,0,0,0,0,0,16,83,0,0,160,92,0,0,0,0,0,0,176,76,0,0,40,83,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,232,94,0,0,2,0,0,0,176,76,0,0,64,83,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,232,94,0,0,2,0,0,0,0,0,0,0,88,83,0,0,0,0,0,0,128,83,0,0,0,0,0,0,168,83,0,0,176,93,0,0,0,0,0,0,0,0,0,0,240,83,0,0,16,94,0,0,0,0,0,0,0,0,0,0,16,84,0,0,128,92,0,0,0,0,0,0,0,0,0,0,56,84,0,0,128,92,0,0,0,0,0,0,0,0,0,0,96,84,0,0,104,93,0,0,0,0,0,0,0,0,0,0,168,84,0,0,0,0,0,0,224,84,0,0,0,0,0,0,24,85,0,0,0,0,0,0,56,85,0,0,0,0,0,0,88,85,0,0,0,0,0,0,120,85,0,0,0,0,0,0,152,85,0,0,176,76,0,0,176,85,0,0,0,0,0,0,1,0,0,0,248,89,0,0,3,244,255,255,176,76,0,0,224,85,0,0,0,0,0,0,1,0,0,0,8,90,0,0,3,244,255,255,176,76,0,0,16,86,0,0,0,0,0,0,1,0,0,0,248,89,0,0,3,244,255,255,176,76,0,0,64,86,0,0,0,0,0,0,1,0,0,0,8,90,0,0,3,244,255,255,0,0,0,0,112,86,0,0,64,89,0,0,0,0,0,0,0,0,0,0,136,86,0,0,0,0,0,0,160,86,0,0,112,93,0,0,0,0,0,0,0,0,0,0,184,86,0,0,96,93,0,0,0,0,0,0,0,0,0,0,216,86,0,0,104,93,0,0,0,0,0,0,0,0,0,0,248,86,0,0,0,0,0,0,24,87,0,0,0,0,0,0,56,87,0,0,0,0,0,0,88,87,0,0,176,76,0,0,120,87,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,224,94,0,0,2,0,0,0,176,76,0,0,152,87,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,224,94,0,0,2,0,0,0,176,76,0,0,184,87,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,224,94,0,0,2,0,0,0,176,76,0,0,216,87,0,0,0,0,0,0,2,0,0,0,160,92,0,0,2,0,0,0,224,94,0,0,2,0,0,0,0,0,0,0,248,87,0,0,0,0,0,0,16,88,0,0,0,0,0,0,40,88,0,0,0,0,0,0,64,88,0,0,96,93,0,0,0,0,0,0,0,0,0,0,88,88,0,0,104,93,0,0,0,0,0,0,0,0,0,0,112,88,0,0,56,95,0,0,0,0,0,0,0,0,0,0,152,88,0,0,56,95,0,0,0,0,0,0,0,0,0,0,192,88,0,0,72,95,0,0,0,0,0,0,0,0,0,0,232,88,0,0,16,89,0,0,0,0,0,0,56,0,0,0,0,0,0,0,176,93,0,0,226,0,0,0,246,0,0,0,200,255,255,255,200,255,255,255,176,93,0,0,114,0,0,0,208,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return Math.floor((Date.now() - _clock.start) * (1000000/1000));
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }


  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }


  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }


  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  var _llvm_memset_p0i8_i64=_memset;

  
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      var fd = _fileno(stream);
      return _write(fd, s, _strlen(s));
    }
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }

  function _hypot(a, b) {
       return Math.sqrt(a*a + b*b);
    }

  function _fmax(x, y) {
      return isNaN(x) ? y : isNaN(y) ? x : Math.max(x, y);
    }

  var _fabs=Math_abs;

  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }

  var _sqrt=Math_sqrt;



  
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }



  var _floor=Math_floor;

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _times(buffer) {
      // clock_t times(struct tms *buffer);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/times.html
      // NOTE: This is fake, since we can't calculate real CPU time usage in JS.
      if (buffer !== 0) {
        _memset(buffer, 0, 16);
      }
      return 0;
    }

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_release() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  function __ZNSt9exceptionD2Ev() {}

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _abort() {
      Module['abort']();
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }


  function ___cxa_guard_abort() {}

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  var _llvm_va_start=undefined;

  
  function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }


  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env._stdout|0;var t=env.___dso_handle|0;var u=+env.NaN;var v=+env.Infinity;var w=0;var x=0;var y=0;var z=0;var A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0.0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=global.Math.floor;var U=global.Math.abs;var V=global.Math.sqrt;var W=global.Math.pow;var X=global.Math.cos;var Y=global.Math.sin;var Z=global.Math.tan;var _=global.Math.acos;var $=global.Math.asin;var aa=global.Math.atan;var ba=global.Math.atan2;var ca=global.Math.exp;var da=global.Math.log;var ea=global.Math.ceil;var fa=global.Math.imul;var ga=env.abort;var ha=env.assert;var ia=env.asmPrintInt;var ja=env.asmPrintFloat;var ka=env.min;var la=env.invoke_viiiii;var ma=env.invoke_viiiiiii;var na=env.invoke_vi;var oa=env.invoke_vii;var pa=env.invoke_iii;var qa=env.invoke_iiii;var ra=env.invoke_viiiiiid;var sa=env.invoke_ii;var ta=env.invoke_viii;var ua=env.invoke_viiiiid;var va=env.invoke_v;var wa=env.invoke_iiiiiiiii;var xa=env.invoke_viiiiiiiii;var ya=env.invoke_viiiiiiii;var za=env.invoke_viiiiii;var Aa=env.invoke_iiiii;var Ba=env.invoke_iiiiii;var Ca=env.invoke_viiii;var Da=env._llvm_lifetime_end;var Ea=env.__scanString;var Fa=env._pthread_mutex_lock;var Ga=env.___cxa_end_catch;var Ha=env._strtoull;var Ia=env._fflush;var Ja=env._fputc;var Ka=env._fwrite;var La=env._send;var Ma=env._fputs;var Na=env._llvm_umul_with_overflow_i32;var Oa=env._isspace;var Pa=env._read;var Qa=env._isxdigit_l;var Ra=env._fileno;var Sa=env.___cxa_guard_abort;var Ta=env._newlocale;var Ua=env.___gxx_personality_v0;var Va=env._pthread_cond_wait;var Wa=env.___cxa_rethrow;var Xa=env._fmod;var Ya=env.___resumeException;var Za=env._llvm_va_end;var _a=env._vsscanf;var $a=env._snprintf;var ab=env._fgetc;var bb=env.__getFloat;var cb=env._atexit;var db=env._hypot;var eb=env.___cxa_free_exception;var fb=env._isdigit_l;var gb=env._clock;var hb=env.___setErrNo;var ib=env._isxdigit;var jb=env._exit;var kb=env._sprintf;var lb=env._asprintf;var mb=env.___ctype_b_loc;var nb=env._freelocale;var ob=env._catgets;var pb=env.__isLeapYear;var qb=env._fmax;var rb=env._copysign;var sb=env.___cxa_is_number_type;var tb=env.___cxa_does_inherit;var ub=env.___cxa_guard_acquire;var vb=env.___cxa_begin_catch;var wb=env._emscripten_memcpy_big;var xb=env._recv;var yb=env.__parseInt64;var zb=env.__ZSt18uncaught_exceptionv;var Ab=env.__ZNSt9exceptionD2Ev;var Bb=env._times;var Cb=env._mkport;var Db=env.__exit;var Eb=env._strftime;var Fb=env.___cxa_throw;var Gb=env._printf;var Hb=env._pread;var Ib=env._strtoull_l;var Jb=env.__arraySum;var Kb=env._sysconf;var Lb=env._puts;var Mb=env._strtoll_l;var Nb=env.___cxa_find_matching_catch;var Ob=env.__formatString;var Pb=env._pthread_cond_broadcast;var Qb=env.__ZSt9terminatev;var Rb=env._pthread_mutex_unlock;var Sb=env.___cxa_call_unexpected;var Tb=env._sbrk;var Ub=env.___errno_location;var Vb=env._strerror;var Wb=env._catclose;var Xb=env._llvm_lifetime_start;var Yb=env.___cxa_guard_release;var Zb=env._ungetc;var _b=env._uselocale;var $b=env._vsnprintf;var ac=env._sscanf;var bc=env.___assert_fail;var cc=env._fread;var dc=env._strftime_l;var ec=env._abort;var fc=env._fprintf;var gc=env._isdigit;var hc=env._strtoll;var ic=env.__reallyNegative;var jc=env.__addDays;var kc=env._fabs;var lc=env._floor;var mc=env._sqrt;var nc=env._write;var oc=env.___cxa_allocate_exception;var pc=env._vasprintf;var qc=env._catopen;var rc=env.___ctype_toupper_loc;var sc=env.___ctype_tolower_loc;var tc=env._pwrite;var uc=env._strerror_r;var vc=env._time;var wc=0.0;
// EMSCRIPTEN_START_FUNCS
function If(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0,N=0.0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0.0,U=0,V=0.0,W=0,X=0.0,Y=0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;e=b-7|0;if((e|0)>0){f=a+2|0;g=f+a|0;i=g+1|0;j=i+a|0;k=j+1|0;l=k+a|0;m=l+1|0;n=m+a|0;o=n+1|0;p=o+a|0;q=p+1|0;r=a+1+q|0;s=a+3|0;t=a+4|0;u=g+2|0;v=a+5|0;w=g+3|0;x=j+2|0;y=a+6|0;z=g+4|0;A=j+3|0;B=l+2|0;C=a+7|0;D=g+5|0;E=j+4|0;F=l+3|0;G=n+2|0;H=a+8|0;I=g+6|0;g=j+5|0;j=l+4|0;l=n+3|0;n=p+2|0;p=(a<<3)+8|0;J=c;K=0;while(1){L=+h[d+(K<<3)>>3];M=d+((K|1)<<3)|0;N=+h[M>>3]-L*+h[J+8>>3];O=d+((K|2)<<3)|0;P=+h[O>>3]-L*+h[J+16>>3]-N*+h[J+(f<<3)>>3];Q=d+((K|3)<<3)|0;R=+h[Q>>3]-L*+h[J+24>>3]-N*+h[J+(s<<3)>>3]-P*+h[J+(i<<3)>>3];S=d+((K|4)<<3)|0;T=+h[S>>3]-L*+h[J+32>>3]-N*+h[J+(t<<3)>>3]-P*+h[J+(u<<3)>>3]-R*+h[J+(k<<3)>>3];U=d+((K|5)<<3)|0;V=+h[U>>3]-L*+h[J+40>>3]-N*+h[J+(v<<3)>>3]-P*+h[J+(w<<3)>>3]-R*+h[J+(x<<3)>>3]-T*+h[J+(m<<3)>>3];W=d+((K|6)<<3)|0;X=+h[W>>3]-L*+h[J+48>>3]-N*+h[J+(y<<3)>>3]-P*+h[J+(z<<3)>>3]-R*+h[J+(A<<3)>>3]-T*+h[J+(B<<3)>>3]-V*+h[J+(o<<3)>>3];Y=d+((K|7)<<3)|0;Z=+h[Y>>3]-L*+h[J+56>>3]-N*+h[J+(C<<3)>>3]-P*+h[J+(D<<3)>>3]-R*+h[J+(E<<3)>>3]-T*+h[J+(F<<3)>>3]-V*+h[J+(G<<3)>>3]-X*+h[J+(q<<3)>>3];h[M>>3]=N;h[O>>3]=P;h[Q>>3]=R;h[S>>3]=T;h[U>>3]=V;h[W>>3]=X;h[Y>>3]=Z;Y=K+8|0;if((Y|0)<(b|0)){W=Y;U=J+64|0;S=J+(H<<3)|0;Q=J+(I<<3)|0;O=J+(g<<3)|0;M=J+(j<<3)|0;_=J+(l<<3)|0;$=J+(n<<3)|0;aa=J+(r<<3)|0;while(1){ba=d+(W<<3)|0;h[ba>>3]=+h[ba>>3]-L*+h[U>>3]-N*+h[S>>3]-P*+h[Q>>3]-R*+h[O>>3]-T*+h[M>>3]-V*+h[_>>3]-X*+h[$>>3]-Z*+h[aa>>3];ba=W+1|0;if((ba|0)<(b|0)){W=ba;U=U+8|0;S=S+8|0;Q=Q+8|0;O=O+8|0;M=M+8|0;_=_+8|0;$=$+8|0;aa=aa+8|0}else{break}}}aa=J+(p<<3)|0;if((Y|0)<(e|0)){J=aa;K=Y}else{ca=aa;da=Y;break}}}else{ca=c;da=0}c=b-3|0;if((da|0)<(c|0)){K=a+2|0;J=K+a|0;e=J+1|0;p=a+1+e|0;r=a+3|0;n=a+4|0;l=J+2|0;J=(a<<2)+4|0;j=ca;g=da;while(1){Z=+h[d+(g<<3)>>3];I=d+((g|1)<<3)|0;X=+h[I>>3]-Z*+h[j+8>>3];H=d+((g|2)<<3)|0;V=+h[H>>3]-Z*+h[j+16>>3]-X*+h[j+(K<<3)>>3];q=d+((g|3)<<3)|0;T=+h[q>>3]-Z*+h[j+24>>3]-X*+h[j+(r<<3)>>3]-V*+h[j+(e<<3)>>3];h[I>>3]=X;h[H>>3]=V;h[q>>3]=T;q=g+4|0;if((q|0)<(b|0)){H=q;I=j+32|0;G=j+(n<<3)|0;F=j+(l<<3)|0;E=j+(p<<3)|0;while(1){D=d+(H<<3)|0;h[D>>3]=+h[D>>3]-Z*+h[I>>3]-X*+h[G>>3]-V*+h[F>>3]-T*+h[E>>3];D=H+1|0;if((D|0)<(b|0)){H=D;I=I+8|0;G=G+8|0;F=F+8|0;E=E+8|0}else{break}}}E=j+(J<<3)|0;if((q|0)<(c|0)){j=E;g=q}else{ea=E;fa=q;break}}}else{ea=ca;fa=da}if((fa|0)>=(b-1|0)){return}T=+h[d+(fa<<3)>>3];da=d+((fa|1)<<3)|0;V=+h[da>>3]-T*+h[ea+8>>3];h[da>>3]=V;da=fa|2;if((da|0)>=(b|0)){return}fa=da;da=ea+16|0;ca=ea+(a+2<<3)|0;while(1){a=d+(fa<<3)|0;h[a>>3]=+h[a>>3]-T*+h[da>>3]-V*+h[ca>>3];a=fa+1|0;if((a|0)<(b|0)){fa=a;da=da+8|0;ca=ca+8|0}else{break}}return}function Jf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0.0,k=0;if((b|0)>0){e=0;f=b}else{return}do{f=f-1|0;g=d+(f<<3)|0;i=fa(f,a)|0;j=+h[g>>3]/+h[c+(i+f<<3)>>3];h[g>>3]=j;if((f|0)>0){g=0;do{k=d+(g<<3)|0;h[k>>3]=+h[k>>3]-j*+h[c+(g+i<<3)>>3];g=g+1|0;}while((g|0)<(f|0))}e=e+1|0;}while((e|0)<(b|0));return}function Kf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=c-7|0;if((g|0)>0){i=a<<1;j=i+a|0;k=j+a|0;l=k+a|0;m=l+a|0;n=m+a|0;o=(b|0)>0;p=a<<3;q=d;r=0;while(1){s=+h[e+(r<<3)>>3];t=+h[e+((r|1)<<3)>>3];u=+h[e+((r|2)<<3)>>3];v=+h[e+((r|3)<<3)>>3];w=+h[e+((r|4)<<3)>>3];x=+h[e+((r|5)<<3)>>3];y=+h[e+((r|6)<<3)>>3];z=r+8|0;A=+h[e+((r|7)<<3)>>3];if(o){B=q;C=q+(a<<3)|0;D=q+(i<<3)|0;E=q+(j<<3)|0;F=q+(k<<3)|0;G=q+(l<<3)|0;H=q+(m<<3)|0;I=q+(n<<3)|0;J=0;while(1){K=f+(J<<3)|0;h[K>>3]=+h[K>>3]+(s*+h[B>>3]+t*+h[C>>3]+u*+h[D>>3]+v*+h[E>>3]+w*+h[F>>3]+x*+h[G>>3]+y*+h[H>>3]+A*+h[I>>3]);K=J+1|0;if((K|0)<(b|0)){B=B+8|0;C=C+8|0;D=D+8|0;E=E+8|0;F=F+8|0;G=G+8|0;H=H+8|0;I=I+8|0;J=K}else{break}}}J=q+(p<<3)|0;if((z|0)<(g|0)){q=J;r=z}else{L=J;M=z;break}}}else{L=d;M=0}d=c-3|0;a:do{if((M|0)<(d|0)){r=a<<1;q=r+a|0;g=a<<2;if((b|0)>0){N=L;O=M}else{p=L;n=M;while(1){m=n+4|0;l=p+(g<<3)|0;if((m|0)<(d|0)){p=l;n=m}else{P=l;Q=m;break a}}}while(1){A=+h[e+(O<<3)>>3];y=+h[e+((O|1)<<3)>>3];x=+h[e+((O|2)<<3)>>3];n=O+4|0;w=+h[e+((O|3)<<3)>>3];p=N;z=N+(a<<3)|0;m=N+(r<<3)|0;l=N+(q<<3)|0;k=0;while(1){j=f+(k<<3)|0;h[j>>3]=+h[j>>3]+(A*+h[p>>3]+y*+h[z>>3]+x*+h[m>>3]+w*+h[l>>3]);j=k+1|0;if((j|0)<(b|0)){p=p+8|0;z=z+8|0;m=m+8|0;l=l+8|0;k=j}else{break}}k=N+(g<<3)|0;if((n|0)<(d|0)){N=k;O=n}else{P=k;Q=n;break}}}else{P=L;Q=M}}while(0);if((Q|0)<(c|0)&(b|0)>0){R=P;S=Q}else{return}while(1){Q=S+1|0;w=+h[e+(S<<3)>>3];P=R;M=0;while(1){L=f+(M<<3)|0;h[L>>3]=+h[L>>3]+w*+h[P>>3];L=M+1|0;if((L|0)<(b|0)){P=P+8|0;M=L}else{break}}if((Q|0)<(c|0)){R=R+(a<<3)|0;S=Q}else{break}}return}function Lf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0;j=i;i=i+8|0;k=j|0;c[k>>2]=1;if((c[g>>2]|0)==0){c[6322]=0;l=c[a>>2]|0;if((l|0)>0){m=0;n=l;do{h[d+(m<<3)>>3]=1.0/+(n|0);m=m+1|0;c[6322]=m;n=c[a>>2]|0;}while((m|0)<(n|0))}c[g>>2]=1;c[6314]=1;i=j;return 0}n=c[6314]|0;a:do{if((n|0)==5){o=+ng(a,d,k);p=o/+((c[a>>2]|0)*3|0|0)*2.0;if(!(p>+h[f>>3])){q=38;break}pg(a,d,k,b,k)|0;h[f>>3]=p;q=38}else if((n|0)==4){c[6316]=c[6318];m=(mg(a,d,k)|0)-1|0;c[6318]=m;l=+h[d+(c[6316]<<3)>>3]!=+U(+(+h[d+(m<<3)>>3]));r=c[6320]|0;if(!(l&(r|0)<5)){q=33;break}s=r+1|0;t=m;q=15}else if((n|0)==3){pg(a,d,k,b,k)|0;h[86]=+h[f>>3];p=+ng(a,b,k);h[f>>3]=p;m=0;while(1){c[6322]=m;if((m|0)>=(c[a>>2]|0)){q=33;break a}o=+h[d+(m<<3)>>3];r=o>=0.0;if(o<0.0){u=-0.0- +T(.5-(r?1.0:-1.0))}else{u=+T(r?1.5:-.5)}if(u!=+(c[e+(m<<2)>>2]|0)){break}else{m=m+1|0}}if(!(p>+h[86])){q=33;break}c[6322]=0;if((c[a>>2]|0)>0){m=0;do{r=d+(m<<3)|0;l=+h[r>>3]<0.0;o=l?-1.0:1.0;h[r>>3]=o;if(l){v=-0.0- +T(.5-o)}else{v=+T(o+.5)}c[e+(m<<2)>>2]=~~v;m=(c[6322]|0)+1|0;c[6322]=m;}while((m|0)<(c[a>>2]|0))}c[g>>2]=2;c[6314]=4;i=j;return 0}else if((n|0)==2){m=(mg(a,d,k)|0)-1|0;c[6318]=m;s=2;t=m;q=15}else{if((c[a>>2]|0)==1){p=+h[d>>3];h[b>>3]=p;h[f>>3]=+U(+p);q=38;break}h[f>>3]=+ng(a,d,k);c[6322]=0;if((c[a>>2]|0)>0){m=0;do{l=d+(m<<3)|0;r=+h[l>>3]<0.0;p=r?-1.0:1.0;h[l>>3]=p;if(r){w=-0.0- +T(.5-p)}else{w=+T(p+.5)}c[e+(m<<2)>>2]=~~w;m=(c[6322]|0)+1|0;c[6322]=m;}while((m|0)<(c[a>>2]|0))}c[g>>2]=2;c[6314]=2;i=j;return 0}}while(0);if((q|0)==15){c[6320]=s;c[6322]=0;if((c[a>>2]|0)>0){s=0;do{h[d+(s<<3)>>3]=0.0;s=s+1|0;c[6322]=s;}while((s|0)<(c[a>>2]|0))}h[d+(t<<3)>>3]=1.0;c[g>>2]=1;c[6314]=3;i=j;return 0}else if((q|0)==33){h[87]=1.0;c[6322]=1;t=c[a>>2]|0;if((t|0)>=1){s=1;e=t;w=1.0;do{t=s-1|0;h[d+(t<<3)>>3]=w*(+(t|0)/+(e-1|0)+1.0);w=-0.0- +h[87];h[87]=w;s=s+1|0;c[6322]=s;e=c[a>>2]|0;}while((s|0)<=(e|0))}c[g>>2]=1;c[6314]=5;i=j;return 0}else if((q|0)==38){c[g>>2]=0;i=j;return 0}return 0}function Mf(a){a=a|0;var b=0,d=0,e=0,f=0.0,g=0.0,j=0.0;b=i;i=i+8|0;d=b|0;e=a;if((c[82]|0)!=0){c[82]=0;Nf(25048,25024,25016,336,25032,296,25040,304)|0;h[45]=+(c[6262]|0);h[33]=+(c[6256]|0);if((c[6254]|0)!=0){h[36]=1.0;c[d>>2]=1-(c[6256]|0);h[42]=+Of(360,d)/2.0}else{h[36]=0.0;c[d>>2]=1-(c[6256]|0);h[42]=+Of(360,d)}h[40]=+h[42]*+h[45];h[43]=+(c[6258]|0);h[44]=+(c[6260]|0);h[35]=+h[37];h[34]=1.0/+h[38];if(+h[34]>=+h[35]){h[35]=+h[34]*(+h[42]+1.0)}}if((hg(e,5192)|0)!=0){h[39]=+h[42];f=+h[39];g=f;j=g;i=b;return+j}if((hg(e,12264)|0)!=0){h[39]=+h[35]}else{if((hg(e,8552)|0)!=0){h[39]=+h[45]}else{if((hg(e,5968)|0)!=0){h[39]=+h[40]}else{if((hg(e,4856)|0)!=0){h[39]=+h[33]}else{if((hg(e,3272)|0)!=0){h[39]=+h[36]}else{if((hg(e,2392)|0)!=0){h[39]=+h[43]}else{if((hg(e,1808)|0)!=0){h[39]=+h[37]}else{if((hg(e,1328)|0)!=0){h[39]=+h[44]}else{if((hg(e,896)|0)!=0){h[39]=+h[38]}}}}}}}}}f=+h[39];g=f;j=g;i=b;return+j}function Nf(a,b,d,e,f,g,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;l=i;i=i+24|0;m=l|0;n=l+8|0;o=l+16|0;p=a;a=b;b=d;d=e;e=f;f=g;g=j;j=k;if((c[144]|0)==0){q=c[6294]|0;r=p;c[r>>2]=q;s=c[6284]|0;t=a;c[t>>2]=s;u=c[6286]|0;v=b;c[v>>2]=u;w=+h[70];x=d;h[x>>3]=w;y=c[6290]|0;z=e;c[z>>2]=y;A=+h[68];B=f;h[B>>3]=A;C=c[6292]|0;D=g;c[D>>2]=C;E=+h[69];F=j;h[F>>3]=E;i=l;return 0}c[144]=0;h[61]=0.0;h[67]=1.0;h[62]=2.0;Pf(25176,25136,25144,25152)|0;h[74]=+(c[6294]|0);c[m>>2]=-(c[6284]|0);h[75]=+Of(592,m);h[70]=+h[75];h[74]=+h[62]/3.0;h[71]=+h[67]/2.0;h[n>>3]=-0.0- +h[71];h[65]=+Qf(592,n);h[63]=+Qf(520,520);h[n>>3]=-0.0- +h[71];h[74]=+Qf(504,n);h[74]=+Qf(592,520);if(+h[74]>=0.0){G=+h[74]}else{G=-0.0- +h[74]}h[74]=G;if(+h[74]<+h[70]){h[74]=+h[70]}h[70]=1.0;while(1){if(!(+h[70]>+h[74])){break}if(!(+h[74]>+h[61])){break}h[70]=+h[74];h[n>>3]=+h[71]*+h[70];G=+h[62];H=G;G=G*G;I=+h[70];h[o>>3]=H*G*G*I*I;h[73]=+Qf(n,o);h[n>>3]=-0.0- +h[73];h[73]=+Qf(568,n);h[74]=+Qf(568,584);h[n>>3]=-0.0- +h[74];h[73]=+Qf(568,n);h[74]=+Qf(568,584)}if(+h[75]<+h[70]){h[70]=+h[75]}h[66]=+h[67]/+(c[6294]|0);h[64]=+h[67];c[6300]=1;while(1){if((c[6300]|0)>3){break}h[n>>3]=+h[64]*+h[66];h[64]=+Qf(n,488);c[6300]=(c[6300]|0)+1}h[75]=+Qf(536,512);Rf(25120,536,25176)|0;h[n>>3]=-0.0- +h[67];Rf(25128,n,25176)|0;Rf(25208,600,25176)|0;h[n>>3]=-0.0- +h[75];Rf(25216,n,25176)|0;c[6298]=0;do{if((c[6280]|0)==(c[6282]|0)){if((c[6302]|0)!=(c[6304]|0)){J=29;break}if((c[6280]|0)==(c[6302]|0)){c[6290]=c[6280]}else{if(((c[6302]|0)-(c[6280]|0)|0)==3){c[6290]=(c[6280]|0)-1+(c[6284]|0);c[6298]=1}else{if((c[6280]|0)<=(c[6302]|0)){K=c[6280]|0}else{K=c[6302]|0}c[6290]=K;c[6296]=1}}}else{J=29}}while(0);if((J|0)==29){do{if((c[6280]|0)==(c[6302]|0)){if((c[6282]|0)!=(c[6304]|0)){J=44;break}c[m>>2]=(c[6280]|0)-(c[6282]|0);if((c[m>>2]|0)>=0){L=c[m>>2]|0}else{L=-(c[m>>2]|0)|0}if((L|0)==1){if((c[6280]|0)>=(c[6282]|0)){M=c[6280]|0}else{M=c[6282]|0}c[6290]=M}else{if((c[6280]|0)<=(c[6282]|0)){N=c[6280]|0}else{N=c[6282]|0}c[6290]=N;c[6296]=1}}else{J=44}}while(0);if((J|0)==44){c[m>>2]=(c[6280]|0)-(c[6282]|0);if((c[m>>2]|0)>=0){O=c[m>>2]|0}else{O=-(c[m>>2]|0)|0}do{if((O|0)==1){if((c[6302]|0)!=(c[6304]|0)){J=62;break}if((c[6280]|0)<=(c[6282]|0)){P=c[6280]|0}else{P=c[6282]|0}if(((c[6302]|0)-P|0)==3){if((c[6280]|0)>=(c[6282]|0)){Q=c[6280]|0}else{Q=c[6282]|0}c[6290]=Q-1+(c[6284]|0)}else{if((c[6280]|0)<=(c[6282]|0)){R=c[6280]|0}else{R=c[6282]|0}c[6290]=R;c[6296]=1}}else{J=62}}while(0);if((J|0)==62){if((c[6280]|0)<=(c[6282]|0)){S=c[6280]|0}else{S=c[6282]|0}c[m>>2]=S;if((c[m>>2]|0)<=(c[6302]|0)){T=c[m>>2]|0}else{T=c[6302]|0}c[m>>2]=T;if((c[m>>2]|0)<=(c[6304]|0)){U=c[m>>2]|0}else{U=c[6304]|0}c[6290]=U;c[6296]=1}}}if((c[6296]|0)!=0){c[144]=1;Gb(14720,(U=i,i=i+1|0,i=i+7&-8,c[U>>2]=0,U)|0)|0;i=U;Gb(13848,(U=i,i=i+8|0,c[U>>2]=c[6290],U)|0)|0;i=U;Gb(13e3,(U=i,i=i+1|0,i=i+7&-8,c[U>>2]=0,U)|0)|0;i=U;Gb(12584,(U=i,i=i+1|0,i=i+7&-8,c[U>>2]=0,U)|0)|0;i=U;Gb(12072,(U=i,i=i+1|0,i=i+7&-8,c[U>>2]=0,U)|0)|0;i=U;Gb(11456,(U=i,i=i+1|0,i=i+7&-8,c[U>>2]=0,U)|0)|0;i=U}if((c[6298]|0)!=0){V=1}else{V=(c[6288]|0)!=0}c[6298]=V&1;h[68]=1.0;c[m>>2]=1-(c[6290]|0);c[6300]=1;while(1){if((c[6300]|0)>(1-(c[6290]|0)|0)){break}h[n>>3]=+h[68]*+h[66];h[68]=+Qf(n,488);c[6300]=(c[6300]|0)+1}Sf(25176,25136,25160,25192,25168,552)|0;q=c[6294]|0;r=p;c[r>>2]=q;s=c[6284]|0;t=a;c[t>>2]=s;u=c[6286]|0;v=b;c[v>>2]=u;w=+h[70];x=d;h[x>>3]=w;y=c[6290]|0;z=e;c[z>>2]=y;A=+h[68];B=f;h[B>>3]=A;C=c[6292]|0;D=g;c[D>>2]=C;E=+h[69];F=j;h[F>>3]=E;i=l;return 0}function Of(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0.0,g=0.0;d=i;e=1.0;f=+h[a>>3];a=c[b>>2]|0;if((a|0)==0){g=e;i=d;return+g}if((a|0)<0){a=-a|0;f=1.0/f}while(1){if((a&1|0)!=0){e=e*f}b=a>>1;a=b;if((b|0)==0){break}f=f*f}g=e;i=d;return+g}function Pf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+16|0;g=f|0;j=f+8|0;k=a;a=b;b=d;d=e;if((c[162]|0)==0){l=c[6312]|0;m=k;c[m>>2]=l;n=c[6306]|0;o=a;c[o>>2]=n;p=c[6308]|0;q=b;c[q>>2]=p;r=c[6310]|0;s=d;c[s>>2]=r;i=f;return 0}c[162]=0;h[80]=1.0;h[85]=1.0;h[83]=1.0;while(1){if(!(+h[83]==+h[80])){break}h[85]=+h[85]*2.0;h[83]=+Qf(680,640);h[g>>3]=-0.0- +h[85];h[83]=+Qf(664,g)}h[84]=1.0;h[83]=+Qf(680,672);while(1){if(!(+h[83]==+h[85])){break}h[84]=+h[84]*2.0;h[83]=+Qf(680,672)}h[79]=+h[80]/4.0;h[78]=+h[83];h[g>>3]=-0.0- +h[85];h[83]=+Qf(664,g);c[6312]=~~(+h[83]+ +h[79]);h[84]=+(c[6312]|0);h[g>>3]=+h[84]/2.0;h[j>>3]=(-0.0- +h[84])/100.0;h[82]=+Qf(g,j);h[83]=+Qf(656,680);if(+h[83]==+h[85]){c[6308]=1}else{c[6308]=0}h[g>>3]=+h[84]/2.0;h[j>>3]=+h[84]/100.0;h[82]=+Qf(g,j);h[83]=+Qf(656,680);do{if((c[6308]|0)!=0){if(!(+h[83]==+h[85])){break}c[6308]=0}}while(0);h[g>>3]=+h[84]/2.0;h[77]=+Qf(g,680);h[g>>3]=+h[84]/2.0;h[76]=+Qf(g,624);do{if(+h[77]==+h[85]){if(!(+h[76]>+h[78])){t=0;break}t=(c[6308]|0)!=0}else{t=0}}while(0);c[6310]=t&1;c[6306]=0;h[85]=1.0;h[83]=1.0;while(1){if(!(+h[83]==+h[80])){break}c[6306]=(c[6306]|0)+1;h[85]=+h[85]*+(c[6312]|0);h[83]=+Qf(680,640);h[g>>3]=-0.0- +h[85];h[83]=+Qf(664,g)}l=c[6312]|0;m=k;c[m>>2]=l;n=c[6306]|0;o=a;c[o>>2]=n;p=c[6308]|0;q=b;c[q>>2]=p;r=c[6310]|0;s=d;c[s>>2]=r;i=f;return 0}function Qf(a,b){a=a|0;b=b|0;i=i;return+(+h[a>>3]+ +h[b>>3])}function Rf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0;e=i;i=i+8|0;f=e|0;g=a;a=d;h[60]=+h[b>>3];h[53]=1.0;h[52]=+h[53]/+(c[a>>2]|0);h[51]=0.0;c[g>>2]=1;h[f>>3]=+h[60]*+h[52];h[59]=+Qf(f,408);h[57]=+h[60];h[56]=+h[60];h[55]=+h[60];h[54]=+h[60];while(1){if(!(+h[57]==+h[60])){j=15;break}if(!(+h[56]==+h[60])){j=15;break}if(!(+h[55]==+h[60])){j=15;break}if(!(+h[54]==+h[60])){j=15;break}b=g;c[b>>2]=(c[b>>2]|0)-1;h[60]=+h[59];h[f>>3]=+h[60]/+(c[a>>2]|0);h[59]=+Qf(f,408);h[f>>3]=+h[59]*+(c[a>>2]|0);h[57]=+Qf(f,408);h[55]=+h[51];b=c[a>>2]|0;c[6278]=1;while(1){if((c[6278]|0)>(c[a>>2]|0)){break}h[55]=+h[55]+ +h[59];c[6278]=(c[6278]|0)+1}h[f>>3]=+h[60]*+h[52];h[58]=+Qf(f,408);h[f>>3]=+h[58]/+h[52];h[56]=+Qf(f,408);h[54]=+h[51];b=c[a>>2]|0;c[6278]=1;while(1){if((c[6278]|0)>(c[a>>2]|0)){break}h[54]=+h[54]+ +h[58];c[6278]=(c[6278]|0)+1}}if((j|0)==15){i=e;return 0}return 0}function Sf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0;j=i;i=i+8|0;k=j|0;l=a;a=b;b=d;d=e;e=f;f=g;c[6270]=1;c[6276]=1;while(1){c[6266]=c[6270]<<1;if((c[6266]|0)>(-(c[b>>2]|0)|0)){break}c[6270]=c[6266];c[6276]=(c[6276]|0)+1}if((c[6270]|0)==(-(c[b>>2]|0)|0)){c[6264]=c[6270]}else{c[6264]=c[6266];c[6276]=(c[6276]|0)+1}if(((c[6264]|0)+(c[b>>2]|0)|0)>((-(c[6270]|0)|0)-(c[b>>2]|0)|0)){c[6274]=c[6270]<<1}else{c[6274]=c[6264]<<1}c[e>>2]=(c[6274]|0)+(c[b>>2]|0)-1;c[6268]=(c[6276]|0)+1+(c[a>>2]|0);do{if(((c[6268]|0)%2|0|0)==1){if((c[l>>2]|0)!=2){break}b=e;c[b>>2]=(c[b>>2]|0)-1}}while(0);if((c[d>>2]|0)!=0){d=e;c[d>>2]=(c[d>>2]|0)-1}h[48]=1.0/+(c[l>>2]|0);h[46]=+(c[l>>2]|0)-1.0;h[47]=0.0;d=c[a>>2]|0;c[6272]=1;while(1){if((c[6272]|0)>(c[a>>2]|0)){break}h[46]=+h[46]*+h[48];if(+h[47]<1.0){h[49]=+h[47]}h[47]=+Qf(376,368);c[6272]=(c[6272]|0)+1}if(+h[47]>=1.0){h[47]=+h[49]}d=c[e>>2]|0;c[6272]=1;while(1){if((c[6272]|0)>(c[e>>2]|0)){break}h[k>>3]=+h[47]*+(c[l>>2]|0);h[47]=+Qf(k,400);c[6272]=(c[6272]|0)+1}h[f>>3]=+h[47];i=j;return 0}function Tf(){var a=0,b=0,d=0,e=0.0;a=i;i=i+16|0;b=a|0;d=Kb(2)|0;Bb(b|0)|0;e=+(c[b>>2]|0);e=e+ +(c[b+4>>2]|0);i=a;return+(e/+(d|0))}function Uf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+1008|0;j=h+160|0;k=h+752|0;l=eg(d,a,b)|0;m=h|0;fg(m);n=We(l<<2)|0;o=n;if((n|0)==0){p=h+240|0;kb(p|0,4928,(q=i,i=i+24|0,c[q>>2]=12120,c[q+8>>2]=36,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(p)}p=We((b<<2)+4|0)|0;r=p;if((p|0)==0){s=h+496|0;kb(s|0,4928,(q=i,i=i+24|0,c[q>>2]=5944,c[q+8>>2]=38,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(s)}if((b|0)>=0){s=0;do{c[r+(s<<2)>>2]=c[e+(s<<2)>>2];s=s+1|0;}while((s|0)<=(b|0))}if((d|0)>0){s=0;do{c[o+(s<<2)>>2]=c[f+(s<<2)>>2];s=s+1|0;}while((s|0)<(d|0))}if((gg(a,b,l,o,r,m,j|0)|0)==0){j=k|0;kb(j|0,4928,(q=i,i=i+24|0,c[q>>2]=4840,c[q+8>>2]=42,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(j)}if((b|0)>0){t=0}else{Xe(n);Xe(p);i=h;return}do{c[g+(c[r+(t<<2)>>2]<<2)>>2]=t;t=t+1|0;}while((t|0)<(b|0));Xe(n);Xe(p);i=h;return}function Vf(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;k=i;i=i+1280|0;l=k+768|0;m=k+1024|0;n=We((((a|0)>(b|0)?a:b)<<2)+4|0)|0;o=n;if((n|0)==0){p=k|0;kb(p|0,4928,(q=i,i=i+24|0,c[q>>2]=3232,c[q+8>>2]=88,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(p)}p=We((a<<2)+4|0)|0;r=p;if((p|0)==0){s=k+256|0;kb(s|0,4928,(q=i,i=i+24|0,c[q>>2]=2360,c[q+8>>2]=90,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(s)}s=We(d<<2)|0;d=s;if((s|0)==0){t=k+512|0;kb(t|0,4928,(q=i,i=i+24|0,c[q>>2]=1768,c[q+8>>2]=92,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(t)}t=(a|0)>0;if(t){tq(n|0,0,a<<2|0)|0}u=(b|0)>0;if(u){v=0;w=c[e>>2]|0;while(1){x=v+1|0;y=e+(x<<2)|0;z=c[y>>2]|0;if((w|0)<(z|0)){A=w;while(1){B=o+(c[f+(A<<2)>>2]<<2)|0;c[B>>2]=(c[B>>2]|0)+1;B=A+1|0;C=c[y>>2]|0;if((B|0)<(C|0)){A=B}else{D=C;break}}}else{D=z}if((x|0)<(b|0)){v=x;w=D}else{break}}}c[r>>2]=0;a:do{if(t){D=0;w=0;while(1){v=o+(D<<2)|0;A=D+1|0;y=r+(A<<2)|0;c[y>>2]=(c[v>>2]|0)+w;c[v>>2]=w;if((A|0)>=(a|0)){break a}D=A;w=c[y>>2]|0}}}while(0);do{if(u){a=0;t=c[e>>2]|0;while(1){w=a+1|0;D=e+(w<<2)|0;x=c[D>>2]|0;if((t|0)<(x|0)){z=t;while(1){y=o+(c[f+(z<<2)>>2]<<2)|0;c[d+(c[y>>2]<<2)>>2]=a;c[y>>2]=(c[y>>2]|0)+1;y=z+1|0;A=c[D>>2]|0;if((y|0)<(A|0)){z=y}else{E=A;break}}}else{E=x}if((w|0)<(b|0)){a=w;t=E}else{break}}if(!u){F=0;break}tq(n|0,-1|0,b<<2|0)|0;t=0;a=0;while(1){c[o+(a<<2)>>2]=a;z=c[e+(a<<2)>>2]|0;D=a+1|0;A=e+(D<<2)|0;y=c[A>>2]|0;if((z|0)<(y|0)){v=t;C=z;z=y;while(1){y=c[f+(C<<2)>>2]|0;B=c[r+(y<<2)>>2]|0;G=r+(y+1<<2)|0;y=c[G>>2]|0;if((B|0)<(y|0)){H=B;B=v;I=y;while(1){y=o+(c[d+(H<<2)>>2]<<2)|0;if((c[y>>2]|0)==(a|0)){J=B;K=I}else{c[y>>2]=a;J=B+1|0;K=c[G>>2]|0}y=H+1|0;if((y|0)<(K|0)){H=y;B=J;I=K}else{break}}L=J;M=c[A>>2]|0}else{L=v;M=z}I=C+1|0;if((I|0)<(M|0)){v=L;C=I;z=M}else{N=L;break}}}else{N=t}if((D|0)<(b|0)){t=N;a=D}else{F=N;break}}}else{F=0}}while(0);c[g>>2]=F;F=We((b<<2)+4|0)|0;c[h>>2]=F;if((F|0)==0){F=l|0;kb(F|0,4928,(q=i,i=i+24|0,c[q>>2]=1288,c[q+8>>2]=154,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(F)}F=c[g>>2]|0;do{if((F|0)!=0){g=We(F<<2)|0;c[j>>2]=g;if((g|0)!=0){break}g=m|0;kb(g|0,4928,(q=i,i=i+24|0,c[q>>2]=856,c[q+8>>2]=157,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(g)}}while(0);q=c[h>>2]|0;h=c[j>>2]|0;if(!u){O=0;P=q+(b<<2)|0;c[P>>2]=O;Xe(n);Xe(p);Xe(s);i=k;return}tq(n|0,-1|0,b<<2|0)|0;u=0;j=0;while(1){c[q+(j<<2)>>2]=u;c[o+(j<<2)>>2]=j;m=c[e+(j<<2)>>2]|0;F=j+1|0;g=e+(F<<2)|0;l=c[g>>2]|0;if((m|0)<(l|0)){N=u;L=m;m=l;while(1){l=c[f+(L<<2)>>2]|0;M=c[r+(l<<2)>>2]|0;J=r+(l+1<<2)|0;l=c[J>>2]|0;if((M|0)<(l|0)){K=M;M=N;E=l;while(1){l=c[d+(K<<2)>>2]|0;a=o+(l<<2)|0;if((c[a>>2]|0)==(j|0)){Q=M;R=E}else{c[a>>2]=j;c[h+(M<<2)>>2]=l;Q=M+1|0;R=c[J>>2]|0}l=K+1|0;if((l|0)<(R|0)){K=l;M=Q;E=R}else{break}}S=Q;T=c[g>>2]|0}else{S=N;T=m}E=L+1|0;if((E|0)<(T|0)){N=S;L=E;m=T}else{U=S;break}}}else{U=u}if((F|0)<(b|0)){u=U;j=F}else{O=U;break}}P=q+(b<<2)|0;c[P>>2]=O;Xe(n);Xe(p);Xe(s);i=k;return}function Wf(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;j=i;i=i+1280|0;k=j+768|0;l=j+1024|0;m=a<<2;n=We(m)|0;o=n;if((n|0)==0){p=j|0;kb(p|0,4928,(q=i,i=i+24|0,c[q>>2]=3232,c[q+8>>2]=222,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(p)}p=m+4|0;m=We(p)|0;r=m;if((m|0)==0){s=j+256|0;kb(s|0,4928,(q=i,i=i+24|0,c[q>>2]=14680,c[q+8>>2]=224,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(s)}s=We(b<<2)|0;b=s;if((s|0)==0){t=j+512|0;kb(t|0,4928,(q=i,i=i+24|0,c[q>>2]=13816,c[q+8>>2]=226,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(t)}t=(a|0)>0;do{if(t){tq(n|0,0,a<<2|0)|0;u=0;v=c[d>>2]|0;while(1){w=u+1|0;x=d+(w<<2)|0;y=c[x>>2]|0;if((v|0)<(y|0)){z=v;while(1){A=o+(c[e+(z<<2)>>2]<<2)|0;c[A>>2]=(c[A>>2]|0)+1;A=z+1|0;B=c[x>>2]|0;if((A|0)<(B|0)){z=A}else{C=B;break}}}else{C=y}if((w|0)<(a|0)){u=w;v=C}else{break}}c[r>>2]=0;if(t){D=0;E=0}else{F=0;break}while(1){v=o+(D<<2)|0;u=D+1|0;z=r+(u<<2)|0;c[z>>2]=(c[v>>2]|0)+E;c[v>>2]=E;if((u|0)>=(a|0)){break}D=u;E=c[z>>2]|0}if(!t){F=0;break}z=0;u=c[d>>2]|0;while(1){v=z+1|0;x=d+(v<<2)|0;B=c[x>>2]|0;if((u|0)<(B|0)){A=u;while(1){G=o+(c[e+(A<<2)>>2]<<2)|0;c[b+(c[G>>2]<<2)>>2]=z;c[G>>2]=(c[G>>2]|0)+1;G=A+1|0;H=c[x>>2]|0;if((G|0)<(H|0)){A=G}else{I=H;break}}}else{I=B}if((v|0)<(a|0)){z=v;u=I}else{break}}if(!t){F=0;break}tq(n|0,-1|0,a<<2|0)|0;u=0;z=0;while(1){c[o+(z<<2)>>2]=z;A=c[d+(z<<2)>>2]|0;x=z+1|0;w=d+(x<<2)|0;y=c[w>>2]|0;if((A|0)<(y|0)){H=u;G=A;A=y;while(1){y=o+(c[e+(G<<2)>>2]<<2)|0;if((c[y>>2]|0)==(z|0)){J=H;K=A}else{c[y>>2]=z;J=H+1|0;K=c[w>>2]|0}y=G+1|0;if((y|0)<(K|0)){H=J;G=y;A=K}else{L=J;break}}}else{L=u}A=c[r+(z<<2)>>2]|0;G=r+(x<<2)|0;H=c[G>>2]|0;if((A|0)<(H|0)){w=L;v=A;A=H;while(1){H=o+(c[b+(v<<2)>>2]<<2)|0;if((c[H>>2]|0)==(z|0)){M=w;N=A}else{c[H>>2]=z;M=w+1|0;N=c[G>>2]|0}H=v+1|0;if((H|0)<(N|0)){w=M;v=H;A=N}else{O=M;break}}}else{O=L}if((x|0)<(a|0)){u=O;z=x}else{F=O;break}}}else{c[r>>2]=0;F=0}}while(0);c[f>>2]=F;F=We(p)|0;c[g>>2]=F;if((F|0)==0){F=k|0;kb(F|0,4928,(q=i,i=i+24|0,c[q>>2]=12960,c[q+8>>2]=289,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(F)}F=c[f>>2]|0;do{if((F|0)!=0){f=We(F<<2)|0;c[h>>2]=f;if((f|0)!=0){break}f=l|0;kb(f|0,4928,(q=i,i=i+24|0,c[q>>2]=12544,c[q+8>>2]=292,c[q+16>>2]=8496,q)|0)|0;i=q;Ke(f)}}while(0);if(!t){P=0;Q=c[g>>2]|0;R=Q+(a<<2)|0;c[R>>2]=P;Xe(n);Xe(m);Xe(s);i=j;return}tq(n|0,-1|0,a<<2|0)|0;t=c[g>>2]|0;g=0;q=0;while(1){c[t+(q<<2)>>2]=g;c[o+(q<<2)>>2]=q;l=c[d+(q<<2)>>2]|0;F=q+1|0;f=d+(F<<2)|0;k=c[f>>2]|0;if((l|0)<(k|0)){p=g;O=l;l=k;while(1){k=c[e+(O<<2)>>2]|0;L=o+(k<<2)|0;if((c[L>>2]|0)==(q|0)){S=p;T=l}else{c[L>>2]=q;c[(c[h>>2]|0)+(p<<2)>>2]=k;S=p+1|0;T=c[f>>2]|0}k=O+1|0;if((k|0)<(T|0)){p=S;O=k;l=T}else{U=S;break}}}else{U=g}l=c[r+(q<<2)>>2]|0;O=r+(F<<2)|0;p=c[O>>2]|0;if((l|0)<(p|0)){f=U;k=l;l=p;while(1){p=c[b+(k<<2)>>2]|0;L=o+(p<<2)|0;if((c[L>>2]|0)==(q|0)){V=f;W=l}else{c[L>>2]=q;c[(c[h>>2]|0)+(f<<2)>>2]=p;V=f+1|0;W=c[O>>2]|0}p=k+1|0;if((p|0)<(W|0)){f=V;k=p;l=W}else{X=V;break}}}else{X=U}if((F|0)<(a|0)){g=X;q=F}else{P=X;Q=t;break}}R=Q+(a<<2)|0;c[R>>2]=P;Xe(n);Xe(m);Xe(s);i=j;return}function Xf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+1848|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+312|0;p=e+568|0;q=e+824|0;r=e+1080|0;s=e+1336|0;t=e+1592|0;u=c[b+20>>2]|0;c[g>>2]=0;v=c[b+12>>2]|0;w=c[b+16>>2]|0;c[f>>2]=w;+Tf();if((a|0)==2){if((v|0)==(w|0)){x=v}else{b=n|0;kb(b|0,4928,(y=i,i=i+24|0,c[y>>2]=12048,c[y+8>>2]=395,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(b);x=c[f>>2]|0}Wf(x,c[u>>2]|0,c[u+12>>2]|0,c[u+8>>2]|0,g,h,m);+Tf()}else if((a|0)==1){Vf(v,w,c[u>>2]|0,c[u+12>>2]|0,c[u+8>>2]|0,g,h,m);+Tf()}else if((a|0)==0){if((w|0)>0){z=0}else{i=e;return}do{c[d+(z<<2)>>2]=z;z=z+1|0;}while((z|0)<(w|0));i=e;return}else if((a|0)==3){Uf(v,w,c[u>>2]|0,c[u+12>>2]|0,c[u+8>>2]|0,d);i=e;return}else{u=o|0;kb(u|0,4928,(y=i,i=i+24|0,c[y>>2]=11440,c[y+8>>2]=411,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(u)}u=c[g>>2]|0;if((u|0)==0){g=c[f>>2]|0;if((g|0)>0){o=0;do{c[d+(o<<2)>>2]=o;o=o+1|0;}while((o|0)<(g|0))}A=c[h>>2]|0}else{+Tf();c[j>>2]=0;c[k>>2]=2147483647;g=c[f>>2]|0;o=We(g<<2)|0;w=o;if((o|0)==0){v=p|0;kb(v|0,4928,(y=i,i=i+24|0,c[y>>2]=11128,c[y+8>>2]=422,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(v);B=c[f>>2]|0;C=c[j>>2]|0}else{B=g;C=0}g=We(C+B<<2)|0;v=g;if((g|0)==0){p=q|0;kb(p|0,4928,(y=i,i=i+24|0,c[y>>2]=10944,c[y+8>>2]=424,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(p);D=c[f>>2]|0;E=c[j>>2]|0}else{D=B;E=C}C=We(E+D<<2)|0;E=C;if((C|0)==0){B=r|0;kb(B|0,4928,(y=i,i=i+24|0,c[y>>2]=10808,c[y+8>>2]=426,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(B);F=c[f>>2]|0}else{F=D}D=We(F<<2)|0;B=D;if((D|0)==0){r=s|0;kb(r|0,4928,(y=i,i=i+24|0,c[y>>2]=10592,c[y+8>>2]=428,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(r);G=c[f>>2]|0}else{G=F}F=We(G<<2)|0;r=F;if((F|0)==0){s=t|0;kb(s|0,4928,(y=i,i=i+24|0,c[y>>2]=10320,c[y+8>>2]=430,c[y+16>>2]=8496,y)|0)|0;i=y;Ke(s);H=c[f>>2]|0}else{H=G}if((H|0)>=0){H=c[h>>2]|0;G=0;do{s=H+(G<<2)|0;c[s>>2]=(c[s>>2]|0)+1;G=G+1|0;}while((G|0)<=(c[f>>2]|0))}G=c[m>>2]|0;if((u|0)>0){m=0;do{H=G+(m<<2)|0;c[H>>2]=(c[H>>2]|0)+1;m=m+1|0;}while((m|0)<(u|0))}u=c[h>>2]|0;Yf(f,u,G,d,w,j,v,E,B,r,k,l)|0;l=c[f>>2]|0;if((l|0)>0){f=0;do{k=d+(f<<2)|0;c[k>>2]=(c[k>>2]|0)-1;f=f+1|0;}while((f|0)<(l|0))}Xe(o);Xe(g);Xe(C);Xe(D);Xe(F);Xe(G);+Tf();A=u}Xe(A);i=e;return}function Yf(a,b,d,e,f,g,h,i,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((c[a>>2]|0)<1){return 0}c[m>>2]=0;Zf(a,b,0,h,e,f,i,j,k)|0;c[6220]=1;n=c[h>>2]|0;c[6222]=n;if((n|0)<1){o=1}else{p=n;while(1){c[6224]=p;n=p-1|0;c[6222]=c[e+(n<<2)>>2];c[k+(n<<2)>>2]=c[l>>2];c[e+((c[6224]|0)-1<<2)>>2]=-(c[6220]|0);n=(c[6220]|0)+1|0;c[6220]=n;q=c[6222]|0;if((q|0)<1){o=n;break}else{p=q}}}a:do{if((o|0)<=(c[a>>2]|0)){c[6218]=1;c[h>>2]=0;c[6228]=2;p=2;while(1){if((c[h+(p-1<<2)>>2]|0)<=0){q=p+1|0;c[6228]=q;p=q;continue}c[6226]=(c[g>>2]|0)+p;c[6232]=0;q=p;while(1){n=h+(q-1<<2)|0;r=c[n>>2]|0;c[6224]=r;if((r|0)<=0){s=q+1|0;c[6228]=s;if((s|0)>(c[6226]|0)){break}else{q=s;continue}}s=c[e+(r-1<<2)>>2]|0;c[6222]=s;c[n>>2]=s;s=c[6222]|0;if((s|0)>0){c[f+(s-1<<2)>>2]=-(c[6228]|0)}c[e+((c[6224]|0)-1<<2)>>2]=-(c[6220]|0);c[m>>2]=(c[m>>2]|0)-2+(c[6228]|0)+(c[i+((c[6224]|0)-1<<2)>>2]|0);if(((c[i+((c[6224]|0)-1<<2)>>2]|0)+(c[6220]|0)|0)>(c[a>>2]|0)){break a}s=(c[6218]|0)+1|0;c[6218]=s;do{if((s|0)>=(c[l>>2]|0)){c[6218]=1;n=c[a>>2]|0;c[6230]=1;if((n|0)<1){break}else{t=1}do{r=k+(t-1<<2)|0;if((c[r>>2]|0)<(c[l>>2]|0)){c[r>>2]=0;u=c[6230]|0}else{u=t}t=u+1|0;c[6230]=t;}while((t|0)<=(n|0))}}while(0);_f(24896,b,d,h,e,f,i,j,k,l,24872)|0;s=(c[6224]|0)-1|0;c[6220]=(c[6220]|0)+(c[i+(s<<2)>>2]|0);c[j+(s<<2)>>2]=c[6232];c[6232]=c[6224];if(!((c[g>>2]|0)>-1)){break}q=c[6228]|0}if((c[6220]|0)>(c[a>>2]|0)){break a}$f(24928,a,b,d,g,24912,h,e,f,i,j,k,l,24872)|0;p=c[6228]|0}}}while(0);ag(a,f,e,i)|0;return 0}function Zf(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;d=c[a>>2]|0;c[6172]=1;if((d|0)>=1){k=1;do{c[e+(k-1<<2)>>2]=0;c[h+((c[6172]|0)-1<<2)>>2]=1;c[j+((c[6172]|0)-1<<2)>>2]=0;c[i+((c[6172]|0)-1<<2)>>2]=0;k=(c[6172]|0)+1|0;c[6172]=k;}while((k|0)<=(d|0))}d=c[a>>2]|0;c[6172]=1;if((d|0)<1){return 0}else{l=1}do{a=l-1|0;k=(c[b+(l<<2)>>2]|0)-(c[b+(a<<2)>>2]|0)|0;c[6174]=k+1;i=c[e+(k<<2)>>2]|0;c[6176]=i;c[f+(a<<2)>>2]=i;c[e+((c[6174]|0)-1<<2)>>2]=c[6172];i=c[6176]|0;if((i|0)>0){c[g+(i-1<<2)>>2]=c[6172]}c[g+((c[6172]|0)-1<<2)>>2]=-(c[6174]|0);l=(c[6172]|0)+1|0;c[6172]=l;}while((l|0)<=(d|0));return 0}function _f(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;c[j+((c[a>>2]|0)-1<<2)>>2]=c[l>>2];m=c[b+((c[a>>2]|0)-1<<2)>>2]|0;c[6202]=m;n=(c[b+(c[a>>2]<<2)>>2]|0)-1|0;c[6204]=n;c[6208]=0;c[6182]=m;c[6184]=n;c[6206]=m;do{if((m|0)<=(n|0)){o=m;do{p=c[d+(o-1<<2)>>2]|0;c[6192]=p;if((p|0)==0){break}q=j+(p-1<<2)|0;p=c[l>>2]|0;do{if((c[q>>2]|0)<(p|0)){c[q>>2]=p;r=c[6192]|0;s=r-1|0;if((c[f+(s<<2)>>2]|0)<0){c[i+(s<<2)>>2]=c[6208];c[6208]=c[6192];break}else{c[d+((c[6182]|0)-1<<2)>>2]=r;c[6182]=(c[6182]|0)+1;break}}}while(0);o=(c[6206]|0)+1|0;c[6206]=o;}while((o|0)<=(n|0));o=c[6208]|0;if((o|0)<1){break}else{t=o}do{c[d+((c[6184]|0)-1<<2)>>2]=-t;o=c[6208]|0;c[6194]=o;p=c[b+(o-1<<2)>>2]|0;c[6196]=p;q=(c[b+(o<<2)>>2]|0)-1|0;c[6198]=q;c[6200]=p;a:do{if((p|0)<=(q|0)){o=p;r=q;do{s=o;while(1){u=c[d+(s-1<<2)>>2]|0;c[6190]=u;v=-u|0;c[6194]=v;if((u|0)<0){break}if((u|0)==0){break a}w=u-1|0;x=j+(w<<2)|0;y=c[l>>2]|0;do{if((c[x>>2]|0)<(y|0)){if((c[f+(w<<2)>>2]|0)<0){z=s;break}c[x>>2]=y;A=c[6182]|0;B=c[6184]|0;if((A|0)<(B|0)){C=A}else{A=B;while(1){B=c[d+(A-1<<2)>>2]|0;D=-B|0;c[6194]=D;E=c[b+(~B<<2)>>2]|0;c[6182]=E;B=(c[b+(D<<2)>>2]|0)-1|0;c[6184]=B;if((E|0)<(B|0)){C=E;break}else{A=B}}}c[d+(C-1<<2)>>2]=c[6190];c[6182]=(c[6182]|0)+1;z=c[6200]|0}else{z=s}}while(0);s=z+1|0;c[6200]=s;if((s|0)>(r|0)){break a}}o=c[b+(~u<<2)>>2]|0;c[6196]=o;r=(c[b+(v<<2)>>2]|0)-1|0;c[6198]=r;c[6200]=o;}while((o|0)<=(r|0))}}while(0);t=c[i+((c[6208]|0)-1<<2)>>2]|0;c[6208]=t;}while((t|0)>=1)}}while(0);t=c[6182]|0;if((t|0)<=(c[6184]|0)){c[d+(t-1<<2)>>2]=0}t=c[a>>2]|0;c[6194]=t;i=c[b+(t-1<<2)>>2]|0;c[6202]=i;v=(c[b+(t<<2)>>2]|0)-1|0;c[6204]=v;c[6206]=i;if((i|0)>(v|0)){return 0}else{F=i;G=v}b:while(1){v=F;while(1){H=c[d+(v-1<<2)>>2]|0;c[6180]=H;I=-H|0;c[6194]=I;if((H|0)<0){break}if((H|0)==0){J=46;break b}i=H-1|0;t=c[g+(i<<2)>>2]|0;c[6186]=t;do{if((t|0)!=0){if((t|0)==(-(c[k>>2]|0)|0)){break}u=c[f+(i<<2)>>2]|0;c[6188]=u;if((u|0)>0){c[g+(u-1<<2)>>2]=t;K=c[6186]|0}else{K=t}if((K|0)>0){c[f+(K-1<<2)>>2]=c[6188];L=c[6186]|0}else{L=K}if((L|0)>=0){break}c[e+(~L<<2)>>2]=c[6188]}}while(0);t=c[6180]|0;i=c[b+(t-1<<2)>>2]|0;c[6196]=i;u=(c[b+(t<<2)>>2]|0)-1|0;c[6198]=u;c[6178]=i;c[6200]=i;c:do{if((i|0)>(u|0)){M=i}else{t=i;z=i;while(1){C=c[d+(t-1<<2)>>2]|0;c[6192]=C;if((C|0)==0){M=z;break c}if((c[j+(C-1<<2)>>2]|0)<(c[l>>2]|0)){c[d+(z-1<<2)>>2]=C;C=(c[6178]|0)+1|0;c[6178]=C;N=C;O=c[6200]|0}else{N=z;O=t}C=O+1|0;c[6200]=C;if((C|0)>(u|0)){M=N;break}else{t=C;z=N}}}}while(0);u=M-(c[6196]|0)|0;do{if((u|0)>0){c[f+((c[6180]|0)-1<<2)>>2]=u+1;c[g+((c[6180]|0)-1<<2)>>2]=0;c[d+((c[6178]|0)-1<<2)>>2]=c[a>>2];i=c[6178]|0;z=i+1|0;c[6178]=z;if((z|0)>(c[6198]|0)){break}c[d+(i<<2)>>2]=0}else{i=h+((c[a>>2]|0)-1<<2)|0;c[i>>2]=(c[i>>2]|0)+(c[h+((c[6180]|0)-1<<2)>>2]|0);c[h+((c[6180]|0)-1<<2)>>2]=0;c[j+((c[6180]|0)-1<<2)>>2]=c[k>>2];c[f+((c[6180]|0)-1<<2)>>2]=-(c[a>>2]|0);c[g+((c[6180]|0)-1<<2)>>2]=-(c[k>>2]|0)}}while(0);u=(c[6206]|0)+1|0;c[6206]=u;if((u|0)>(G|0)){J=46;break b}else{v=u}}v=c[b+(~H<<2)>>2]|0;c[6202]=v;u=(c[b+(I<<2)>>2]|0)-1|0;c[6204]=u;c[6206]=v;if((v|0)>(u|0)){J=46;break}else{F=v;G=u}}if((J|0)==46){return 0}return 0}function $f(b,d,e,f,g,h,i,j,k,l,m,n,o,p){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;q=(c[g>>2]|0)+(c[h>>2]|0)|0;c[6138]=q;g=c[b>>2]|0;c[6154]=g;if((g|0)<1){return 0}else{r=g;s=q}while(1){q=s+(c[p>>2]|0)|0;c[6136]=q;if((q|0)<(c[o>>2]|0)){t=r}else{c[p>>2]=1;q=c[d>>2]|0;c[6148]=1;if((q|0)>=1){g=1;do{b=n+(g-1<<2)|0;if((c[b>>2]|0)<(c[o>>2]|0)){c[b>>2]=0;u=c[6148]|0}else{u=g}g=u+1|0;c[6148]=g;}while((g|0)<=(q|0))}c[6136]=(c[6138]|0)+(c[p>>2]|0);t=c[6154]|0}c[6130]=0;c[6128]=0;c[6156]=0;c[6140]=t;q=c[e+(t-1<<2)>>2]|0;c[6146]=q;g=(c[e+(t<<2)>>2]|0)-1|0;c[6148]=q;a:do{if((q|0)<=(g|0)){b=q;v=g;do{w=b;while(1){x=c[f+(w-1<<2)>>2]|0;c[6152]=x;y=-x|0;c[6140]=y;if((x|0)<0){break}if((x|0)==0){break a}z=x-1|0;A=c[l+(z<<2)>>2]|0;do{if((A|0)!=0){c[6156]=(c[6156]|0)+A;c[n+(z<<2)>>2]=c[6136];B=(c[6152]|0)-1|0;if((c[k+(B<<2)>>2]|0)!=0){break}if((c[j+(B<<2)>>2]|0)==2){c[m+(B<<2)>>2]=c[6130];c[6130]=c[6152];break}else{c[m+(B<<2)>>2]=c[6128];c[6128]=c[6152];break}}}while(0);w=(c[6148]|0)+1|0;c[6148]=w;if((w|0)>(v|0)){break a}}b=c[e+(~x<<2)>>2]|0;c[6146]=b;v=(c[e+(y<<2)>>2]|0)-1|0;c[6148]=b;}while((b|0)<=(v|0))}}while(0);g=c[6130]|0;c[6152]=g;q=g;b:while(1){c:do{if((q|0)<1){g=c[6128]|0;c[6152]=g;C=g}else{if((c[k+(q-1<<2)>>2]|0)!=0){g=c[m+((c[6152]|0)-1<<2)>>2]|0;c[6152]=g;q=g;continue b}c[p>>2]=(c[p>>2]|0)+1;g=c[6156]|0;c[6158]=g;v=c[6152]|0;b=c[e+(v-1<<2)>>2]|0;c[6146]=b;w=c[f+(b-1<<2)>>2]|0;c[6134]=w;if((w|0)==(c[6154]|0)){z=c[f+(b<<2)>>2]|0;c[6134]=z;D=z}else{D=w}c[6140]=D;w=D-1|0;if((c[j+(w<<2)>>2]|0)>=0){c[6158]=g+(c[l+(w<<2)>>2]|0);E=1;F=62;break}g=c[e+(w<<2)>>2]|0;c[6146]=g;w=(c[e+(D<<2)>>2]|0)-1|0;c[6148]=g;if((g|0)>(w|0)){E=1;F=62;break}else{G=g;H=w;I=v}while(1){v=G;w=I;d:while(1){J=c[f+(v-1<<2)>>2]|0;c[6132]=J;K=-J|0;c[6140]=K;do{if((J|0)!=(w|0)){if((J|0)<0){break d}if((J|0)==0){E=1;F=62;break c}g=J-1|0;z=c[l+(g<<2)>>2]|0;if((z|0)==0){break}b=n+(g<<2)|0;A=c[p>>2]|0;if((c[b>>2]|0)<(A|0)){c[b>>2]=A;c[6158]=(c[6158]|0)+(c[l+((c[6132]|0)-1<<2)>>2]|0);break}A=k+(g<<2)|0;if((c[A>>2]|0)!=0){break}if((c[j+(g<<2)>>2]|0)==2){g=l+(w-1<<2)|0;c[g>>2]=(c[g>>2]|0)+z;c[l+((c[6132]|0)-1<<2)>>2]=0;c[n+((c[6132]|0)-1<<2)>>2]=c[o>>2];c[j+((c[6132]|0)-1<<2)>>2]=-(c[6152]|0);c[k+((c[6132]|0)-1<<2)>>2]=-(c[o>>2]|0);break}else{c[A>>2]=-(c[o>>2]|0);break}}}while(0);A=(c[6148]|0)+1|0;c[6148]=A;if((A|0)>(H|0)){E=1;F=62;break c}v=A;w=c[6152]|0}v=c[e+(~J<<2)>>2]|0;c[6146]=v;A=(c[e+(K<<2)>>2]|0)-1|0;c[6148]=v;if((v|0)>(A|0)){E=1;F=62;break}else{G=v;H=A;I=w}}}}while(0);e:while(1){if((F|0)==62){F=0;A=(c[6152]|0)-1|0;v=(c[6158]|0)-(c[l+(A<<2)>>2]|0)|0;c[6158]=v+1;z=c[i+(v<<2)>>2]|0;c[6150]=z;c[j+(A<<2)>>2]=z;c[k+((c[6152]|0)-1<<2)>>2]=-(c[6158]|0);z=c[6150]|0;if((z|0)>0){c[k+(z-1<<2)>>2]=c[6152]}c[i+((c[6158]|0)-1<<2)>>2]=c[6152];z=c[6158]|0;if((z|0)<(c[h>>2]|0)){c[h>>2]=z;z=c[m+((c[6152]|0)-1<<2)>>2]|0;c[6152]=z;if(E){q=z;continue b}else{C=z;continue}}else{z=c[m+((c[6152]|0)-1<<2)>>2]|0;c[6152]=z;if(E){q=z;continue b}else{C=z;continue}}}if((C|0)<1){break b}if((c[k+(C-1<<2)>>2]|0)!=0){z=c[m+((c[6152]|0)-1<<2)>>2]|0;c[6152]=z;C=z;continue}c[p>>2]=(c[p>>2]|0)+1;c[6158]=c[6156];z=c[6152]|0;A=c[e+(z-1<<2)>>2]|0;c[6146]=A;v=(c[e+(z<<2)>>2]|0)-1|0;c[6148]=A;if((A|0)>(v|0)){E=0;F=62;continue}else{L=A}while(1){A=c[f+(L-1<<2)>>2]|0;c[6134]=A;if((A|0)==0){E=0;F=62;continue e}z=n+(A-1<<2)|0;A=c[p>>2]|0;f:do{if((c[z>>2]|0)<(A|0)){c[z>>2]=A;g=c[6134]|0;c[6140]=g;b=g-1|0;if((c[j+(b<<2)>>2]|0)>=0){c[6158]=(c[6158]|0)+(c[l+(b<<2)>>2]|0);break}B=c[e+(b<<2)>>2]|0;c[6142]=B;b=(c[e+(g<<2)>>2]|0)-1|0;c[6144]=B;if((B|0)>(b|0)){break}else{M=B;N=b}do{b=M;while(1){O=c[f+(b-1<<2)>>2]|0;c[6132]=O;P=-O|0;c[6140]=P;if((O|0)<0){break}if((O|0)==0){break f}B=n+(O-1<<2)|0;g=c[p>>2]|0;if((c[B>>2]|0)<(g|0)){c[B>>2]=g;c[6158]=(c[6158]|0)+(c[l+((c[6132]|0)-1<<2)>>2]|0);Q=c[6144]|0}else{Q=b}b=Q+1|0;c[6144]=b;if((b|0)>(N|0)){break f}}M=c[e+(~O<<2)>>2]|0;c[6142]=M;N=(c[e+(P<<2)>>2]|0)-1|0;c[6144]=M;}while((M|0)<=(N|0))}}while(0);A=(c[6148]|0)+1|0;c[6148]=A;if((A|0)>(v|0)){E=0;F=62;continue e}else{L=A}}}}c[p>>2]=c[6136];q=c[m+((c[6154]|0)-1<<2)>>2]|0;c[6154]=q;if((q|0)<1){break}r=q;s=c[6138]|0}a[232]=0;return 0}function ag(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=c[a>>2]|0;c[6166]=1;if((f|0)>=1){g=1;do{h=g-1|0;i=c[e+(h<<2)>>2]|0;c[6164]=i;do{if((i|0)<1){c[b+(h<<2)>>2]=c[d+(h<<2)>>2];if((c[6164]|0)<=0){break}j=c[6166]|0;k=5}else{j=g;k=5}}while(0);if((k|0)==5){k=0;h=j-1|0;c[b+(h<<2)>>2]=-(c[d+(h<<2)>>2]|0)}g=(c[6166]|0)+1|0;c[6166]=g;}while((g|0)<=(f|0))}f=c[a>>2]|0;c[6166]=1;if((f|0)>=1){g=1;do{j=g-1|0;do{if((c[b+(j<<2)>>2]|0)>0){l=g}else{k=g;while(1){c[6170]=k;m=b+(k-1<<2)|0;e=c[m>>2]|0;if((e|0)>0){break}else{k=-e|0}}c[6160]=k;e=c[m>>2]|0;c[6162]=e+1;c[d+(j<<2)>>2]=~e;c[b+((c[6160]|0)-1<<2)>>2]=c[6162];e=c[6166]|0;c[6170]=e;h=-(c[b+(e-1<<2)>>2]|0)|0;c[6168]=h;if((h|0)<1){l=e;break}else{n=e}do{c[b+(n-1<<2)>>2]=-(c[6160]|0);n=c[6168]|0;c[6170]=n;e=-(c[b+(n-1<<2)>>2]|0)|0;c[6168]=e;}while((e|0)>=1);l=c[6166]|0}}while(0);g=l+1|0;c[6166]=g;}while((g|0)<=(f|0))}f=c[a>>2]|0;c[6166]=1;if((f|0)<1){return 0}else{o=1}do{a=d+(o-1<<2)|0;g=-(c[a>>2]|0)|0;c[6162]=g;c[a>>2]=g;c[b+((c[6162]|0)-1<<2)>>2]=c[6166];o=(c[6166]|0)+1|0;c[6166]=o;}while((o|0)<=(f|0));return 0}function bg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=i;i=i+1024|0;h=g+768|0;j=b+16|0;k=c[j>>2]|0;c[f>>2]=1;c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];l=b+12|0;c[f+12>>2]=c[l>>2];c[f+16>>2]=c[j>>2];m=c[b+20>>2]|0;b=We(20)|0;c[f+20>>2]=b;if((b|0)==0){f=g|0;kb(f|0,4744,(n=i,i=i+24|0,c[n>>2]=11848,c[n+8>>2]=81,c[n+16>>2]=8480,n)|0)|0;i=n;Ke(f)}c[b>>2]=c[m>>2];c[b+4>>2]=c[m+4>>2];f=b+8|0;c[f>>2]=c[m+8>>2];o=k<<2;p=We(o)|0;q=b+12|0;c[q>>2]=p;if((p|0)==0){p=g+256|0;kb(p|0,4744,(n=i,i=i+24|0,c[n>>2]=5872,c[n+8>>2]=86,c[n+16>>2]=8480,n)|0)|0;i=n;Ke(p)}p=We(o)|0;r=b+16|0;c[r>>2]=p;if((p|0)==0){p=g+512|0;kb(p|0,4744,(n=i,i=i+24|0,c[n>>2]=4792,c[n+8>>2]=88,c[n+16>>2]=8480,n)|0)|0;i=n;Ke(p)}p=(k|0)>0;if(p){b=c[m+12>>2]|0;m=c[q>>2]|0;s=c[r>>2]|0;t=0;do{u=d+(t<<2)|0;c[m+(c[u>>2]<<2)>>2]=c[b+(t<<2)>>2];t=t+1|0;c[s+(c[u>>2]<<2)>>2]=c[b+(t<<2)>>2];}while((t|0)<(k|0))}if((c[a>>2]|0)!=0){i=g;return}kg(c[q>>2]|0,c[r>>2]|0,c[f>>2]|0,c[l>>2]|0,c[j>>2]|0,e)|0;if((c[a+32>>2]|0)!=0){i=g;return}a=lg(k,e)|0;j=We(o+4|0)|0;o=j;if((j|0)==0){l=h|0;kb(l|0,4744,(n=i,i=i+24|0,c[n>>2]=3184,c[n+8>>2]=159,c[n+16>>2]=8480,n)|0)|0;i=n;Ke(l)}do{if(p){l=0;do{c[o+(c[a+(l<<2)>>2]<<2)>>2]=c[a+(c[e+(l<<2)>>2]<<2)>>2];l=l+1|0;}while((l|0)<(k|0));if(p){v=0}else{break}do{c[e+(v<<2)>>2]=c[o+(v<<2)>>2];v=v+1|0;}while((v|0)<(k|0));if(!p){break}l=c[q>>2]|0;n=0;do{c[o+(c[a+(n<<2)>>2]<<2)>>2]=c[l+(n<<2)>>2];n=n+1|0;}while((n|0)<(k|0));if(!p){break}n=c[q>>2]|0;l=0;do{c[n+(l<<2)>>2]=c[o+(l<<2)>>2];l=l+1|0;}while((l|0)<(k|0));if(!p){break}l=c[r>>2]|0;n=0;do{c[o+(c[a+(n<<2)>>2]<<2)>>2]=c[l+(n<<2)>>2];n=n+1|0;}while((n|0)<(k|0));if(!p){break}n=c[r>>2]|0;l=0;do{c[n+(l<<2)>>2]=c[o+(l<<2)>>2];l=l+1|0;}while((l|0)<(k|0));if(p){w=0}else{break}do{c[o+(w<<2)>>2]=c[a+(c[d+(w<<2)>>2]<<2)>>2];w=w+1|0;}while((w|0)<(k|0));if(p){x=0}else{break}do{c[d+(x<<2)>>2]=c[o+(x<<2)>>2];x=x+1|0;}while((x|0)<(k|0))}}while(0);Xe(a);Xe(j);i=g;return}function cg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;Ve(f,a,-1);g=(a|0)>0;if(!g){return}tq(e|0,0,a<<2|0)|0;h=0;do{i=c[b+(h<<2)>>2]|0;if((i|0)!=(a|0)){j=e+(i<<2)|0;c[j>>2]=(c[e+(h<<2)>>2]|0)+1+(c[j>>2]|0)}h=h+1|0;}while((h|0)<(a|0));if(g){k=0}else{return}while(1){g=k;while(1){h=c[b+(g<<2)>>2]|0;if((h|0)==(a|0)){break}if((c[e+(h<<2)>>2]|0)<(d|0)){g=h}else{break}}c[f+(k<<2)>>2]=g;h=g;do{h=h+1|0;l=(h|0)<(a|0);}while((c[e+(h<<2)>>2]|0)!=0&l);if(l){k=h}else{break}}return}function dg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;h=e;j=i;i=i+256|0;k=$e((a*3|0)+2|0)|0;if((k|0)==0){l=j|0;kb(l|0,4712,(j=i,i=i+24|0,c[j>>2]=11808,c[j+8>>2]=54,c[j+16>>2]=8456,j)|0)|0;i=j;Ke(l)}l=a+1|0;j=l<<1;m=lg(a,b)|0;if((l|0)>0){n=0;do{c[k+((c[m+(n<<2)>>2]|0)+l<<2)>>2]=n;n=n+1|0;}while((n|0)<(l|0))}n=(a|0)>0;do{if(n){o=0;do{p=b+(o<<2)|0;c[k+(c[m+(o<<2)>>2]<<2)>>2]=c[m+(c[p>>2]<<2)>>2];c[k+(o+j<<2)>>2]=c[p>>2];o=o+1|0;}while((o|0)<(a|0));if(n){q=0}else{break}do{c[b+(q<<2)>>2]=c[k+(q<<2)>>2];q=q+1|0;}while((q|0)<(a|0));Ve(f,a,-1);if(!n){r=m;Xe(r);s=k;Xe(s);i=g;return}tq(h|0,0,a<<2|0)|0;o=0;do{p=c[b+(o<<2)>>2]|0;if((p|0)!=(a|0)){t=e+(p<<2)|0;c[t>>2]=(c[e+(o<<2)>>2]|0)+1+(c[t>>2]|0)}o=o+1|0;}while((o|0)<(a|0));if(n){u=0}else{r=m;Xe(r);s=k;Xe(s);i=g;return}while(1){o=u;while(1){t=c[b+(o<<2)>>2]|0;if((t|0)==(a|0)){break}if((c[e+(t<<2)>>2]|0)<(d|0)){o=t}else{break}}t=(u|0)>(o|0);if(t){v=a}else{p=a;w=u;while(1){x=c[k+(w+l<<2)>>2]|0;y=(p|0)<(x|0)?p:x;x=w+1|0;if((x|0)>(o|0)){v=y;break}else{p=y;w=x}}}w=c[k+(o+l<<2)>>2]|0;do{if((w-v|0)==(o-u|0)){c[f+(v<<2)>>2]=w;z=o}else{if(t){z=o;break}else{A=u}while(1){p=c[k+(A+l<<2)>>2]|0;if((c[e+(A<<2)>>2]|0)==0){c[f+(p<<2)>>2]=p}p=A+1|0;if((p|0)>(o|0)){z=o;break}else{A=p}}}}while(0);do{z=z+1|0;B=(z|0)<(a|0);}while((c[e+(z<<2)>>2]|0)!=0&B);if(B){u=z}else{break}}if(n){C=0}else{r=m;Xe(r);s=k;Xe(s);i=g;return}do{c[b+(C<<2)>>2]=c[k+(C+j<<2)>>2];C=C+1|0;}while((C|0)<(a|0));r=m;Xe(r);s=k;Xe(s);i=g;return}}while(0);Ve(f,a,-1);r=m;Xe(r);s=k;Xe(s);i=g;return}function eg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|a|c|0)<0){d=-1;return d|0}d=(a<<1)+c+(((b<<4)+16|0)>>>2)+(((c*24|0)+24|0)>>>2)+((a|0)/5|0)|0;return d|0}function fg(a){a=a|0;if((a|0)==0){return}tq(a|0,0,160)|0;h[a>>3]=.5;h[a+8>>3]=.5;return}function gg(a,b,d,e,f,g,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0;k=i;i=i+160|0;l=k|0;if((j|0)==0){m=0;i=k;return m|0}n=j+12|0;o=j+16|0;tq(j|0,0,80)|0;c[o>>2]=-1;p=j+20|0;c[p>>2]=-1;if((e|0)==0){c[n>>2]=-1;m=0;i=k;return m|0}if((f|0)==0){c[n>>2]=-2;m=0;i=k;return m|0}if((a|0)<0){c[n>>2]=-3;c[o>>2]=a;m=0;i=k;return m|0}if((b|0)<0){c[n>>2]=-4;c[o>>2]=b;m=0;i=k;return m|0}q=f+(b<<2)|0;r=c[q>>2]|0;if((r|0)<0){c[n>>2]=-5;c[o>>2]=r;m=0;i=k;return m|0}if((c[f>>2]|0)!=0){c[n>>2]=-6;c[o>>2]=c[f>>2];m=0;i=k;return m|0}if((g|0)==0){s=l|0;tq(l|0,0,160)|0;h[s>>3]=.5;h[l+8>>3]=.5;t=s}else{t=g}g=((b*24|0)+24|0)>>>2;s=((a<<4)+16|0)>>>2;l=r<<1;r=s+b+g+l|0;if((r|0)>(d|0)){c[n>>2]=-7;c[o>>2]=r;c[p>>2]=d;m=0;i=k;return m|0}r=d-s|0;s=r-g|0;g=e+(s<<2)|0;d=g;u=e+(r<<2)|0;v=u;w=(b|0)>0;a:do{if(w){x=0;y=0;while(1){c[d+(x*24|0)>>2]=y;z=x+1|0;A=f+(z<<2)|0;B=(c[A>>2]|0)-(c[f+(x<<2)>>2]|0)|0;C=d+(x*24|0)+4|0;c[C>>2]=B;if((B|0)<0){break}c[d+(x*24|0)+8>>2]=1;c[d+(x*24|0)+12>>2]=0;c[d+(x*24|0)+16>>2]=-1;c[d+(x*24|0)+20>>2]=-1;if((z|0)>=(b|0)){break a}x=z;y=c[A>>2]|0}c[n>>2]=-8;c[o>>2]=x;c[p>>2]=c[C>>2];m=0;i=k;return m|0}}while(0);C=j+24|0;c[C>>2]=0;y=(a|0)>0;if(y){A=0;do{c[v+(A<<4)+4>>2]=0;c[v+(A<<4)+12>>2]=-1;A=A+1|0;}while((A|0)<(a|0))}b:do{if(w){A=0;c:while(1){z=c[f+(A<<2)>>2]|0;B=A+1|0;D=c[f+(B<<2)>>2]|0;E=e+(D<<2)|0;if((z|0)<(D|0)){D=d+(A*24|0)+4|0;F=e+(z<<2)|0;z=-1;while(1){G=F+4|0;H=c[F>>2]|0;if(!((H|0)>-1&(H|0)<(a|0))){break c}I=v+(H<<4)+12|0;if((H|0)>(z|0)){J=c[I>>2]|0;if((J|0)==(A|0)){K=33}else{L=J}}else{K=33}if((K|0)==33){K=0;c[n>>2]=1;c[o>>2]=A;c[p>>2]=H;c[C>>2]=(c[C>>2]|0)+1;L=c[I>>2]|0}if((L|0)==(A|0)){c[D>>2]=(c[D>>2]|0)-1}else{J=v+(H<<4)+4|0;c[J>>2]=(c[J>>2]|0)+1}c[I>>2]=A;if(G>>>0<E>>>0){F=G;z=H}else{break}}}if((B|0)<(b|0)){A=B}else{break b}}c[n>>2]=-9;c[o>>2]=A;c[p>>2]=H;c[C>>2]=a;m=0;i=k;return m|0}}while(0);C=c[q>>2]|0;c[u>>2]=C;c[e+(r+2<<2)>>2]=C;c[e+(r+3<<2)>>2]=-1;if((a|0)>1){r=1;u=C;do{u=(c[v+(r-1<<4)+4>>2]|0)+u|0;c[v+(r<<4)>>2]=u;c[v+(r<<4)+8>>2]=u;c[v+(r<<4)+12>>2]=-1;r=r+1|0;}while((r|0)<(a|0))}do{if((c[n>>2]|0)==1){if(w){M=0}else{break}while(1){r=c[f+(M<<2)>>2]|0;u=M+1|0;C=c[f+(u<<2)>>2]|0;q=e+(C<<2)|0;if((r|0)<(C|0)){C=e+(r<<2)|0;while(1){r=C+4|0;H=c[C>>2]|0;p=v+(H<<4)+12|0;if((c[p>>2]|0)!=(M|0)){o=v+(H<<4)+8|0;H=c[o>>2]|0;c[o>>2]=H+1;c[e+(H<<2)>>2]=M;c[p>>2]=M}if(r>>>0<q>>>0){C=r}else{break}}}if((u|0)<(b|0)){M=u}else{break}}}else{if(w){N=0}else{break}while(1){A=c[f+(N<<2)>>2]|0;C=N+1|0;q=c[f+(C<<2)>>2]|0;B=e+(q<<2)|0;if((A|0)<(q|0)){q=e+(A<<2)|0;while(1){A=q+4|0;r=v+(c[q>>2]<<4)+8|0;p=c[r>>2]|0;c[r>>2]=p+1;c[e+(p<<2)>>2]=N;if(A>>>0<B>>>0){q=A}else{break}}}if((C|0)<(b|0)){N=C}else{break}}}}while(0);if(y){N=0;do{c[v+(N<<4)+12>>2]=0;c[v+(N<<4)+8>>2]=c[v+(N<<4)+4>>2];N=N+1|0;}while((N|0)<(a|0))}do{if((c[n>>2]|0)==1){c[g>>2]=0;c[f>>2]=0;if((b|0)>1){N=1;do{M=N-1|0;q=(c[d+(M*24|0)+4>>2]|0)+(c[d+(M*24|0)>>2]|0)|0;c[d+(N*24|0)>>2]=q;c[f+(N<<2)>>2]=q;N=N+1|0;}while((N|0)<(b|0))}if(y){O=0}else{break}do{N=c[v+(O<<4)>>2]|0;q=(c[v+(O<<4)+4>>2]|0)+N|0;M=e+(q<<2)|0;if((N|0)<(q|0)){q=e+(N<<2)|0;while(1){N=q+4|0;B=f+(c[q>>2]<<2)|0;u=c[B>>2]|0;c[B>>2]=u+1;c[e+(u<<2)>>2]=O;if(N>>>0<M>>>0){q=N}else{break}}}O=O+1|0;}while((O|0)<(a|0))}}while(0);O=f;P=+(b|0);Q=P*+h[t>>3];R=Q<P?Q:P;g=R<0.0?0:~~R;R=+(a|0);P=R*+h[t+8>>3];Q=P<R?P:R;t=Q<0.0?0:~~Q;n=b-1|0;if(w){q=b;M=n;while(1){if((c[d+(M*24|0)+4>>2]|0)==0){C=q-1|0;c[d+(M*24|0)+12>>2]=C;c[d+(M*24|0)>>2]=-1;S=C}else{S=q}if((M|0)>0){q=S;M=M-1|0}else{T=S;U=n;break}}while(1){S=d+(U*24|0)|0;M=c[S>>2]|0;do{if((M|0)<0){V=T}else{q=c[d+(U*24|0)+4>>2]|0;if((q|0)<=(t|0)){V=T;break}C=T-1|0;c[d+(U*24|0)+12>>2]=C;N=q+M|0;q=e+(N<<2)|0;if((M|0)<(N|0)){N=e+(M<<2)|0;while(1){u=N+4|0;B=v+(c[N>>2]<<4)+8|0;c[B>>2]=(c[B>>2]|0)-1;if(u>>>0<q>>>0){N=u}else{break}}}c[S>>2]=-1;V=C}}while(0);if((U|0)>0){T=V;U=U-1|0}else{W=V;break}}}else{W=b}if(y){V=a;U=0;T=0;while(1){t=c[v+(U<<4)+8>>2]|0;if((t|0)>(g|0)|(t|0)==0){c[v+(U<<4)+12>>2]=-1;X=T;Y=V-1|0}else{X=(T|0)>(t|0)?T:t;Y=V}t=U+1|0;if((t|0)<(a|0)){V=Y;U=t;T=X}else{Z=Y;_=X;break}}}else{Z=a;_=0}do{if(w){X=W;Y=n;while(1){T=d+(Y*24|0)|0;U=c[T>>2]|0;do{if((U|0)<0){$=X}else{V=e+(U<<2)|0;g=d+(Y*24|0)+4|0;t=e+((c[g>>2]|0)+U<<2)|0;S=V;M=0;N=V;d:while(1){V=S;while(1){if(!(V>>>0<t>>>0)){break d}aa=V+4|0;ba=c[V>>2]|0;if((c[v+(ba<<4)+12>>2]|0)<0){V=aa}else{break}}c[N>>2]=ba;V=M-1+(c[v+(ba<<4)+8>>2]|0)|0;S=aa;M=(V|0)<(b|0)?V:b;N=N+4|0}S=N-(e+(c[T>>2]<<2))>>2;if((S|0)==0){t=X-1|0;c[d+(Y*24|0)+12>>2]=t;c[T>>2]=-1;$=t;break}else{c[g>>2]=S;c[d+(Y*24|0)+12>>2]=M;$=X;break}}}while(0);if((Y|0)>0){X=$;Y=Y-1|0}else{break}}tq(O|0,-1|0,(b<<2)+4|0)|0;if(w){ca=n}else{da=$;break}while(1){if((c[d+(ca*24|0)>>2]|0)>-1){Y=f+(c[d+(ca*24|0)+12>>2]<<2)|0;X=c[Y>>2]|0;c[d+(ca*24|0)+16>>2]=-1;c[d+(ca*24|0)+20>>2]=X;if(!((X|0)==-1)){c[d+(X*24|0)+16>>2]=ca}c[Y>>2]=ca}if((ca|0)>0){ca=ca-1|0}else{da=$;break}}}else{tq(O|0,-1|0,(b<<2)+4|0)|0;da=W}}while(0);W=2147483647-b|0;if(y){O=0;do{$=v+(O<<4)+12|0;if((c[$>>2]|0)>-1){c[$>>2]=0}O=O+1|0;}while((O|0)<(a|0))}if((da|0)>0){O=y^1;$=b+1|0;ca=e;n=1;aa=0;ba=0;Y=l;l=_;_=0;while(1){X=aa;while(1){ea=f+(X<<2)|0;fa=c[ea>>2]|0;if((fa|0)==-1&(X|0)<(b|0)){X=X+1|0}else{break}}T=c[d+(fa*24|0)+20>>2]|0;c[ea>>2]=T;if(!((T|0)==-1)){c[d+(T*24|0)+16>>2]=-1}T=d+(fa*24|0)+12|0;U=c[T>>2]|0;c[T>>2]=ba;T=d+(fa*24|0)+8|0;C=c[T>>2]|0;S=C+ba|0;t=b-S|0;do{if((((U|0)<(t|0)?U:t)+Y|0)<(s|0)){ga=_;ha=Y;ia=n}else{V=e+(Y<<2)|0;if(w){q=e;u=0;while(1){B=d+(u*24|0)|0;A=c[B>>2]|0;if((A|0)>-1){p=q-ca>>2;c[B>>2]=p;r=d+(u*24|0)+4|0;H=c[r>>2]|0;if((H|0)>0){o=e+(A<<2)|0;A=q;L=0;while(1){K=c[o>>2]|0;if((c[v+(K<<4)+12>>2]|0)>-1){c[A>>2]=K;ja=A+4|0}else{ja=A}K=L+1|0;if((K|0)<(H|0)){o=o+4|0;A=ja;L=K}else{break}}ka=ja;la=c[B>>2]|0}else{ka=q;la=p}c[r>>2]=ka-(e+(la<<2))>>2;ma=ka}else{ma=q}L=u+1|0;if((L|0)<(b|0)){q=ma;u=L}else{na=ma;break}}}else{na=e}if(y){u=0;while(1){q=v+(u<<4)+12|0;do{if((c[q>>2]|0)>-1){if((c[v+(u<<4)+4>>2]|0)==0){c[q>>2]=-1;break}else{L=e+(c[v+(u<<4)>>2]<<2)|0;c[q>>2]=c[L>>2];c[L>>2]=~u;break}}}while(0);q=u+1|0;if((q|0)<(a|0)){u=q}else{oa=na;pa=na;break}}}else{oa=na;pa=na}e:while(1){u=pa;while(1){if(!(u>>>0<V>>>0)){break e}qa=c[u>>2]|0;if((qa|0)<0){break}else{u=u+4|0}}q=~qa;c[u>>2]=c[v+(q<<4)+12>>2];r=oa-ca>>2;p=v+(q<<4)|0;c[p>>2]=r;B=v+(q<<4)+4|0;q=c[B>>2]|0;if((q|0)>0){L=u;A=oa;o=0;while(1){H=c[L>>2]|0;if((c[d+(H*24|0)>>2]|0)>-1){c[A>>2]=H;ra=A+4|0}else{ra=A}H=o+1|0;if((H|0)<(q|0)){L=L+4|0;A=ra;o=H}else{break}}sa=u+(q<<2)|0;ta=ra;ua=c[p>>2]|0}else{sa=u;ta=oa;ua=r}c[B>>2]=ta-(e+(ua<<2))>>2;oa=ta;pa=sa}V=oa-ca>>2;o=_+1|0;if(y){va=0}else{ga=o;ha=V;ia=1;break}while(1){A=v+(va<<4)+12|0;if((c[A>>2]|0)>-1){c[A>>2]=0}A=va+1|0;if((A|0)<(a|0)){va=A}else{ga=o;ha=V;ia=1;break}}}}while(0);c[T>>2]=-C;t=d+(fa*24|0)|0;U=c[t>>2]|0;V=d+(fa*24|0)+4|0;o=e+((c[V>>2]|0)+U<<2)|0;A=ha;L=e+(U<<2)|0;U=0;f:while(1){H=L;while(1){if(!(H>>>0<o>>>0)){break f}wa=H+4|0;M=c[H>>2]|0;if((c[v+(M<<4)+12>>2]|0)<0){H=wa;continue}xa=c[v+(M<<4)>>2]|0;g=(c[v+(M<<4)+4>>2]|0)+xa|0;ya=e+(g<<2)|0;if((xa|0)<(g|0)){break}else{H=wa}}H=U;g=e+(xa<<2)|0;M=A;while(1){N=g;while(1){za=N+4|0;Aa=c[N>>2]|0;Ba=d+(Aa*24|0)+8|0;Ca=c[Ba>>2]|0;if((Ca|0)>0){if((c[d+(Aa*24|0)>>2]|0)>-1){break}}if(za>>>0<ya>>>0){N=za}else{A=M;L=wa;U=H;continue f}}c[Ba>>2]=-Ca;N=M+1|0;c[e+(M<<2)>>2]=Aa;B=Ca+H|0;if(za>>>0<ya>>>0){H=B;g=za;M=N}else{A=N;L=wa;U=B;continue f}}}c[T>>2]=C;L=(l|0)>(U|0)?l:U;o=c[t>>2]|0;M=(c[V>>2]|0)+o|0;g=e+(M<<2)|0;if((o|0)<(M|0)){M=e+(o<<2)|0;while(1){o=M+4|0;c[v+(c[M>>2]<<4)+12>>2]=-1;if(o>>>0<g>>>0){M=o}else{break}}}if((A-ha|0)>0){Da=c[e+(c[t>>2]<<2)>>2]|0}else{Da=-1}M=e+(ha<<2)|0;g=e+(A<<2)|0;if((ha|0)<(A|0)){V=M;while(1){C=V+4|0;T=c[V>>2]|0;o=d+(T*24|0)+8|0;H=c[o>>2]|0;c[o>>2]=-H;o=c[d+(T*24|0)+16>>2]|0;B=c[d+(T*24|0)+20>>2]|0;if((o|0)==-1){c[f+(c[d+(T*24|0)+12>>2]<<2)>>2]=B}else{c[d+(o*24|0)+20>>2]=B}if(!((B|0)==-1)){c[d+(B*24|0)+16>>2]=o}o=c[d+(T*24|0)>>2]|0;B=(c[d+(T*24|0)+4>>2]|0)+o|0;T=e+(B<<2)|0;if((o|0)<(B|0)){B=e+(o<<2)|0;while(1){o=B+4|0;N=c[B>>2]|0;r=v+(N<<4)+12|0;u=c[r>>2]|0;do{if((u|0)>=0){p=u-ia|0;if((p|0)<0){Ea=c[v+(N<<4)+8>>2]|0}else{Ea=p}p=Ea+H|0;if((p|0)==0){c[r>>2]=-1;break}else{c[r>>2]=p+ia;break}}}while(0);if(o>>>0<T>>>0){B=o}else{break}}}if(C>>>0<g>>>0){V=C}else{Fa=U;Ga=M;Ha=S;break}}g:while(1){V=Ga;while(1){Ia=c[V>>2]|0;Ja=d+(Ia*24|0)|0;B=c[Ja>>2]|0;T=e+(B<<2)|0;H=d+(Ia*24|0)+4|0;r=e+((c[H>>2]|0)+B<<2)|0;B=T;N=0;u=0;p=T;h:while(1){T=B;while(1){if(!(T>>>0<r>>>0)){break h}Ka=T+4|0;La=c[T>>2]|0;Ma=c[v+(La<<4)+12>>2]|0;if((Ma|0)<0){T=Ka}else{break}}c[p>>2]=La;T=Ma-ia+u|0;B=Ka;N=La+N|0;u=(T|0)<(b|0)?T:b;p=p+4|0}Na=V+4|0;B=p-(e+(c[Ja>>2]<<2))>>2;c[H>>2]=B;if((B|0)==0){break}c[d+(Ia*24|0)+12>>2]=u;B=(N>>>0)%($>>>0)|0;r=f+(B<<2)|0;o=c[r>>2]|0;if((o|0)>-1){T=d+(o*24|0)+16|0;q=c[T>>2]|0;c[T>>2]=Ia;Oa=q}else{c[r>>2]=-2-Ia;Oa=-2-o|0}c[d+(Ia*24|0)+20>>2]=Oa;c[d+(Ia*24|0)+16>>2]=B;if(Na>>>0<g>>>0){V=Na}else{Pa=Fa;Qa=Ha;break g}}c[Ja>>2]=-1;V=c[d+(Ia*24|0)+8>>2]|0;C=Fa-V|0;c[d+(Ia*24|0)+12>>2]=Ha;B=V+Ha|0;if(Na>>>0<g>>>0){Fa=C;Ga=Na;Ha=B}else{Pa=C;Qa=B;break}}B=M;while(1){C=B+4|0;V=c[B>>2]|0;do{if((c[d+(V*24|0)>>2]|0)>=0){o=f+(c[d+(V*24|0)+16>>2]<<2)|0;r=c[o>>2]|0;q=(r|0)>-1;if(q){Ra=c[d+(r*24|0)+16>>2]|0}else{Ra=-2-r|0}i:do{if(!((Ra|0)==-1)){T=Ra;do{K=c[d+(T*24|0)+4>>2]|0;x=d+(T*24|0)+20|0;z=c[x>>2]|0;if((z|0)==-1){break i}F=d+(T*24|0)+12|0;E=d+(T*24|0)|0;D=d+(T*24|0)+8|0;j:do{if((K|0)>0){G=T;I=z;while(1){do{if((c[d+(I*24|0)+4>>2]|0)==(K|0)){J=d+(I*24|0)+12|0;if((c[J>>2]|0)!=(c[F>>2]|0)){Sa=I;break}Ta=d+(I*24|0)|0;Ua=e+(c[Ta>>2]<<2)|0;Va=e+(c[E>>2]<<2)|0;Wa=0;while(1){if((c[Va>>2]|0)!=(c[Ua>>2]|0)){Xa=Wa;break}Ya=Wa+1|0;if((Ya|0)<(K|0)){Ua=Ua+4|0;Va=Va+4|0;Wa=Ya}else{Xa=Ya;break}}if((Xa|0)!=(K|0)){Sa=I;break}Wa=d+(I*24|0)+8|0;c[D>>2]=(c[D>>2]|0)+(c[Wa>>2]|0);c[Wa>>2]=T;c[Ta>>2]=-2;c[J>>2]=-1;c[d+(G*24|0)+20>>2]=c[d+(I*24|0)+20>>2];Sa=G}else{Sa=I}}while(0);Wa=c[d+(I*24|0)+20>>2]|0;if((Wa|0)==-1){break}else{G=Sa;I=Wa}}}else{if((K|0)==0){Za=T;_a=z}else{I=z;while(1){I=c[d+(I*24|0)+20>>2]|0;if((I|0)==-1){break j}}}while(1){do{if((c[d+(_a*24|0)+4>>2]|0)==0){I=d+(_a*24|0)+12|0;if((c[I>>2]|0)!=(c[F>>2]|0)){$a=_a;break}G=d+(_a*24|0)+8|0;c[D>>2]=(c[D>>2]|0)+(c[G>>2]|0);c[G>>2]=T;c[d+(_a*24|0)>>2]=-2;c[I>>2]=-1;c[d+(Za*24|0)+20>>2]=c[d+(_a*24|0)+20>>2];$a=Za}else{$a=_a}}while(0);I=c[d+(_a*24|0)+20>>2]|0;if((I|0)==-1){break}else{Za=$a;_a=I}}}}while(0);T=c[x>>2]|0;}while(!((T|0)==-1))}}while(0);if(q){c[d+(r*24|0)+16>>2]=-1;break}else{c[o>>2]=-1;break}}}while(0);if(C>>>0<g>>>0){B=C}else{ab=Qa;bb=Pa;break}}}else{ab=S;bb=U}c[t>>2]=-1;B=ia+1+L|0;V=(B|0)<(W|0);if(V|O){cb=V?B:1}else{B=0;while(1){V=v+(B<<4)+12|0;if((c[V>>2]|0)>-1){c[V>>2]=0}V=B+1|0;if((V|0)<(a|0)){B=V}else{cb=1;break}}}B=b-ab|0;t=X;U=M;S=M;k:while(1){V=U;while(1){if(!(V>>>0<g>>>0)){break k}db=V+4|0;eb=c[V>>2]|0;fb=d+(eb*24|0)|0;if((c[fb>>2]|0)<0){V=db}else{break}}c[S>>2]=eb;V=c[fb>>2]|0;C=d+(eb*24|0)+4|0;N=c[C>>2]|0;c[C>>2]=N+1;c[e+(N+V<<2)>>2]=Da;V=d+(eb*24|0)+12|0;N=c[d+(eb*24|0)+8>>2]|0;C=B-N|0;u=(c[V>>2]|0)+bb-N|0;N=(u|0)<(C|0)?u:C;c[V>>2]=N;V=f+(N<<2)|0;C=c[V>>2]|0;c[d+(eb*24|0)+20>>2]=C;c[d+(eb*24|0)+16>>2]=-1;if(!((C|0)==-1)){c[d+(C*24|0)+16>>2]=eb}c[V>>2]=eb;t=(t|0)<(N|0)?t:N;U=db;S=S+4|0}if((bb|0)>0){c[v+(Da<<4)>>2]=ha;c[v+(Da<<4)+4>>2]=S-M>>2;c[v+(Da<<4)+8>>2]=bb;c[v+(Da<<4)+12>>2]=0}if((ab|0)<(da|0)){n=cb;aa=t;ba=ab;Y=A;l=L;_=ga}else{gb=ga;break}}}else{gb=0}if(w){w=0;while(1){do{if(!((c[d+(w*24|0)>>2]|0)==-1)){if((c[d+(w*24|0)+12>>2]|0)==-1){hb=w}else{break}do{hb=c[d+(hb*24|0)+8>>2]|0;}while(!((c[d+(hb*24|0)>>2]|0)==-1));ga=d+(hb*24|0)+12|0;_=c[ga>>2]|0;l=w;while(1){ib=_+1|0;c[d+(l*24|0)+12>>2]=_;c[d+(l*24|0)+8>>2]=hb;if((c[ga>>2]|0)==-1){_=ib;l=hb}else{break}}c[ga>>2]=ib}}while(0);L=w+1|0;if((L|0)<(b|0)){w=L}else{jb=0;break}}do{c[f+(c[d+(jb*24|0)+12>>2]<<2)>>2]=jb;jb=jb+1|0;}while((jb|0)<(b|0))}c[j>>2]=a-Z;c[j+4>>2]=b-da;c[j+8>>2]=gb;m=1;i=k;return m|0}function hg(b,c){b=b|0;c=c|0;var d=0,e=0,f=0;d=a[b]|0;b=d&255;e=a[c]|0;c=e&255;if(d<<24>>24==e<<24>>24){f=1;return f|0}f=(((d-97&255)>>>0<26>>>0?b-32|0:b)|0)==(((e-97&255)>>>0<26>>>0?c-32|0:c)|0)|0;return f|0}function ig(a,b,d,e,f,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0.0,ca=0,da=0,ea=0,ga=0,ha=0.0,ia=0.0,ja=0,ka=0,la=0.0,ma=0,na=0.0,oa=0;m=i;i=i+288|0;n=m|0;o=m+8|0;p=m+16|0;q=m+24|0;r=m+32|0;c[n>>2]=1;c[l>>2]=0;do{if((hg(a,3872)|0)==0){if((hg(a,11600)|0)!=0){s=4;break}c[l>>2]=-1;t=-1}else{s=4}}while(0);a:do{if((s|0)==4){do{if((hg(b,8296)|0)==0){if((hg(b,5736)|0)!=0){break}if((hg(b,4784)|0)!=0){break}c[l>>2]=-2;t=-2;break a}}while(0);do{if((hg(d,11600)|0)==0){if((hg(d,8296)|0)!=0){break}c[l>>2]=-3;t=-3;break a}}while(0);u=e+12|0;v=c[u>>2]|0;if((v|0)!=(c[e+16>>2]|0)|(v|0)<0){c[l>>2]=-4;t=-4;break}w=f+12|0;x=c[w>>2]|0;if((x|0)!=(c[f+16>>2]|0)|(x|0)<0){c[l>>2]=-5;t=-5;break}x=c[l>>2]|0;if((x|0)!=0){t=x;break}x=c[e+20>>2]|0;y=c[x+8>>2]|0;z=c[f+20>>2]|0;A=c[z+4>>2]|0;B=Ef(v)|0;if((B|0)==0){v=r|0;kb(v|0,2288,(C=i,i=i+24|0,c[C>>2]=1712,c[C+8>>2]=121,c[C+16>>2]=1264,C)|0)|0;i=C;Ke(v)}v=(hg(b,8296)|0)==0;C=(hg(a,3872)|0)!=0;b:do{if(v){if(C){if((c[u>>2]|0)==0){i=m;return 0}D=c[x+4>>2]|0;if(!((D|0)>-1)){E=0.0;break}F=x+28|0;G=x+20|0;H=x+12|0;I=x+16|0;J=D;K=0.0;while(1){D=c[F>>2]|0;L=c[D+(J<<2)>>2]|0;M=c[G>>2]|0;N=c[M+(L<<2)>>2]|0;O=(c[M+(L+1<<2)>>2]|0)-N|0;c[o>>2]=O;M=J+1|0;P=D+(M<<2)|0;D=(c[P>>2]|0)-L|0;c[p>>2]=D;Q=c[(c[H>>2]|0)+(L<<2)>>2]|0;R=K+ +(fa(D<<1,O-D|0)|0);if((L|0)<(c[P>>2]|0)){P=L;O=Q;while(1){S=O+D|0;c[q>>2]=S;T=P+1|0;U=c[(c[H>>2]|0)+(T<<2)>>2]|0;if((S|0)<(U|0)){V=c[I>>2]|0;W=j+(P<<3)|0;X=S;S=D+N|0;Y=+h[W>>3];while(1){Z=Y- +h[j+(c[V+(S<<2)>>2]<<3)>>3]*+h[y+(X<<3)>>3];h[W>>3]=Z;_=X+1|0;c[q>>2]=_;$=c[(c[H>>2]|0)+(T<<2)>>2]|0;if((_|0)<($|0)){X=_;S=S+1|0;Y=Z}else{aa=$;break}}}else{aa=U}if((T|0)<(c[(c[F>>2]|0)+(M<<2)>>2]|0)){P=T;O=aa}else{break}}}if((D|0)>1){Y=R+ +(fa(D-1|0,D)|0);qg(3872,5736,11600,p,y+(Q<<3)|0,o,j+(L<<3)|0,n)|0;ba=Y}else{ba=R}if((J|0)<=0){E=ba;break b}J=J-1|0;K=ba}}if((c[w>>2]|0)==0){i=m;return 0}J=x+4|0;if((c[J>>2]|0)<0){E=0.0;break}F=x+28|0;H=x+20|0;I=x+12|0;G=z+12|0;O=z+8|0;P=0;K=0.0;while(1){M=c[F>>2]|0;N=c[M+(P<<2)>>2]|0;S=c[H>>2]|0;c[o>>2]=(c[S+(N+1<<2)>>2]|0)-(c[S+(N<<2)>>2]|0);S=P+1|0;X=M+(S<<2)|0;M=(c[X>>2]|0)-N|0;c[p>>2]=M;W=c[(c[I>>2]|0)+(N<<2)>>2]|0;if((N|0)<(c[X>>2]|0)){X=N;Y=K;V=c[G>>2]|0;while(1){$=X+1|0;_=c[V+(X<<2)>>2]|0;Z=Y+ +((c[V+($<<2)>>2]|0)-_<<1|0);c[q>>2]=_;ca=c[G>>2]|0;if((_|0)<(c[ca+($<<2)>>2]|0)){da=c[O>>2]|0;ea=j+(X<<3)|0;ga=_;ha=+h[ea>>3];while(1){ia=ha- +h[j+(c[da+(ga<<2)>>2]<<3)>>3]*+h[A+(ga<<3)>>3];h[ea>>3]=ia;_=ga+1|0;c[q>>2]=_;ja=c[G>>2]|0;if((_|0)<(c[ja+($<<2)>>2]|0)){ga=_;ha=ia}else{ka=ja;break}}}else{ka=ca}if(($|0)<(c[(c[F>>2]|0)+(S<<2)>>2]|0)){X=$;Y=Z;V=ka}else{la=Z;break}}}else{la=K}Y=la+ +(fa(M+1|0,M)|0);V=y+(W<<3)|0;if((M|0)==1){X=j+(N<<3)|0;h[X>>3]=+h[X>>3]/+h[V>>3]}else{qg(11600,5736,8296,p,V,o,j+(N<<3)|0,n)|0}if((S|0)>(c[J>>2]|0)){E=Y;break}else{P=S;K=Y}}}else{if(C){if((c[u>>2]|0)==0){i=m;return 0}P=x+4|0;if((c[P>>2]|0)<0){E=0.0;break}J=x+28|0;F=x+20|0;G=x+12|0;O=x+16|0;I=0;K=0.0;while(1){H=c[J>>2]|0;V=c[H+(I<<2)>>2]|0;X=c[F>>2]|0;L=c[X+(V<<2)>>2]|0;Q=X+(V+1<<2)|0;X=(c[Q>>2]|0)-L|0;c[o>>2]=X;D=I+1|0;ga=(c[H+(D<<2)>>2]|0)-V|0;c[p>>2]=ga;H=c[(c[G>>2]|0)+(V<<2)>>2]|0;ea=X-ga|0;Y=K+ +(fa(ga-1|0,ga)|0)+ +(fa(ga<<1,ea)|0);do{if((ga|0)==1){da=L+1|0;T=c[Q>>2]|0;if((da|0)>=(T|0)){break}U=c[O>>2]|0;ja=j+(V<<3)|0;_=H;ma=da;do{_=_+1|0;da=j+(c[U+(ma<<2)>>2]<<3)|0;h[da>>3]=+h[da>>3]- +h[ja>>3]*+h[y+(_<<3)>>3];ma=ma+1|0;}while((ma|0)<(T|0))}else{T=j+(V<<3)|0;If(X,ga,y+(H<<3)|0,T);ma=c[o>>2]|0;_=c[p>>2]|0;Kf(ma,ma-_|0,_,y+(_+H<<3)|0,T,B);T=c[p>>2]|0;c[q>>2]=0;if((ea|0)<=0){break}_=c[O>>2]|0;ma=T+L|0;T=0;while(1){ja=B+(T<<3)|0;U=j+(c[_+(ma<<2)>>2]<<3)|0;h[U>>3]=+h[U>>3]- +h[ja>>3];h[ja>>3]=0.0;ja=T+1|0;c[q>>2]=ja;if((ja|0)<(ea|0)){ma=ma+1|0;T=ja}else{break}}}}while(0);if((D|0)>(c[P>>2]|0)){E=Y;break b}else{I=D;K=Y}}}if((c[w>>2]|0)==0){i=m;return 0}I=c[x+4>>2]|0;if(!((I|0)>-1)){E=0.0;break}P=x+28|0;O=x+20|0;G=x+12|0;F=z+12|0;J=z+8|0;ea=I;K=0.0;while(1){I=c[P>>2]|0;L=c[I+(ea<<2)>>2]|0;H=L+1|0;ga=c[O>>2]|0;X=(c[ga+(H<<2)>>2]|0)-(c[ga+(L<<2)>>2]|0)|0;c[o>>2]=X;ga=ea+1|0;V=(c[I+(ga<<2)>>2]|0)-L|0;c[p>>2]=V;Z=K+ +(fa(V+1|0,V)|0);I=y+(c[(c[G>>2]|0)+(L<<2)>>2]<<3)|0;c:do{if((V|0)==1){Q=j+(L<<3)|0;R=+h[Q>>3]/+h[I>>3];h[Q>>3]=R;S=c[(c[F>>2]|0)+(L<<2)>>2]|0;c[q>>2]=S;if((S|0)>=(c[(c[F>>2]|0)+(H<<2)>>2]|0)){na=Z;break}N=c[J>>2]|0;M=S;ha=R;while(1){S=j+(c[N+(M<<2)>>2]<<3)|0;h[S>>3]=+h[S>>3]-ha*+h[A+(M<<3)>>3];S=M+1|0;c[q>>2]=S;if((S|0)>=(c[(c[F>>2]|0)+(H<<2)>>2]|0)){na=Z;break c}M=S;ha=+h[Q>>3]}}else{Jf(X,V,I,j+(L<<3)|0);if((L|0)>=(c[(c[P>>2]|0)+(ga<<2)>>2]|0)){na=Z;break}Q=L;ha=Z;M=c[F>>2]|0;while(1){N=Q+1|0;S=c[M+(Q<<2)>>2]|0;R=ha+ +((c[M+(N<<2)>>2]|0)-S<<1|0);c[q>>2]=S;W=c[F>>2]|0;if((S|0)<(c[W+(N<<2)>>2]|0)){T=c[J>>2]|0;ma=j+(Q<<3)|0;_=S;while(1){S=j+(c[T+(_<<2)>>2]<<3)|0;h[S>>3]=+h[S>>3]- +h[ma>>3]*+h[A+(_<<3)>>3];S=_+1|0;c[q>>2]=S;ja=c[F>>2]|0;if((S|0)<(c[ja+(N<<2)>>2]|0)){_=S}else{oa=ja;break}}}else{oa=W}if((N|0)<(c[(c[P>>2]|0)+(ga<<2)>>2]|0)){Q=N;ha=R;M=oa}else{na=R;break}}}}while(0);if((ea|0)<=0){E=na;break b}ea=ea-1|0;K=na}}}while(0);A=(c[k+8>>2]|0)+44|0;g[A>>2]=E+ +g[A>>2];Xe(B);i=m;return 0}}while(0);c[q>>2]=-t;cf(3112,q)|0;i=m;return 0}function jg(a,b,d,e,f,g,j,k){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;g=+g;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0.0,U=0;l=i;m=j;n=i;i=i+4|0;i=i+7&-8;o=i;i=i+256|0;p=i;i=i+256|0;q=hg(a,8296)|0;r=c[d+20>>2]|0;s=c[r+4>>2]|0;c[n>>2]=0;t=(q|0)!=0;do{if(t){u=5}else{if((hg(a,5736)|0)!=0){u=5;break}if((hg(a,4784)|0)!=0){u=5;break}c[n>>2]=1}}while(0);a:do{if((u|0)==5){q=d+12|0;v=c[q>>2]|0;do{if((v|0)>=0){w=d+16|0;x=c[w>>2]|0;if((x|0)<0){break}if((f|0)==0){c[n>>2]=5;break a}if((k|0)==0){c[n>>2]=8;break a}if((c[n>>2]|0)!=0){break a}if((v|0)==0|(x|0)==0){i=l;return 0}x=b==0.0;if(x&g==1.0){i=l;return 0}y=(hg(a,8296)|0)==0;z=c[(y?w:q)>>2]|0;if((f|0)>0){A=0}else{A=fa(1-(c[(y?q:w)>>2]|0)|0,f)|0}if((k|0)>0){B=0}else{B=fa(1-z|0,k)|0}do{if(g!=1.0){y=g==0.0;C=(z|0)>0;if((k|0)==1){if(y){if(!C){break}tq(m|0,0,z<<3|0)|0;break}else{if(C){D=0}else{break}do{E=j+(D<<3)|0;h[E>>3]=+h[E>>3]*g;D=D+1|0;}while((D|0)<(z|0))}}else{if(y){if(C){F=0;G=B}else{break}while(1){h[j+(G<<3)>>3]=0.0;E=F+1|0;if((E|0)<(z|0)){F=E;G=G+k|0}else{break}}}else{if(C){H=0;I=B}else{break}while(1){y=j+(I<<3)|0;h[y>>3]=+h[y>>3]*g;y=H+1|0;if((y|0)<(z|0)){H=y;I=I+k|0}else{break}}}}}}while(0);if(x){i=l;return 0}if(!t){if((f|0)!=1){z=p|0;kb(z|0,2288,(J=i,i=i+24|0,c[J>>2]=14656,c[J+8>>2]=470,c[J+16>>2]=1264,J)|0)|0;i=J;Ke(z);i=l;return 0}z=c[w>>2]|0;if((z|0)<=0){i=l;return 0}C=c[r+12>>2]|0;y=r+8|0;E=0;K=B;L=c[C>>2]|0;while(1){M=E+1|0;N=c[C+(M<<2)>>2]|0;if((L|0)<(N|0)){O=c[y>>2]|0;P=0.0;Q=L;while(1){R=P+ +h[s+(Q<<3)>>3]*+h[e+(c[O+(Q<<2)>>2]<<3)>>3];S=Q+1|0;if((S|0)<(N|0)){P=R;Q=S}else{T=R;break}}}else{T=0.0}Q=j+(K<<3)|0;h[Q>>3]=T*b+ +h[Q>>3];if((M|0)<(z|0)){E=M;K=K+k|0;L=N}else{break}}i=l;return 0}if((k|0)!=1){L=o|0;kb(L|0,2288,(J=i,i=i+24|0,c[J>>2]=14656,c[J+8>>2]=454,c[J+16>>2]=1264,J)|0)|0;i=J;Ke(L);i=l;return 0}L=c[w>>2]|0;if((L|0)<=0){i=l;return 0}K=r+12|0;E=r+8|0;z=0;y=A;while(1){P=+h[e+(y<<3)>>3];do{if(P!=0.0){R=P*b;C=c[K>>2]|0;x=c[C+(z<<2)>>2]|0;Q=z+1|0;O=c[C+(Q<<2)>>2]|0;if((x|0)>=(O|0)){U=Q;break}C=c[E>>2]|0;S=x;while(1){x=j+(c[C+(S<<2)>>2]<<3)|0;h[x>>3]=+h[x>>3]+R*+h[s+(S<<3)>>3];x=S+1|0;if((x|0)<(O|0)){S=x}else{U=Q;break}}}else{U=z+1|0}}while(0);if((U|0)<(L|0)){z=U;y=y+f|0}else{break}}i=l;return 0}}while(0);c[n>>2]=3}}while(0);cf(832,n)|0;i=l;return 0}function kg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+256|0;j=h|0;k=f<<2;l=We(k)|0;m=l;if((l|0)==0){kb(j|0,3608,(n=i,i=i+24|0,c[n>>2]=11488,c[n+8>>2]=57,c[n+16>>2]=8280,n)|0)|0;i=n;Ke(j)}o=(f|0)>0;if(o){tq(l|0,0,k|0)|0}p=We(k)|0;q=p;if((p|0)==0){kb(j|0,3608,(n=i,i=i+24|0,c[n>>2]=11488,c[n+8>>2]=57,c[n+16>>2]=8280,n)|0)|0;i=n;Ke(j)}if(o){tq(p|0,0,k|0)|0}k=e<<2;r=We(k)|0;s=r;if((r|0)==0){kb(j|0,3608,(n=i,i=i+24|0,c[n>>2]=11488,c[n+8>>2]=57,c[n+16>>2]=8280,n)|0)|0;i=n;Ke(j)}if((e|0)>0){tq(r|0,0,k|0)|0;k=0;while(1){j=k+1|0;c[s+(k<<2)>>2]=f;if((j|0)<(e|0)){k=j}else{break}}}if(o){t=0}else{Xe(l);Xe(r);Xe(p);i=h;return 0}do{k=c[a+(t<<2)>>2]|0;e=b+(t<<2)|0;if((k|0)<(c[e>>2]|0)){j=k;do{k=s+(c[d+(j<<2)>>2]<<2)|0;n=c[k>>2]|0;c[k>>2]=(n|0)<(t|0)?n:t;j=j+1|0;}while((j|0)<(c[e>>2]|0))}t=t+1|0;}while((t|0)<(f|0));if(o){u=0}else{Xe(l);Xe(r);Xe(p);i=h;return 0}do{c[q+(u<<2)>>2]=u;c[m+(u<<2)>>2]=u;c[g+(u<<2)>>2]=f;o=c[a+(u<<2)>>2]|0;t=b+(u<<2)|0;if((o|0)<(c[t>>2]|0)){e=u;j=o;while(1){o=c[s+(c[d+(j<<2)>>2]<<2)>>2]|0;do{if((o|0)<(u|0)){n=c[q+(o<<2)>>2]|0;k=c[q+(n<<2)>>2]|0;if((k|0)==(n|0)){v=n}else{n=o;w=k;while(1){c[q+(n<<2)>>2]=w;k=c[q+(w<<2)>>2]|0;x=c[q+(k<<2)>>2]|0;if((x|0)==(k|0)){v=k;break}else{n=w;w=x}}}w=m+(v<<2)|0;n=c[w>>2]|0;if((n|0)==(u|0)){y=e;break}c[g+(n<<2)>>2]=u;c[q+(e<<2)>>2]=v;c[w>>2]=u;y=v}else{y=e}}while(0);o=j+1|0;if((o|0)<(c[t>>2]|0)){e=y;j=o}else{break}}}u=u+1|0;}while((u|0)<(f|0));Xe(l);Xe(r);Xe(p);i=h;return 0}function lg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+256|0;e=a+1|0;f=d|0;g=e<<2;h=We(g)|0;j=h;if((h|0)==0){kb(f|0,3608,(k=i,i=i+24|0,c[k>>2]=11488,c[k+8>>2]=57,c[k+16>>2]=8280,k)|0)|0;i=k;Ke(f)}l=(e|0)>0;if(l){tq(h|0,0,g|0)|0}m=We(g)|0;n=m;if((m|0)==0){kb(f|0,3608,(k=i,i=i+24|0,c[k>>2]=11488,c[k+8>>2]=57,c[k+16>>2]=8280,k)|0)|0;i=k;Ke(f)}if(l){tq(m|0,0,g|0)|0}o=We(g)|0;p=o;if((o|0)==0){kb(f|0,3608,(k=i,i=i+24|0,c[k>>2]=11488,c[k+8>>2]=57,c[k+16>>2]=8280,k)|0)|0;i=k;Ke(f)}if(l){tq(o|0,0,g|0)|0}do{if((a|0)<0){q=0;r=a}else{tq(h|0,-1|0,(a<<2)+4|0)|0;if((a|0)>0){s=a}else{q=0;r=0;break}while(1){g=s-1|0;o=j+(c[b+(g<<2)>>2]<<2)|0;c[n+(g<<2)>>2]=c[o>>2];c[o>>2]=g;if((g|0)>0){s=g}else{q=0;r=a;break}}}}while(0);while(1){if((q|0)==(a|0)){t=21;break}else{u=r}while(1){s=c[j+(u<<2)>>2]|0;if((s|0)==-1){break}else{u=s}}c[p+(u<<2)>>2]=q;s=c[n+(u<<2)>>2]|0;g=q+1|0;if((s|0)==-1){o=u;l=g;while(1){f=c[b+(o<<2)>>2]|0;c[p+(f<<2)>>2]=l;k=c[n+(f<<2)>>2]|0;v=l+1|0;if((k|0)==-1){o=f;l=v}else{w=k;x=v;break}}}else{w=s;x=g}if((x|0)==(e|0)){t=21;break}else{q=x;r=w}}if((t|0)==21){Xe(h);Xe(m);i=d;return p|0}return 0}function mg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0.0,j=0.0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0.0;e=c[a>>2]|0;if((e|0)<1){f=0;return f|0}g=c[d>>2]|0;if((g|0)<1){f=0;return f|0}if((e|0)==1){f=1;return f|0}if((g|0)==1){i=+h[b>>3];if(i<0.0){j=-0.0-i}else{j=i}h[30]=j;c[6216]=2;if((c[a>>2]|0)<2){f=1;return f|0}else{k=2;l=1;m=j}while(1){j=+h[b+(k-1<<3)>>3];g=j<0.0;if(g){n=-0.0-j}else{n=j}if(n>m){if(g){o=-0.0-j}else{o=j}h[30]=o;p=k;q=o}else{p=l;q=m}g=k+1|0;c[6216]=g;if((g|0)>(c[a>>2]|0)){f=p;break}else{k=g;l=p;m=q}}return f|0}else{c[6214]=1;q=+h[b>>3];if(q<0.0){r=-0.0-q}else{r=q}h[30]=r;p=(c[d>>2]|0)+1|0;c[6214]=p;c[6216]=2;if((c[a>>2]|0)<2){f=1;return f|0}else{s=1;t=p;u=r;v=2}while(1){r=+h[b+(t-1<<3)>>3];p=r<0.0;if(p){w=-0.0-r}else{w=r}if(w>u){if(p){x=-0.0-r}else{x=r}h[30]=x;y=v;z=x}else{y=s;z=u}p=t+(c[d>>2]|0)|0;c[6214]=p;l=v+1|0;c[6216]=l;if((l|0)>(c[a>>2]|0)){f=y;break}else{s=y;t=p;u=z;v=l}}return f|0}return 0}function ng(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,i=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;h[94]=0.0;e=c[a>>2]|0;if((e|0)<1){f=0.0;return+f}g=c[d>>2]|0;if((g|0)<1){f=0.0;return+f}if((g|0)!=1){i=fa(g,e)|0;c[6364]=i;c[6368]=1;g=c[d>>2]|0;if((g|0)<0?(i|0)<2:(i|0)>0){j=1;k=0.0;l=g}else{f=0.0;return+f}while(1){m=+h[b+(j-1<<3)>>3];if(m<0.0){n=-0.0-m}else{n=m}m=n+k;h[94]=m;g=j+l|0;c[6368]=g;o=c[d>>2]|0;if((o|0)<0?(g|0)>=(i|0):(g|0)<=(i|0)){j=g;k=m;l=o}else{f=m;break}}return+f}l=(e|0)%6|0;c[6366]=l;do{if((l|0)==0){p=0;q=0.0}else{c[6368]=1;if((l|0)<1){r=0.0}else{e=1;k=0.0;do{n=+h[b+(e-1<<3)>>3];if(n<0.0){s=-0.0-n}else{s=n}k=s+k;h[94]=k;e=e+1|0;}while((e|0)<=(l|0));c[6368]=e;r=k}if((c[a>>2]|0)<6){f=r}else{p=l;q=r;break}return+f}}while(0);l=p+1|0;c[6368]=l;if((l|0)>(c[a>>2]|0)){f=q;return+f}else{t=l;u=q}while(1){q=+h[b+(t-1<<3)>>3];if(q<0.0){v=-0.0-q}else{v=q}q=+h[b+(t<<3)>>3];if(q<0.0){w=-0.0-q}else{w=q}q=+h[b+(t+1<<3)>>3];if(q<0.0){x=-0.0-q}else{x=q}q=+h[b+(t+2<<3)>>3];if(q<0.0){y=-0.0-q}else{y=q}q=+h[b+(t+3<<3)>>3];if(q<0.0){z=-0.0-q}else{z=q}q=+h[b+(t+4<<3)>>3];if(q<0.0){A=-0.0-q}else{A=q}q=u+v+w+x+y+z+A;h[94]=q;l=t+6|0;c[6368]=l;if((l|0)>(c[a>>2]|0)){f=q;break}else{t=l;u=q}}return+f}function og(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var i=0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0;i=c[a>>2]|0;if((i|0)<1){return 0}j=+h[b>>3];if(j==0.0){return 0}do{if((c[e>>2]|0)==1){if((c[g>>2]|0)!=1){break}k=(i|0)%4|0;c[6356]=k;do{if((k|0)==0){l=0}else{c[6362]=1;if((k|0)>=1){m=0;n=1;o=j;while(1){p=f+(m<<3)|0;h[p>>3]=+h[p>>3]+o*+h[d+(m<<3)>>3];q=n+1|0;if((q|0)>(k|0)){break}m=n;n=q;o=+h[b>>3]}c[6362]=q}if((c[a>>2]|0)>=4){l=k;break}return 0}}while(0);k=l+1|0;c[6362]=k;if((k|0)>(c[a>>2]|0)){return 0}else{r=k}do{k=r-1|0;n=f+(k<<3)|0;h[n>>3]=+h[n>>3]+ +h[b>>3]*+h[d+(k<<3)>>3];k=f+(r<<3)|0;h[k>>3]=+h[k>>3]+ +h[b>>3]*+h[d+(r<<3)>>3];k=r+1|0;n=f+(k<<3)|0;h[n>>3]=+h[n>>3]+ +h[b>>3]*+h[d+(k<<3)>>3];k=r+2|0;n=f+(k<<3)|0;h[n>>3]=+h[n>>3]+ +h[b>>3]*+h[d+(k<<3)>>3];r=r+4|0;c[6362]=r;}while((r|0)<=(c[a>>2]|0));return 0}}while(0);c[6360]=1;c[6358]=1;r=c[e>>2]|0;if((r|0)<0){l=(fa(1-(c[a>>2]|0)|0,r)|0)+1|0;c[6360]=l;s=l}else{s=1}l=c[g>>2]|0;if((l|0)<0){r=(fa(1-(c[a>>2]|0)|0,l)|0)+1|0;c[6358]=r;t=r}else{t=1}c[6362]=1;if((c[a>>2]|0)<1){return 0}else{u=s;v=t;w=2;x=j}while(1){t=f+(v-1<<3)|0;h[t>>3]=x*+h[d+(u-1<<3)>>3]+ +h[t>>3];t=u+(c[e>>2]|0)|0;c[6360]=t;s=v+(c[g>>2]|0)|0;c[6358]=s;c[6362]=w;if((w|0)>(c[a>>2]|0)){break}u=t;v=s;w=w+1|0;x=+h[b>>3]}return 0}function pg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=c[a>>2]|0;if((g|0)<1){return 0}do{if((c[d>>2]|0)==1){if((c[f>>2]|0)!=1){break}i=(g|0)%7|0;c[6346]=i;do{if((i|0)==0){j=0}else{c[6352]=1;if((i|0)>=1){k=1;do{l=k-1|0;h[e+(l<<3)>>3]=+h[b+(l<<3)>>3];k=k+1|0;}while((k|0)<=(i|0));c[6352]=k}if((c[a>>2]|0)>=7){j=i;break}return 0}}while(0);i=j+1|0;c[6352]=i;if((i|0)>(c[a>>2]|0)){return 0}else{m=i}do{i=m-1|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];h[e+(m<<3)>>3]=+h[b+(m<<3)>>3];i=m+1|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];i=m+2|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];i=m+3|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];i=m+4|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];i=m+5|0;h[e+(i<<3)>>3]=+h[b+(i<<3)>>3];m=m+7|0;c[6352]=m;}while((m|0)<=(c[a>>2]|0));return 0}}while(0);c[6350]=1;c[6348]=1;m=c[d>>2]|0;if((m|0)<0){j=(fa(1-(c[a>>2]|0)|0,m)|0)+1|0;c[6350]=j;n=j}else{n=1}j=c[f>>2]|0;if((j|0)<0){m=(fa(1-(c[a>>2]|0)|0,j)|0)+1|0;c[6348]=m;o=m}else{o=1}c[6352]=1;if((c[a>>2]|0)<1){return 0}else{p=n;q=o;r=1}do{h[e+(q-1<<3)>>3]=+h[b+(p-1<<3)>>3];p=p+(c[d>>2]|0)|0;c[6350]=p;q=q+(c[f>>2]|0)|0;c[6348]=q;r=r+1|0;c[6352]=r;}while((r|0)<=(c[a>>2]|0));return 0}function qg(a,b,d,e,f,g,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0.0,H=0,I=0.0,J=0.0,K=0,L=0,M=0.0,N=0,O=0.0,P=0,Q=0.0,R=0,S=0,T=0,U=0.0,V=0,W=0,X=0.0,Y=0,Z=0,_=0,$=0.0,aa=0,ba=0,ca=0.0,da=0,ea=0,ga=0.0,ha=0,ia=0,ja=0,ka=0.0,la=0,ma=0,na=0.0,oa=0;c[6244]=0;do{if((hg(a,3280)|0)==0){if((hg(a,11472)|0)!=0){k=4;break}c[6244]=1}else{k=4}}while(0);a:do{if((k|0)==4){do{if((hg(b,8264)|0)==0){if((hg(b,5728)|0)!=0){break}if((hg(b,4776)|0)!=0){break}c[6244]=2;break a}}while(0);do{if((hg(d,3280)|0)==0){if((hg(d,8264)|0)!=0){break}c[6244]=3;break a}}while(0);l=c[e>>2]|0;if((l|0)<0){c[6244]=4;break}if((c[g>>2]|0)<(((l|0)>1?l:1)|0)){c[6244]=6;break}if((c[j>>2]|0)==0){c[6244]=8;break}if((c[6244]|0)!=0){break}if((l|0)==0){return 0}c[6234]=hg(d,8264)|0;l=c[j>>2]|0;do{if((l|0)<1){c[6236]=1-(fa((c[e>>2]|0)-1|0,l)|0)}else{if((l|0)==1){break}c[6236]=1}}while(0);l=(hg(b,8264)|0)==0;m=(hg(a,3280)|0)!=0;n=c[j>>2]|0;o=(n|0)==1;if(l){if(m){if(o){c[6240]=1;if((c[e>>2]|0)<1){return 0}else{p=1}do{l=p-1|0;q=i+(l<<3)|0;r=+h[q>>3];h[31]=r;c[6246]=1;if((l|0)<1){s=r}else{t=1;u=r;while(1){v=t-1|0;r=+h[f+((fa(c[g>>2]|0,l)|0)+v<<3)>>3];w=u-r*+h[i+(v<<3)>>3];h[31]=w;v=t+1|0;c[6246]=v;if((v|0)>(l|0)){s=w;break}else{t=v;u=w}}}if((c[6234]|0)==0){x=s}else{u=s/+h[f+((fa(c[g>>2]|0,l)|0)+l<<3)>>3];h[31]=u;x=u}h[q>>3]=x;p=p+1|0;c[6240]=p;}while((p|0)<=(c[e>>2]|0));return 0}else{t=c[6236]|0;c[6238]=t;c[6240]=1;if((c[e>>2]|0)<1){return 0}else{y=t;z=1}do{v=i+(y-1<<3)|0;u=+h[v>>3];h[31]=u;c[6242]=t;c[6246]=1;A=z-1|0;if((A|0)<1){B=u}else{C=1;D=t;w=u;while(1){u=+h[f+(C-1+(fa(c[g>>2]|0,A)|0)<<3)>>3];r=w-u*+h[i+(D-1<<3)>>3];h[31]=r;E=D+(c[j>>2]|0)|0;c[6242]=E;F=C+1|0;c[6246]=F;if((F|0)>(A|0)){B=r;break}else{C=F;D=E;w=r}}}if((c[6234]|0)==0){G=B}else{w=B/+h[f+((fa(c[g>>2]|0,A)|0)+A<<3)>>3];h[31]=w;G=w}h[v>>3]=G;y=y+(c[j>>2]|0)|0;c[6238]=y;z=z+1|0;c[6240]=z;}while((z|0)<=(c[e>>2]|0));return 0}}else{t=c[e>>2]|0;if(o){c[6240]=t;if((t|0)>0){H=t}else{return 0}while(1){D=H-1|0;C=i+(D<<3)|0;w=+h[C>>3];h[31]=w;q=c[e>>2]|0;c[6246]=q;l=H+1|0;if((q|0)<(l|0)){I=w}else{E=q;r=w;while(1){q=E-1|0;w=+h[f+((fa(c[g>>2]|0,D)|0)+q<<3)>>3];u=r-w*+h[i+(q<<3)>>3];h[31]=u;c[6246]=q;if((q|0)<(l|0)){I=u;break}else{E=q;r=u}}}if((c[6234]|0)==0){J=I}else{r=I/+h[f+((fa(c[g>>2]|0,D)|0)+D<<3)>>3];h[31]=r;J=r}h[C>>3]=J;c[6240]=D;if((D|0)>0){H=D}else{break}}return 0}else{E=fa(t-1|0,n)|0;l=(c[6236]|0)+E|0;c[6236]=l;c[6238]=l;E=c[e>>2]|0;c[6240]=E;if((E|0)>0){K=l;L=E}else{return 0}do{E=i+(K-1<<3)|0;r=+h[E>>3];h[31]=r;c[6242]=l;v=c[e>>2]|0;c[6246]=v;A=L+1|0;if((v|0)<(A|0)){M=r}else{q=v;v=l;u=r;while(1){F=q-1|0;r=+h[f+(F+(fa(c[g>>2]|0,L-1|0)|0)<<3)>>3];w=u-r*+h[i+(v-1<<3)>>3];h[31]=w;N=v-(c[j>>2]|0)|0;c[6242]=N;c[6246]=F;if((F|0)<(A|0)){M=w;break}else{q=F;v=N;u=w}}}L=L-1|0;if((c[6234]|0)==0){O=M}else{u=M/+h[f+((fa(c[g>>2]|0,L)|0)+L<<3)>>3];h[31]=u;O=u}h[E>>3]=O;K=K-(c[j>>2]|0)|0;c[6238]=K;c[6240]=L;}while((L|0)>0);return 0}}}if(!m){if(o){c[6240]=1;if((c[e>>2]|0)<1){return 0}else{P=1}while(1){l=P-1|0;t=i+(l<<3)|0;u=+h[t>>3];b:do{if(u!=0.0){if((c[6234]|0)==0){Q=u}else{w=u/+h[f+((fa(c[g>>2]|0,l)|0)+l<<3)>>3];h[t>>3]=w;Q=w}h[31]=Q;v=P+1|0;c[6246]=v;if((v|0)>(c[e>>2]|0)){R=v;break}else{S=P;T=v;U=Q}while(1){w=U*+h[f+((fa(l,c[g>>2]|0)|0)+S<<3)>>3];q=i+(S<<3)|0;h[q>>3]=+h[q>>3]-w;q=T+1|0;c[6246]=q;if((q|0)>(c[e>>2]|0)){R=v;break b}S=T;T=q;U=+h[31]}}else{R=P+1|0}}while(0);c[6240]=R;if((R|0)>(c[e>>2]|0)){break}else{P=R}}return 0}else{m=c[6236]|0;c[6238]=m;c[6240]=1;if((c[e>>2]|0)<1){return 0}else{V=1;W=m}while(1){m=i+(W-1<<3)|0;u=+h[m>>3];c:do{if(u!=0.0){if((c[6234]|0)==0){X=u}else{l=V-1|0;w=u/+h[f+((fa(c[g>>2]|0,l)|0)+l<<3)>>3];h[m>>3]=w;X=w}h[31]=X;c[6242]=W;l=V+1|0;c[6246]=l;if((l|0)>(c[e>>2]|0)){Y=l;break}else{Z=W;_=l;$=X}while(1){t=Z+(c[j>>2]|0)|0;c[6242]=t;w=$*+h[f+(_-1+(fa(V-1|0,c[g>>2]|0)|0)<<3)>>3];E=i+(t-1<<3)|0;h[E>>3]=+h[E>>3]-w;E=_+1|0;c[6246]=E;if((E|0)>(c[e>>2]|0)){Y=l;break c}Z=t;_=E;$=+h[31]}}else{Y=V+1|0}}while(0);m=W+(c[j>>2]|0)|0;c[6238]=m;c[6240]=Y;if((Y|0)>(c[e>>2]|0)){break}else{V=Y;W=m}}return 0}}if(o){m=c[e>>2]|0;c[6240]=m;if((m|0)>0){aa=m}else{return 0}d:while(1){ba=aa-1|0;m=i+(ba<<3)|0;u=+h[m>>3];e:do{if(u!=0.0){if((c[6234]|0)==0){ca=u}else{w=u/+h[f+((fa(c[g>>2]|0,ba)|0)+ba<<3)>>3];h[m>>3]=w;ca=w}h[31]=ca;c[6246]=ba;if((ba|0)>0){da=aa;ea=ba;ga=ca}else{break d}while(1){l=da-2|0;w=ga*+h[f+((fa(ba,c[g>>2]|0)|0)+l<<3)>>3];E=i+(l<<3)|0;h[E>>3]=+h[E>>3]-w;E=ea-1|0;c[6246]=E;if((E|0)<=0){break e}da=ea;ea=E;ga=+h[31]}}}while(0);c[6240]=ba;if((ba|0)>0){aa=ba}else{k=92;break}}if((k|0)==92){return 0}c[6240]=ba;return 0}o=(fa((c[e>>2]|0)-1|0,n)|0)+(c[6236]|0)|0;c[6238]=o;m=c[e>>2]|0;c[6240]=m;if((m|0)>0){ha=m;ia=o}else{return 0}f:while(1){o=i+(ia-1<<3)|0;u=+h[o>>3];g:do{if(u!=0.0){ja=ha-1|0;if((c[6234]|0)==0){ka=u}else{w=u/+h[f+((fa(c[g>>2]|0,ja)|0)+ja<<3)>>3];h[o>>3]=w;ka=w}h[31]=ka;c[6242]=ia;c[6246]=ja;if((ja|0)>0){la=ia;ma=ja;na=ka}else{break f}while(1){m=la-(c[j>>2]|0)|0;c[6242]=m;E=ma-1|0;w=na*+h[f+(E+(fa(ja,c[g>>2]|0)|0)<<3)>>3];l=i+(m-1<<3)|0;h[l>>3]=+h[l>>3]-w;c[6246]=E;if((E|0)<=0){oa=ja;break g}la=m;ma=E;na=+h[31]}}else{oa=ha-1|0}}while(0);o=ia-(c[j>>2]|0)|0;c[6238]=o;c[6240]=oa;if((oa|0)>0){ha=oa;ia=o}else{k=92;break}}if((k|0)==92){return 0}c[6238]=ia-(c[j>>2]|0);c[6240]=ja;return 0}}while(0);cf(3104,24976)|0;return 0}function rg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;Ng(28272,h,28400);c[7316]=19012;c[7318]=19032;c[7317]=0;Sh(29272,28272);c[7336]=0;c[7337]=-1;j=c[s>>2]|0;c[7044]=18792;an(28180);tq(28184,0,24)|0;c[7044]=19160;c[7052]=j;bn(g,28180);k=en(g,28600)|0;l=k;cn(g);c[7053]=l;c[7054]=28408;a[28220]=(Ec[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[7250]=18916;c[7251]=18936;Sh(29004,28176);c[7269]=0;c[7270]=-1;l=c[r>>2]|0;c[7056]=18792;an(28228);tq(28232,0,24)|0;c[7056]=19160;c[7064]=l;bn(f,28228);k=en(f,28600)|0;g=k;cn(f);c[7065]=g;c[7066]=28416;a[28268]=(Ec[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[7294]=18916;c[7295]=18936;Sh(29180,28224);c[7313]=0;c[7314]=-1;g=c[(c[(c[7294]|0)-12>>2]|0)+29200>>2]|0;c[7272]=18916;c[7273]=18936;Sh(29092,g);c[7291]=0;c[7292]=-1;c[(c[(c[7316]|0)-12>>2]|0)+29336>>2]=29e3;g=(c[(c[7294]|0)-12>>2]|0)+29180|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[7294]|0)-12>>2]|0)+29248>>2]=29e3;zg(28120,h,28424);c[7228]=18964;c[7230]=18984;c[7229]=0;Sh(28920,28120);c[7248]=0;c[7249]=-1;c[7006]=18720;an(28028);tq(28032,0,24)|0;c[7006]=19088;c[7014]=j;bn(e,28028);j=en(e,28592)|0;h=j;cn(e);c[7015]=h;c[7016]=28432;a[28068]=(Ec[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[7158]=18868;c[7159]=18888;Sh(28636,28024);c[7177]=0;c[7178]=-1;c[7018]=18720;an(28076);tq(28080,0,24)|0;c[7018]=19088;c[7026]=l;bn(d,28076);l=en(d,28592)|0;h=l;cn(d);c[7027]=h;c[7028]=28440;a[28116]=(Ec[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[7202]=18868;c[7203]=18888;Sh(28812,28072);c[7221]=0;c[7222]=-1;h=c[(c[(c[7202]|0)-12>>2]|0)+28832>>2]|0;c[7180]=18868;c[7181]=18888;Sh(28724,h);c[7199]=0;c[7200]=-1;c[(c[(c[7228]|0)-12>>2]|0)+28984>>2]=28632;h=(c[(c[7202]|0)-12>>2]|0)+28812|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[7202]|0)-12>>2]|0)+28880>>2]=28632;i=b;return}function sg(a){a=a|0;xi(29e3)|0;xi(29088)|0;Di(28632)|0;Di(28720)|0;return}function tg(a){a=a|0;c[a>>2]=18720;cn(a+4|0);return}function ug(a){a=a|0;c[a>>2]=18720;cn(a+4|0);bq(a);return}function vg(b,d){b=b|0;d=d|0;var e=0;Ec[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=en(d,28592)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Ec[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function wg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Nc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Ka(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ia(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function xg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]|0)!=0){f=Ka(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((Bc[c[(c[g>>2]|0)+52>>2]&63](b,c[h>>2]|0)|0)==-1){f=i;j=6;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=6;break}}if((j|0)==6){return f|0}return 0}function yg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Ka(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Ic[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Ka(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Ka(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function zg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=18720;j=b+4|0;an(j);tq(b+8|0,0,24)|0;c[h>>2]=19488;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;bn(g,j);j=en(g,28592)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Ec[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Ec[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){cn(g);i=f;return}mm(792);cn(g);i=f;return}function Ag(a){a=a|0;c[a>>2]=18720;cn(a+4|0);return}function Bg(a){a=a|0;c[a>>2]=18720;cn(a+4|0);bq(a);return}function Cg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=en(d,28592)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Ec[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Ec[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}mm(792);return}function Dg(a){a=a|0;return Gg(a,0)|0}function Eg(a){a=a|0;return Gg(a,1)|0}function Fg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Ic[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Zb(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Gg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=ab(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=Ic[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=14;break}else if((x|0)==2){n=-1;y=22;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=ab(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((Zb(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function Hg(a){a=a|0;c[a>>2]=18792;cn(a+4|0);return}function Ig(a){a=a|0;c[a>>2]=18792;cn(a+4|0);bq(a);return}function Jg(b,d){b=b|0;d=d|0;var e=0;Ec[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=en(d,28600)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(Ec[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Kg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=Nc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Ka(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((Ia(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Lg(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]|0)!=0){g=Ka(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((Bc[c[(c[h>>2]|0)+52>>2]&63](b,d[i]|0)|0)==-1){g=j;k=6;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=6;break}}if((k|0)==6){return g|0}return 0}function Mg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Ka(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Ic[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Ka(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Ka(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Ng(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=18792;j=b+4|0;an(j);tq(b+8|0,0,24)|0;c[h>>2]=19560;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;bn(g,j);j=en(g,28600)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=Ec[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(Ec[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){cn(g);i=f;return}mm(792);cn(g);i=f;return}function Og(a){a=a|0;c[a>>2]=18792;cn(a+4|0);return}function Pg(a){a=a|0;c[a>>2]=18792;cn(a+4|0);bq(a);return}function Qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=en(d,28600)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=Ec[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(Ec[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}mm(792);return}function Rg(a){a=a|0;return Ug(a,0)|0}function Sg(a){a=a|0;return Ug(a,1)|0}function Tg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Ic[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Zb(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Ug(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=ab(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=Ic[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=14;break}else if((y|0)==2){o=-1;z=23;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=ab(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if((Zb(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function Vg(){rg(0);cb(148,29352,t|0)|0;return}function Wg(a){a=a|0;return}function Xg(a){a=a|0;var b=0;b=a+4|0;H=c[b>>2]|0,c[b>>2]=H+1,H;return}function Yg(a){a=a|0;var b=0,d=0;b=a+4|0;if(((H=c[b>>2]|0,c[b>>2]=H+ -1,H)|0)!=0){d=0;return d|0}zc[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function Zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=16976;d=a+4|0;if((d|0)==0){return}a=rq(b|0)|0;e=aq(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;sq(f|0,b|0,a+1|0)|0;return}function _g(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16976;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}cq(e)}}while(0);bq(a);return}function $g(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16976;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}cq(d);e=a|0;return}function ah(a){a=a|0;return c[a+4>>2]|0}function bh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=16912;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=rq(f|0)|0;b=aq(d+13|0)|0;c[b+4>>2]=d;c[b>>2]=d;g=b+12|0;c[e>>2]=g;c[b+8>>2]=0;sq(g|0,f|0,d+1|0)|0;return}function ch(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=16912;d=a+4|0;if((d|0)==0){return}a=rq(b|0)|0;e=aq(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;sq(f|0,b|0,a+1|0)|0;return}function dh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16912;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}cq(e)}}while(0);bq(a);return}function eh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16912;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}cq(d);e=a|0;return}function fh(a){a=a|0;return c[a+4>>2]|0}function gh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16976;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}cq(e)}}while(0);bq(a);return}function hh(a){a=a|0;return}function ih(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function jh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;Fc[c[(c[a>>2]|0)+12>>2]&7](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function kh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function lh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=Vb(e|0)|0;e=rq(d|0)|0;if(e>>>0>4294967279>>>0){rh(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;sq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=$p(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;sq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function mh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f|0;h=d|0;j=c[h>>2]|0;k=e;do{if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{Ch(e,8104,2)|0;n=c[h>>2]|0}l=c[d+4>>2]|0;Fc[c[(c[l>>2]|0)+24>>2]&7](g,l,n);l=g;o=a[l]|0;if((o&1)==0){p=(o&255)>>>1;q=g+1|0}else{p=c[g+4>>2]|0;q=c[g+8>>2]|0}Ch(e,q,p)|0;if((a[l]&1)==0){break}bq(c[g+8>>2]|0)}}while(0);g=b;c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];tq(k|0,0,12)|0;i=f;return}function nh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=rq(e|0)|0;if(j>>>0>4294967279>>>0){rh(0)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=$p(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}sq(k|0,e|0,j)|0;a[k+j|0]=0;mh(g,d,h);bh(b|0,g);if(!((a[g]&1)==0)){bq(c[g+8>>2]|0)}if((a[h]&1)==0){n=b|0;c[n>>2]=19056;o=b+8|0;p=d;q=o;r=p|0;s=c[r>>2]|0;t=p+4|0;u=c[t>>2]|0;v=q|0;c[v>>2]=s;w=q+4|0;c[w>>2]=u;i=f;return}bq(c[h+8>>2]|0);n=b|0;c[n>>2]=19056;o=b+8|0;p=d;q=o;r=p|0;s=c[r>>2]|0;t=p+4|0;u=c[t>>2]|0;v=q|0;c[v>>2]=s;w=q+4|0;c[w>>2]=u;i=f;return}function oh(a){a=a|0;eh(a|0);bq(a);return}function ph(a){a=a|0;eh(a|0);return}function qh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{Va(28352,28328)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;zc[d&511](b);h;c[a>>2]=-1;i;Pb(28352)|0;return}function rh(a){a=a|0;a=oc(8)|0;Zg(a,13088);c[a>>2]=16944;Fb(a|0,22864,38)}function sh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){rh(0)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=$p(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}sq(g|0,e|0,f)|0;a[g+f|0]=0;return}function th(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){rh(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;sq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=$p(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;sq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function uh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(d>>>0>4294967279>>>0){rh(0)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0;tq(f|0,e|0,d|0)|0;g=f+d|0;a[g]=0;return}else{h=d+16&-16;i=$p(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=d;f=i;tq(f|0,e|0,d|0)|0;g=f+d|0;a[g]=0;return}}function vh(b){b=b|0;if((a[b]&1)==0){return}bq(c[b+8>>2]|0);return}function wh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==(d|0)){return b|0}e=a[d]|0;if((e&1)==0){f=(e&255)>>>1;g=d+1|0}else{f=c[d+4>>2]|0;g=c[d+8>>2]|0}d=b;e=a[d]|0;if((e&1)==0){h=10;i=e}else{e=c[b>>2]|0;h=(e&-2)-1|0;i=e&255}e=(i&1)==0;if(h>>>0<f>>>0){if(e){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Dh(b,h,f-h|0,j,0,j,f,g);return b|0}if(e){k=b+1|0}else{k=c[b+8>>2]|0}uq(k|0,g|0,f|0)|0;a[k+f|0]=0;if((a[d]&1)==0){a[d]=f<<1;return b|0}else{c[b+4>>2]=f;return b|0}return 0}function xh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=rq(d|0)|0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Dh(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+1|0}else{k=c[b+8>>2]|0}uq(k|0,d|0,e|0)|0;a[k+e|0]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function yh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=(g&1)==0;if(h){i=(g&255)>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){zh(b,d-i|0,e)|0;return}if(h){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function zh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){Eh(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}tq(l+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function Ah(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>4294967279>>>0){rh(0)}e=b;f=a[e]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<11>>>0){j=10}else{j=(f+16&-16)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==10){k=b+1|0;l=c[b+8>>2]|0;m=1;n=0}else{f=j+1|0;if(j>>>0>g>>>0){o=$p(f)|0}else{o=$p(f)|0}if((h&1)==0){k=o;l=b+1|0;m=0;n=1;break}else{k=o;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}sq(k|0,l|0,p+1|0)|0;if(m){bq(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function Bh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=10}if((h|0)==(i|0)){Eh(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+1|0;l=h+1|0;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}}function Ch(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){Dh(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}sq(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function Dh(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){rh(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=$p(o)|0;if((g|0)!=0){sq(e|0,k|0,g)|0}if((i|0)!=0){sq(e+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){sq(e+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}bq(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function Eh(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){rh(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=$p(n)|0;if((g|0)!=0){sq(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){sq(e+(i+g)|0,j+(h+g)|0,m-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}bq(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function Fh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){rh(0)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=vp(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=$p(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=vp(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function Gh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){rh(0)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=xp(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=$p(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=xp(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function Hh(b){b=b|0;if((a[b]&1)==0){return}bq(c[b+8>>2]|0);return}function Ih(a,b){a=a|0;b=b|0;return Jh(a,b,up(b)|0)|0}function Jh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Mh(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+4|0}else{k=c[b+8>>2]|0}wp(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Kh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>1073741807>>>0){rh(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=1}else{j=(f+4&-4)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{f=(j<<2)+4|0;if(j>>>0>g>>>0){o=$p(f)|0}else{o=$p(f)|0}f=o;if((h&1)==0){k=f;l=b+4|0;m=0;n=1;break}else{k=f;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}vp(k,l,p+1|0)|0;if(m){bq(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function Lh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=1}if((h|0)==(i|0)){Nh(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+4|0;l=h+1|0;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}}function Mh(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){rh(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=$p(o<<2)|0;if((g|0)!=0){vp(e,k,g)|0}if((i|0)!=0){vp(e+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){vp(e+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}bq(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function Nh(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){rh(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=$p(n<<2)|0;if((g|0)!=0){vp(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){vp(e+(i+g<<2)|0,j+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}bq(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function Oh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=oc(16)|0;do{if((a[29472]|0)==0){if((ub(29472)|0)==0){break}c[6870]=18488;cb(72,27480,t|0)|0}}while(0);b=xq(27480,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=J|0;nh(e,f,9744);c[e>>2]=17624;Fb(e|0,23408,32)}function Ph(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=17600;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;Fc[c[(c[d>>2]|0)+(f<<2)>>2]&7](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}cn(a+28|0);Vp(c[d>>2]|0);Vp(c[e>>2]|0);Vp(c[a+48>>2]|0);Vp(c[a+60>>2]|0);return}function Qh(a,b){a=a|0;b=b|0;bn(a,b+28|0);return}function Rh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=b+28|0;bn(a,e);dn(e,d)|0;d=c[b+40>>2]|0;if((d|0)==0){return}e=b+32|0;a=b+36|0;f=d;do{f=f-1|0;Fc[c[(c[e>>2]|0)+(f<<2)>>2]&7](1,b,c[(c[a>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0);return}function Sh(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;tq(a+32|0,0,40)|0;if((b|0)==0){return}an(b);return}function Th(a){a=a|0;c[a>>2]=18792;cn(a+4|0);bq(a);return}function Uh(a){a=a|0;c[a>>2]=18792;cn(a+4|0);return}function Vh(a,b){a=a|0;b=b|0;return}function Wh(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Xh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Yh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Zh(a){a=a|0;return 0}function _h(a){a=a|0;return 0}function $h(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=Ec[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=8;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=8;break}}if((m|0)==8){return g|0}return 0}function ai(a){a=a|0;return-1|0}function bi(a){a=a|0;var b=0,e=0;if((Ec[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function ci(a,b){a=a|0;b=b|0;return-1|0}function di(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((Bc[c[(c[g>>2]|0)+52>>2]&63](b,d[l]|0)|0)==-1){h=k;n=7;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=7;break}}if((n|0)==7){return h|0}return 0}function ei(a,b){a=a|0;b=b|0;return-1|0}function fi(a){a=a|0;c[a>>2]=18720;cn(a+4|0);bq(a);return}function gi(a){a=a|0;c[a>>2]=18720;cn(a+4|0);return}function hi(a,b){a=a|0;b=b|0;return}function ii(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function ji(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function ki(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function li(a){a=a|0;return 0}function mi(a){a=a|0;return 0}function ni(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=Ec[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=7;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=7;break}}if((l|0)==7){return f|0}return 0}function oi(a){a=a|0;return-1|0}function pi(a){a=a|0;var b=0,d=0;if((Ec[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function qi(a,b){a=a|0;b=b|0;return-1|0}function ri(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((Bc[c[(c[e>>2]|0)+52>>2]&63](a,c[j>>2]|0)|0)==-1){f=i;l=8;break}}k=i+1|0;if((k|0)>=(d|0)){f=k;l=8;break}i=k;j=j+4|0}if((l|0)==8){return f|0}return 0}function si(a,b){a=a|0;b=b|0;return-1|0}function ti(a){a=a|0;Ph(a+8|0);bq(a);return}function ui(a){a=a|0;Ph(a+8|0);return}function vi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;Ph(b+(d+8)|0);bq(b+d|0);return}function wi(a){a=a|0;Ph(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function xi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{xi(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Ec[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;Oh(h+k|0,c[h+(k+16)>>2]|1)}}while(0);Ii(e);i=d;return b|0}function yi(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{Wa()}}function zi(a){a=a|0;Ph(a+8|0);bq(a);return}function Ai(a){a=a|0;Ph(a+8|0);return}function Bi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;Ph(b+(d+8)|0);bq(b+d|0);return}function Ci(a){a=a|0;Ph(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Di(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Di(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((Ec[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;Oh(h+k|0,c[h+(k+16)>>2]|1)}}while(0);Ri(e);i=d;return b|0}function Ei(a){a=a|0;Ph(a+4|0);bq(a);return}function Fi(a){a=a|0;Ph(a+4|0);return}function Gi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;Ph(b+(d+4)|0);bq(b+d|0);return}function Hi(a){a=a|0;Ph(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function Ii(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(zb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Ec[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;Oh(d+b|0,c[d+(b+16)>>2]|1);return}function Ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{xi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;bn(j,o+(q+28)|0);p=en(j,28552)|0;cn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){bn(g,o+(r+28)|0);v=en(g,28904)|0;w=Bc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;cn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+16>>2]|0;c[f>>2]=s;Lc[u&63](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;Oh(o+r|0,c[o+(r+16)>>2]|5)}}while(0);Ii(h);i=e;return b|0}function Ki(b,d){b=b|0;d=+d;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{xi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;bn(j,o+(q+28)|0);p=en(j,28552)|0;cn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){bn(g,o+(r+28)|0);v=en(g,28904)|0;w=Bc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;cn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+32>>2]|0;c[f>>2]=s;Gc[u&15](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;Oh(o+r|0,c[o+(r+16)>>2]|5)}}while(0);Ii(h);i=e;return b|0}function Li(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{xi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;bn(j,o+(q+28)|0);p=en(j,28552)|0;cn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){bn(g,o+(r+28)|0);v=en(g,28904)|0;w=Bc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;cn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+40>>2]|0;c[f>>2]=s;Lc[u&63](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;Oh(o+r|0,c[o+(r+16)>>2]|5)}}while(0);Ii(h);i=e;return b|0}function Mi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;g=f|0;a[g]=0;c[f+4>>2]=b;h=b;j=c[h>>2]|0;k=c[j-12>>2]|0;l=b;do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;if((m|0)==0){n=j;o=k}else{xi(m)|0;m=c[h>>2]|0;n=m;o=c[m-12>>2]|0}a[g]=1;m=c[l+(o+24)>>2]|0;p=m;if((m|0)==0){q=n}else{r=m+24|0;s=c[r>>2]|0;if((s|0)!=(c[m+28>>2]|0)){c[r>>2]=s+1;a[s]=d;break}if(!((Bc[c[(c[m>>2]|0)+52>>2]&63](p,d&255)|0)==-1)){break}q=c[h>>2]|0}p=c[q-12>>2]|0;Oh(l+p|0,c[l+(p+16)>>2]|1)}}while(0);Ii(f);i=e;return b|0}function Ni(a){a=a|0;Ph(a+4|0);bq(a);return}function Oi(a){a=a|0;Ph(a+4|0);return}function Pi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;Ph(b+(d+4)|0);bq(b+d|0);return}function Qi(a){a=a|0;Ph(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function Ri(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(zb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((Ec[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;Oh(d+b|0,c[d+(b+16)>>2]|1);return}function Si(a){a=a|0;return 10792}function Ti(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){th(a,13296,35);return}else{lh(a,b|0,c);return}}function Ui(a){a=a|0;hh(a|0);return}function Vi(a){a=a|0;ph(a|0);bq(a);return}function Wi(a){a=a|0;ph(a|0);return}function Xi(a){a=a|0;Ph(a);bq(a);return}function Yi(a){a=a|0;hh(a|0);bq(a);return}function Zi(a){a=a|0;Wg(a|0);bq(a);return}function _i(a){a=a|0;Wg(a|0);return}function $i(a){a=a|0;Wg(a|0);return}function aj(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=7;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=7;break}if(l<<24>>24<k<<24>>24){i=1;j=7;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break a}else{b=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}



function we(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;e=i;i=i+48|0;f=e|0;g=e+8|0;j=d+4|0;k=c[j>>2]|0;l=c[d+8>>2]|0;a[g|0]=0;m=g+4|0;tq(m|0,0,32)|0;n=g+8|0;c[n>>2]=k;k=g+28|0;c[k>>2]=0;o=g+12|0;p=l<<2;q=p+4|0;r=Up(q)|0;s=r;c[o>>2]=s;if((r|0)==0){id();return 0}c[m>>2]=l;t=g+16|0;tq(r|0,0,q|0)|0;if(!((l|0)>-1)){bc(8144,7760,138,15560);return 0}q=(l|0)>0;if(q){tq(r|0,0,p|0)|0}r=c[j>>2]|0;if((r|0)>0){u=c[d+24>>2]|0;v=c[d+12>>2]|0;w=c[d+16>>2]|0;x=(w|0)==0;y=0;z=r;while(1){r=c[v+(y<<2)>>2]|0;if(x){A=c[v+(y+1<<2)>>2]|0}else{A=(c[w+(y<<2)>>2]|0)+r|0}if((r|0)<(A|0)){B=r;do{r=s+(c[u+(B<<2)>>2]<<2)|0;c[r>>2]=(c[r>>2]|0)+1;B=B+1|0;}while((B|0)<(A|0));C=c[j>>2]|0}else{C=z}B=y+1|0;if((B|0)<(C|0)){y=B;z=C}else{break}}}if(l>>>0>1073741823>>>0){id();return 0}if((Zp(f,16,p)|0)==0){D=c[f>>2]|0}else{c[f>>2]=0;D=0}if(!((D|0)!=0|(p|0)==0)){id();return 0}p=D;a:do{if(q){f=0;C=0;while(1){z=s+(C<<2)|0;y=c[z>>2]|0;c[z>>2]=f;if((l|0)<=(C|0)){break}c[p+(C<<2)>>2]=f;z=y+f|0;y=C+1|0;if((y|0)<(l|0)){f=z;C=y}else{E=z;break a}}bc(12824,12760,378,15696);return 0}else{E=0}}while(0);c[s+(l<<2)>>2]=E;s=g+20|0;te(s,E,0.0);E=c[j>>2]|0;do{if((E|0)>0){q=c[d+20>>2]|0;C=c[d+24>>2]|0;f=c[d+12>>2]|0;z=c[d+16>>2]|0;y=c[g+24>>2]|0;A=c[s>>2]|0;b:do{if((z|0)==0){u=0;w=E;while(1){v=c[f+(u<<2)>>2]|0;x=c[f+(u+1<<2)>>2]|0;if((v|0)<(x|0)){B=v;do{v=c[C+(B<<2)>>2]|0;if(!((v|0)>-1&(l|0)>(v|0))){break b}r=p+(v<<2)|0;v=c[r>>2]|0;c[r>>2]=v+1;c[y+(v<<2)>>2]=u;h[A+(v<<3)>>3]=+h[q+(B<<3)>>3];B=B+1|0;}while((B|0)<(x|0));F=c[j>>2]|0}else{F=w}x=u+1|0;if((x|0)<(F|0)){u=x;w=F}else{G=50;break}}}else{w=0;u=E;while(1){x=c[f+(w<<2)>>2]|0;B=c[z+(w<<2)>>2]|0;v=B+x|0;if((B|0)>0){B=x;do{x=c[C+(B<<2)>>2]|0;if(!((x|0)>-1&(l|0)>(x|0))){break b}r=p+(x<<2)|0;x=c[r>>2]|0;c[r>>2]=x+1;c[y+(x<<2)>>2]=w;h[A+(x<<3)>>3]=+h[q+(B<<3)>>3];B=B+1|0;}while((B|0)<(v|0));H=c[j>>2]|0}else{H=u}v=w+1|0;if((v|0)<(H|0)){w=v;u=H}else{G=50;break}}}}while(0);if((G|0)==50){I=A;J=y;K=g+20|0;break}bc(12824,12760,378,15696);return 0}else{q=g+20|0;I=c[q>>2]|0;J=c[g+24>>2]|0;K=q}}while(0);G=b+12|0;H=c[G>>2]|0;c[G>>2]=c[o>>2];c[o>>2]=H;o=b+8|0;G=c[o>>2]|0;c[o>>2]=c[n>>2];c[n>>2]=G;G=b+4|0;n=c[G>>2]|0;c[G>>2]=c[m>>2];c[m>>2]=n;n=b+16|0;m=c[n>>2]|0;c[n>>2]=c[t>>2];c[t>>2]=m;t=b+20|0;n=c[t>>2]|0;c[t>>2]=I;c[K>>2]=n;K=b+24|0;I=c[K>>2]|0;c[K>>2]=J;c[g+24>>2]=I;J=b+28|0;K=c[J>>2]|0;c[J>>2]=c[k>>2];c[k>>2]=K;K=b+32|0;k=g+32|0;g=c[K>>2]|0;c[K>>2]=c[k>>2];c[k>>2]=g;Vp(D);Vp(H);Vp(m);if((n|0)!=0){cq(n)}if((I|0)==0){i=e;return b|0}cq(I);i=e;return b|0}function xe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=a+16|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;i=g<<2;if((e|0)!=0){j=Up(i+4|0)|0;k=j;if((j|0)==0){id()}a:do{if((g|0)>0){j=c[a+12>>2]|0;l=b+4|0;m=b|0;n=0;o=0;while(1){c[k+(o<<2)>>2]=n;p=o+1|0;q=c[e+(o<<2)>>2]|0;r=(c[j+(p<<2)>>2]|0)-(c[j+(o<<2)>>2]|0)-q|0;if((c[l>>2]|0)<=(o|0)){break}s=c[(c[m>>2]|0)+(o<<2)>>2]|0;t=q+n+((s|0)<(r|0)?r:s)|0;if((p|0)<(g|0)){n=t;o=p}else{u=t;break a}}bc(12824,12760,156,15696)}else{u=0}}while(0);c[k+(g<<2)>>2]=u;e=a+20|0;te(e,u,0.0);u=c[f>>2]|0;o=c[a+12>>2]|0;if((u|0)>0){n=a+24|0;m=e|0;e=u;do{e=e-1|0;u=k+(e<<2)|0;l=c[u>>2]|0;j=o+(e<<2)|0;t=c[j>>2]|0;do{if((l-t|0)>0){p=c[(c[d>>2]|0)+(e<<2)>>2]|0;if((p|0)<=0){break}s=c[n>>2]|0;r=c[m>>2]|0;q=p;p=t;v=l;do{q=q-1|0;c[s+(v+q<<2)>>2]=c[s+(p+q<<2)>>2];p=c[j>>2]|0;v=c[u>>2]|0;h[r+(v+q<<3)>>3]=+h[r+(p+q<<3)>>3];}while((q|0)>0)}}while(0);}while((e|0)>0)}c[a+12>>2]=k;Vp(o);return}o=Up(i)|0;i=o;c[d>>2]=i;if((o|0)==0){id()}b:do{if((g|0)>0){o=b+4|0;k=b|0;e=a+12|0;m=0;n=0;u=0;while(1){c[i+(m<<2)>>2]=n;if((c[o>>2]|0)<=(m|0)){break}j=c[(c[k>>2]|0)+(m<<2)>>2]|0;l=m+1|0;t=c[e>>2]|0;q=j+n-(c[t+(m<<2)>>2]|0)+(c[t+(l<<2)>>2]|0)|0;t=j+u|0;if((l|0)<(g|0)){m=l;n=q;u=t}else{w=t;break b}}bc(12824,12760,156,15696)}else{w=0}}while(0);u=a+20|0;n=c[a+28>>2]|0;m=n+w|0;w=a+32|0;if(m>>>0>(c[w>>2]|0)>>>0){e=Na(m|0,8)|0;k=aq(J?-1:e)|0;e=Na(m|0,4)|0;o=aq(J?-1:e)|0;e=n>>>0<m>>>0?n:m;n=u|0;t=c[n>>2]|0;q=t;sq(k|0,q|0,e<<3)|0;l=a+24|0;j=c[l>>2]|0;sq(o|0,j|0,e<<2)|0;if((t|0)==0){x=j}else{cq(q);x=c[l>>2]|0}if((x|0)!=0){cq(x)}c[n>>2]=k;c[l>>2]=o;c[w>>2]=m;y=c[f>>2]|0}else{y=g}g=c[a+12>>2]|0;if((y|0)>0){m=c[d>>2]|0;w=a+24|0;a=u|0;o=c[g+(y<<2)>>2]|0;l=y;while(1){k=l-1|0;n=g+(k<<2)|0;x=c[n>>2]|0;q=o-x|0;if((q|0)>0){j=c[w>>2]|0;t=i+(k<<2)|0;e=c[a>>2]|0;p=q;r=x;v=c[t>>2]|0;while(1){s=p-1|0;c[j+(v+s<<2)>>2]=c[j+(r+s<<2)>>2];z=c[n>>2]|0;A=c[t>>2]|0;h[e+(A+s<<3)>>3]=+h[e+(z+s<<3)>>3];if((s|0)>0){p=s;r=z;v=A}else{B=z;C=A;break}}}else{B=x;C=c[i+(k<<2)>>2]|0}c[n>>2]=C;c[m+(k<<2)>>2]=q;if((k|0)>0){o=B;l=k}else{break}}D=c[f>>2]|0;E=m}else{D=y;E=c[d>>2]|0}d=D-1|0;y=(c[E+(d<<2)>>2]|0)+(c[g+(d<<2)>>2]|0)|0;if((D|0)<=0){bc(12824,12760,156,15696)}if((c[b+4>>2]|0)<=(d|0)){bc(12824,12760,156,15696)}c[g+(D<<2)>>2]=y+(c[(c[b>>2]|0)+(d<<2)>>2]|0);te(u,c[g+(c[f>>2]<<2)>>2]|0,0.0);return}function ye(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+192|0;g=f|0;j=f+8|0;k=f+16|0;l=f+40|0;m=f+80|0;n=f+120|0;o=f+128|0;p=f+168|0;q=f+176|0;r=f+184|0;if((c[b+520>>2]|0)==0){bc(4e3,3880,642,15360)}s=d+4|0;if((c[b+96>>2]|0)!=(c[s>>2]|0)){bc(3856,3880,646,15360)}t=b+320|0;c[b+332>>2]=0;c[t>>2]=3;c[b+336>>2]=0;u=b+492|0;v=b+496|0;do{if((c[v>>2]|0)!=1){w=u|0;Vp(c[w>>2]|0);if((Zp(j,16,8)|0)!=0){c[j>>2]=0;id()}x=c[j>>2]|0;if((x|0)==0){id()}else{c[w>>2]=x;break}}}while(0);c[v>>2]=1;j=b+500|0;x=b+504|0;do{if((c[x>>2]|0)!=1){w=j|0;Vp(c[w>>2]|0);if((Zp(g,16,8)|0)!=0){c[g>>2]=0;id()}y=c[g>>2]|0;if((y|0)==0){id()}else{c[w>>2]=y;break}}}while(0);c[x>>2]=1;g=b+212|0;y=l+24|0;c[l>>2]=6;c[l+20>>2]=y;c[l+4>>2]=1;c[l+8>>2]=0;w=c[s>>2]|0;c[l+12>>2]=w;c[l+16>>2]=1;c[l+24>>2]=w;w=d;c[l+28>>2]=c[w>>2];d=g;z=l;c[d>>2]=c[z>>2];c[d+4>>2]=c[z+4>>2];c[d+8>>2]=c[z+8>>2];c[d+12>>2]=c[z+12>>2];c[d+16>>2]=c[z+16>>2];z=b+236|0;l=b+232|0;c[l>>2]=z;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];c[z+12>>2]=c[y+12>>2];y=b+252|0;A=m+24|0;c[m>>2]=6;c[m+20>>2]=A;c[m+4>>2]=1;c[m+8>>2]=0;B=c[e+4>>2]|0;c[m+12>>2]=B;c[m+16>>2]=1;c[m+24>>2]=B;c[m+28>>2]=c[e>>2];e=y;B=m;c[e>>2]=c[B>>2];c[e+4>>2]=c[B+4>>2];c[e+8>>2]=c[B+8>>2];c[e+12>>2]=c[B+12>>2];c[e+16>>2]=c[B+16>>2];B=b+276|0;c[b+272>>2]=B;c[B>>2]=c[A>>2];c[B+4>>2]=c[A+4>>2];c[B+8>>2]=c[A+8>>2];c[B+12>>2]=c[A+12>>2];A=n|0;c[A>>2]=0;B=n+4|0;c[B>>2]=0;e=b+508|0;if((a[e]|0)==78){C=0}else{pe(n|0,c[s>>2]|0,1);n=c[B>>2]|0;if((n|0)!=(c[s>>2]|0)){bc(1624,1176,498,15416)}if((n|0)>0){s=c[w>>2]|0;w=c[A>>2]|0;B=0;while(1){h[w+(B<<3)>>3]=+h[s+(B<<3)>>3];m=B+1|0;if((m|0)<(n|0)){B=m}else{D=w;break}}}else{D=c[A>>2]|0}A=o+24|0;c[o>>2]=6;c[o+20>>2]=A;c[o+4>>2]=1;c[o+8>>2]=0;c[o+12>>2]=n;c[o+16>>2]=1;c[o+24>>2]=n;c[o+28>>2]=D;n=o;c[d>>2]=c[n>>2];c[d+4>>2]=c[n+4>>2];c[d+8>>2]=c[n+8>>2];c[d+12>>2]=c[n+12>>2];c[d+16>>2]=c[n+16>>2];c[l>>2]=z;c[z>>2]=c[A>>2];c[z+4>>2]=c[A+4>>2];c[z+8>>2]=c[A+8>>2];c[z+12>>2]=c[A+12>>2];C=D}D=b+292|0;Te(D);c[p>>2]=0;A=c[b+80>>2]|0;z=c[b+72>>2]|0;l=c[b+464>>2]|0;if((c[b+480>>2]|0)<=0){bc(12824,12760,378,15696)}n=c[b+476>>2]|0;if((c[b+488>>2]|0)<=0){bc(12824,12760,378,15696)}d=c[b+484>>2]|0;if((c[v>>2]|0)<=0){bc(12824,12760,378,15696)}if((c[x>>2]|0)<=0){bc(12824,12760,378,15696)}df(t,b+124|0,A,z,l,e,n,d,b+164|0,b+188|0,0,0,g|0,y|0,q,r,c[u>>2]|0,c[j>>2]|0,k,D,p);Ue(D);c[b+512>>2]=(c[p>>2]|0)!=0;Vp(C);i=f;return}function ze(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0;d=i;i=i+8|0;e=d|0;f=a|0;g=b;b=c[(c[g>>2]|0)+4>>2]|0;j=a|0;if(b>>>0>536870911>>>0){id()}k=b<<3;if((Zp(e,16,k)|0)==0){l=c[e>>2]|0}else{c[e>>2]=0;l=0}if(!((l|0)!=0|(k|0)==0)){id()}c[j>>2]=l;l=a+4|0;c[l>>2]=b;pe(f,c[(c[g>>2]|0)+4>>2]|0,1);pe(f,c[(c[g>>2]|0)+4>>2]|0,1);pe(f,c[(c[g>>2]|0)+4>>2]|0,1);f=c[l>>2]|0;l=c[g>>2]|0;if((f|0)!=(c[l+4>>2]|0)){bc(1624,1176,498,15416)}if((f|0)<=0){i=d;return}b=c[j>>2]|0;h[b>>3]=+h[(c[l>>2]|0)+8>>3];if((f|0)>1){m=1}else{i=d;return}do{h[b+(m<<3)>>3]=+h[(c[c[g>>2]>>2]|0)+(m<<4)+8>>3];m=m+1|0;}while((m|0)<(f|0));i=d;return}function Ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0;d=i;i=i+8|0;e=d|0;f=a|0;g=b;b=c[(c[g>>2]|0)+4>>2]|0;j=a|0;if(b>>>0>536870911>>>0){id()}k=b<<3;if((Zp(e,16,k)|0)==0){l=c[e>>2]|0}else{c[e>>2]=0;l=0}if(!((l|0)!=0|(k|0)==0)){id()}c[j>>2]=l;l=a+4|0;c[l>>2]=b;pe(f,c[(c[g>>2]|0)+4>>2]|0,1);pe(f,c[(c[g>>2]|0)+4>>2]|0,1);pe(f,c[(c[g>>2]|0)+4>>2]|0,1);f=c[l>>2]|0;l=c[g>>2]|0;if((f|0)!=(c[l+4>>2]|0)){bc(1624,1176,498,15416)}if((f|0)<=0){i=d;return}b=c[j>>2]|0;h[b>>3]=+h[c[l>>2]>>3];if((f|0)>1){m=1}else{i=d;return}do{h[b+(m<<3)>>3]=+h[(c[c[g>>2]>>2]|0)+(m<<4)>>3];m=m+1|0;}while((m|0)<(f|0));i=d;return}function Be(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+72|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;Le(b+320|0);l=c[d+8>>2]|0;m=b+88|0;qe(m,d)|0;d=b+124|0;n=m|0;m=k+24|0;c[k>>2]=0;c[k+20>>2]=m;c[k+12>>2]=c[n+8>>2];o=c[n+4>>2]|0;c[k+16>>2]=o;c[k+8>>2]=0;p=c[n+16>>2]|0;do{if((p|0)==0){q=c[n+28>>2]|0}else{if(!((o|0)>-1)){bc(8144,7760,138,15560)}if((o|0)==0){q=0;break}r=c[p>>2]|0;if((o|0)>1){s=r;t=1}else{q=r;break}while(1){r=(c[p+(t<<2)>>2]|0)+s|0;u=t+1|0;if((u|0)<(o|0)){s=r;t=u}else{q=r;break}}}}while(0);c[k+24>>2]=q;c[k+28>>2]=c[n+20>>2];c[k+32>>2]=c[n+24>>2];c[k+36>>2]=c[n+12>>2];c[k+4>>2]=1;n=d;d=k;c[n>>2]=c[d>>2];c[n+4>>2]=c[d+4>>2];c[n+8>>2]=c[d+8>>2];c[n+12>>2]=c[d+12>>2];c[n+16>>2]=c[d+16>>2];d=b+148|0;c[b+144>>2]=d;c[d>>2]=c[m>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];m=b+164|0;if((c[b+184>>2]|0)!=0){Oe(m)}if((c[b+208>>2]|0)!=0){Ne(b+188|0)}tq(m|0,0,48)|0;if(!((l|0)>-1)){bc(4568,14528,268,15680)}m=b+76|0;do{if((c[m>>2]|0)==(l|0)){v=24}else{d=b+72|0;Vp(c[d>>2]|0);if((l|0)==0){c[d>>2]=0;v=24;break}if(l>>>0>1073741823>>>0){id()}n=l<<2;if((Zp(h,16,n)|0)==0){w=c[h>>2]|0}else{c[h>>2]=0;w=0}if((w|0)!=0|(n|0)==0){c[d>>2]=w;break}else{id()}}}while(0);c[m>>2]=l;m=b+84|0;do{if((c[m>>2]|0)!=(l|0)){w=b+80|0;Vp(c[w>>2]|0);if((l|0)==0){c[w>>2]=0;break}if(l>>>0>1073741823>>>0){id()}h=l<<2;if((Zp(g,16,h)|0)==0){x=c[g>>2]|0}else{c[g>>2]=0;x=0}if((x|0)!=0|(h|0)==0){c[w>>2]=x;break}else{id()}}}while(0);c[m>>2]=l;m=b+480|0;do{if((c[m>>2]|0)==(l|0)){v=47}else{x=b+476|0;Vp(c[x>>2]|0);if((l|0)==0){c[x>>2]=0;v=47;break}if(l>>>0>536870911>>>0){id()}g=l<<3;if((Zp(f,16,g)|0)==0){y=c[f>>2]|0}else{c[f>>2]=0;y=0}if((y|0)!=0|(g|0)==0){c[x>>2]=y;break}else{id()}}}while(0);c[m>>2]=l;m=b+488|0;do{if((c[m>>2]|0)!=(l|0)){y=b+484|0;Vp(c[y>>2]|0);if((l|0)==0){c[y>>2]=0;break}if(l>>>0>536870911>>>0){id()}f=l<<3;if((Zp(j,16,f)|0)==0){z=c[j>>2]|0}else{c[j>>2]=0;z=0}if((z|0)!=0|(f|0)==0){c[y>>2]=z;break}else{id()}}}while(0);c[m>>2]=l;m=b+464|0;z=b+468|0;j=c[z>>2]|0;y=c[m>>2]|0;f=j-y>>2;do{if(f>>>0<l>>>0){Ce(m,l-f|0)}else{if(!(f>>>0>l>>>0)){break}v=y+(l<<2)|0;if((j|0)==(v|0)){break}c[z>>2]=j+(~((j-4+(-v|0)|0)>>>2)<<2)}}while(0);j=b+212|0;c[j>>2]=6;z=b+236|0;c[b+232>>2]=z;c[b+216>>2]=1;c[b+220>>2]=0;c[b+240>>2]=0;c[b+224>>2]=0;c[b+228>>2]=0;c[b+236>>2]=l;l=b+252|0;y=j;c[l>>2]=c[y>>2];c[l+4>>2]=c[y+4>>2];c[l+8>>2]=c[y+8>>2];c[l+12>>2]=c[y+12>>2];c[l+16>>2]=c[y+16>>2];y=b+276|0;c[b+272>>2]=y;c[y>>2]=c[z>>2];c[y+4>>2]=c[z+4>>2];c[y+8>>2]=c[z+8>>2];c[y+12>>2]=c[z+12>>2];a[b+528|0]=1;i=e;return}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=a+8|0;e=a+4|0;f=c[e>>2]|0;g=c[d>>2]|0;h=f;if(!(g-h>>2>>>0<b>>>0)){i=b;j=f;while(1){if((j|0)!=0){c[j>>2]=0}k=i-1|0;if((k|0)==0){break}else{i=k;j=j+4|0}}c[e>>2]=f+(b<<2);return}f=a|0;a=c[f>>2]|0;j=a;i=h-j|0;h=i>>2;k=h+b|0;if(k>>>0>1073741823>>>0){Wm(0)}l=g-j|0;if(l>>2>>>0<536870911>>>0){j=l>>1;l=j>>>0<k>>>0?k:j;if((l|0)==0){m=0;n=0}else{o=l;p=10}}else{o=1073741823;p=10}if((p|0)==10){m=$p(o<<2)|0;n=o}o=b;b=m+(h<<2)|0;while(1){if((b|0)!=0){c[b>>2]=0}h=o-1|0;if((h|0)==0){break}else{o=h;b=b+4|0}}b=a;sq(m|0,b|0,i)|0;c[f>>2]=m;c[e>>2]=m+(k<<2);c[d>>2]=m+(n<<2);if((a|0)==0){return}bq(b);return}function De(a){a=a|0;var b=0,d=0,e=0;b=a+164|0;if((c[a+184>>2]|0)!=0){Oe(b)}if((c[a+208>>2]|0)!=0){Ne(a+188|0)}tq(b|0,0,48)|0;Vp(c[a+500>>2]|0);Vp(c[a+492>>2]|0);Vp(c[a+484>>2]|0);Vp(c[a+476>>2]|0);b=c[a+464>>2]|0;if((b|0)!=0){d=a+468|0;e=c[d>>2]|0;if((e|0)!=(b|0)){c[d>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}bq(b)}Vp(c[a+100>>2]|0);Vp(c[a+104>>2]|0);b=c[a+108>>2]|0;if((b|0)!=0){cq(b)}b=c[a+112>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+80>>2]|0);Vp(c[a+72>>2]|0);Vp(c[a+48>>2]|0);Vp(c[a+52>>2]|0);b=c[a+56>>2]|0;if((b|0)!=0){cq(b)}b=c[a+60>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+12>>2]|0);Vp(c[a+16>>2]|0);b=c[a+20>>2]|0;if((b|0)!=0){cq(b)}b=c[a+24>>2]|0;if((b|0)==0){return}cq(b);return}function Ee(b){b=b|0;var d=0,e=0,f=0;a[b|0]=0;d=b+4|0;c[d>>2]=-1;tq(b+8|0,0,28)|0;e=Up(4)|0;c[b+12>>2]=e;if((e|0)==0){id()}c[d>>2]=0;c[e>>2]=0;a[b+36|0]=0;e=b+40|0;c[e>>2]=-1;tq(b+44|0,0,28)|0;d=Up(4)|0;f=d;c[b+48>>2]=f;if((d|0)==0){id()}c[e>>2]=0;c[f>>2]=0;f=b+92|0;tq(b+72|0,0,17)|0;c[f>>2]=-1;tq(b+96|0,0,28)|0;e=Up(4)|0;d=e;c[b+100>>2]=d;if((e|0)!=0){c[f>>2]=0;c[d>>2]=0;c[b+144>>2]=b+148;c[b+232>>2]=b+236;c[b+272>>2]=b+276;tq(b+464|0,0,44)|0;return}id()}function Fe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e|0;if(!((b|0)>-1)){bc(10744,10528,222,16136);return 0}if(!((c[a+8>>2]|0)>(b|0)&(d|0)>-1)){bc(10744,10528,222,16136);return 0}g=c[a+4>>2]|0;if((g|0)<=(d|0)){bc(10744,10528,222,16136);return 0}if((c[a+16>>2]|0)!=0){h=Ge(a,b,d)|0;i=e;return h|0}c[f>>2]=g;c[f+8>>2]=2;if(!((g|0)>-1)){bc(11648,11312,63,15840);return 0}Ie(a,f);h=Ge(a,b,d)|0;i=e;return h|0}function Ge(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;g=a+16|0;j=c[g>>2]|0;if((j|0)==0){bc(7280,10528,1121,16168);return 0}k=a+12|0;l=c[k>>2]|0;m=c[l+(d<<2)>>2]|0;n=c[j+(d<<2)>>2]|0;if((n|0)<((c[l+(d+1<<2)>>2]|0)-m|0)){o=m;p=j;q=n}else{c[f>>2]=d;c[f+4>>2]=(n|0)>2?n:2;He(a,f);f=c[g>>2]|0;o=c[(c[k>>2]|0)+(d<<2)>>2]|0;p=f;q=c[f+(d<<2)>>2]|0}f=p+(d<<2)|0;d=q+o|0;p=c[a+24>>2]|0;k=a+20|0;a:do{if((q|0)>0){a=d;while(1){g=a-1|0;r=c[p+(g<<2)>>2]|0;if((r|0)<=(b|0)){break}c[p+(a<<2)>>2]=r;n=c[k>>2]|0;h[n+(a<<3)>>3]=+h[n+(g<<3)>>3];if((g|0)>(o|0)){a=g}else{s=g;break a}}if((r|0)!=(b|0)){s=a;break}bc(2792,10528,1142,16168);return 0}else{s=d}}while(0);c[f>>2]=(c[f>>2]|0)+1;c[p+(s<<2)>>2]=b;b=(c[k>>2]|0)+(s<<3)|0;h[b>>3]=0.0;i=e;return b|0}function He(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;d=a+16|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;i=g<<2;if((e|0)!=0){j=Up(i+4|0)|0;k=j;if((j|0)==0){id()}if((g|0)>0){j=c[a+12>>2]|0;l=b+4|0;m=c[b>>2]|0;n=0;o=0;while(1){c[k+(o<<2)>>2]=n;p=o+1|0;q=c[e+(o<<2)>>2]|0;r=(c[j+(p<<2)>>2]|0)-(c[j+(o<<2)>>2]|0)-q|0;if((m|0)==(o|0)){s=c[l>>2]|0}else{s=0}t=q+n+((s|0)<(r|0)?r:s)|0;if((p|0)<(g|0)){n=t;o=p}else{u=t;break}}}else{u=0}c[k+(g<<2)>>2]=u;o=a+20|0;te(o,u,0.0);u=c[f>>2]|0;n=c[a+12>>2]|0;if((u|0)>0){s=a+24|0;l=o|0;o=u;do{o=o-1|0;u=k+(o<<2)|0;m=c[u>>2]|0;j=n+(o<<2)|0;e=c[j>>2]|0;do{if((m-e|0)>0){t=c[(c[d>>2]|0)+(o<<2)>>2]|0;if((t|0)<=0){break}p=c[s>>2]|0;r=c[l>>2]|0;q=t;t=e;v=m;do{q=q-1|0;c[p+(v+q<<2)>>2]=c[p+(t+q<<2)>>2];t=c[j>>2]|0;v=c[u>>2]|0;h[r+(v+q<<3)>>3]=+h[r+(t+q<<3)>>3];}while((q|0)>0)}}while(0);}while((o|0)>0)}c[a+12>>2]=k;Vp(n);return}n=Up(i)|0;i=n;c[d>>2]=i;if((n|0)==0){id()}if((g|0)>0){n=b+4|0;k=c[a+12>>2]|0;o=c[b>>2]|0;l=0;s=0;u=0;while(1){c[i+(l<<2)>>2]=s;j=(o|0)==(l|0);if(j){w=c[n>>2]|0}else{w=0}m=l+1|0;e=w+s+(c[k+(m<<2)>>2]|0)-(c[k+(l<<2)>>2]|0)|0;if(j){x=c[n>>2]|0}else{x=0}j=x+u|0;if((m|0)<(g|0)){l=m;s=e;u=j}else{y=j;break}}}else{y=0}u=a+20|0;s=c[a+28>>2]|0;l=s+y|0;y=a+32|0;if(l>>>0>(c[y>>2]|0)>>>0){x=Na(l|0,8)|0;n=aq(J?-1:x)|0;x=Na(l|0,4)|0;k=aq(J?-1:x)|0;x=s>>>0<l>>>0?s:l;s=u|0;w=c[s>>2]|0;o=w;sq(n|0,o|0,x<<3)|0;j=a+24|0;e=c[j>>2]|0;sq(k|0,e|0,x<<2)|0;if((w|0)==0){z=e}else{cq(o);z=c[j>>2]|0}if((z|0)!=0){cq(z)}c[s>>2]=n;c[j>>2]=k;c[y>>2]=l;A=c[f>>2]|0}else{A=g}g=c[a+12>>2]|0;if((A|0)>0){l=c[d>>2]|0;y=a+24|0;a=u|0;k=c[g+(A<<2)>>2]|0;j=A;while(1){n=j-1|0;s=g+(n<<2)|0;z=c[s>>2]|0;o=k-z|0;if((o|0)>0){e=c[y>>2]|0;w=i+(n<<2)|0;x=c[a>>2]|0;m=o;q=z;t=c[w>>2]|0;while(1){r=m-1|0;c[e+(t+r<<2)>>2]=c[e+(q+r<<2)>>2];v=c[s>>2]|0;p=c[w>>2]|0;h[x+(p+r<<3)>>3]=+h[x+(v+r<<3)>>3];if((r|0)>0){m=r;q=v;t=p}else{B=v;C=p;break}}}else{B=z;C=c[i+(n<<2)>>2]|0}c[s>>2]=C;c[l+(n<<2)>>2]=o;if((n|0)>0){k=B;j=n}else{break}}D=c[f>>2]|0;E=l}else{D=A;E=c[d>>2]|0}d=D-1|0;if((c[b>>2]|0)==(d|0)){F=c[b+4>>2]|0}else{F=0}c[g+(D<<2)>>2]=(c[E+(d<<2)>>2]|0)+(c[g+(d<<2)>>2]|0)+F;te(u,c[g+(c[f>>2]<<2)>>2]|0,0.0);return}function Ie(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=a+16|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;i=g<<2;if((e|0)!=0){j=Up(i+4|0)|0;k=j;if((j|0)==0){id()}a:do{if((g|0)>0){j=c[a+12>>2]|0;l=b|0;m=b+8|0;n=0;o=0;while(1){c[k+(o<<2)>>2]=n;p=o+1|0;q=c[e+(o<<2)>>2]|0;r=(c[j+(p<<2)>>2]|0)-(c[j+(o<<2)>>2]|0)-q|0;if((c[l>>2]|0)<=(o|0)){break}s=c[m>>2]|0;t=q+n+((s|0)<(r|0)?r:s)|0;if((p|0)<(g|0)){n=t;o=p}else{u=t;break a}}bc(12824,12760,156,15696)}else{u=0}}while(0);c[k+(g<<2)>>2]=u;e=a+20|0;te(e,u,0.0);u=c[f>>2]|0;o=c[a+12>>2]|0;if((u|0)>0){n=a+24|0;m=e|0;e=u;do{e=e-1|0;u=k+(e<<2)|0;l=c[u>>2]|0;j=o+(e<<2)|0;t=c[j>>2]|0;do{if((l-t|0)>0){p=c[(c[d>>2]|0)+(e<<2)>>2]|0;if((p|0)<=0){break}s=c[n>>2]|0;r=c[m>>2]|0;q=p;p=t;v=l;do{q=q-1|0;c[s+(v+q<<2)>>2]=c[s+(p+q<<2)>>2];p=c[j>>2]|0;v=c[u>>2]|0;h[r+(v+q<<3)>>3]=+h[r+(p+q<<3)>>3];}while((q|0)>0)}}while(0);}while((e|0)>0)}c[a+12>>2]=k;Vp(o);return}o=Up(i)|0;i=o;c[d>>2]=i;if((o|0)==0){id()}b:do{if((g|0)>0){o=b|0;k=b+8|0;e=a+12|0;m=0;n=0;u=0;while(1){c[i+(m<<2)>>2]=n;if((c[o>>2]|0)<=(m|0)){break}j=c[k>>2]|0;l=m+1|0;t=c[e>>2]|0;q=j+n-(c[t+(m<<2)>>2]|0)+(c[t+(l<<2)>>2]|0)|0;t=j+u|0;if((l|0)<(g|0)){m=l;n=q;u=t}else{w=t;break b}}bc(12824,12760,156,15696)}else{w=0}}while(0);u=a+20|0;n=c[a+28>>2]|0;m=n+w|0;w=a+32|0;if(m>>>0>(c[w>>2]|0)>>>0){e=Na(m|0,8)|0;k=aq(J?-1:e)|0;e=Na(m|0,4)|0;o=aq(J?-1:e)|0;e=n>>>0<m>>>0?n:m;n=u|0;t=c[n>>2]|0;q=t;sq(k|0,q|0,e<<3)|0;l=a+24|0;j=c[l>>2]|0;sq(o|0,j|0,e<<2)|0;if((t|0)==0){x=j}else{cq(q);x=c[l>>2]|0}if((x|0)!=0){cq(x)}c[n>>2]=k;c[l>>2]=o;c[w>>2]=m;y=c[f>>2]|0}else{y=g}g=c[a+12>>2]|0;if((y|0)>0){m=c[d>>2]|0;w=a+24|0;a=u|0;o=c[g+(y<<2)>>2]|0;l=y;while(1){k=l-1|0;n=g+(k<<2)|0;x=c[n>>2]|0;q=o-x|0;if((q|0)>0){j=c[w>>2]|0;t=i+(k<<2)|0;e=c[a>>2]|0;p=q;r=x;v=c[t>>2]|0;while(1){s=p-1|0;c[j+(v+s<<2)>>2]=c[j+(r+s<<2)>>2];z=c[n>>2]|0;A=c[t>>2]|0;h[e+(A+s<<3)>>3]=+h[e+(z+s<<3)>>3];if((s|0)>0){p=s;r=z;v=A}else{B=z;C=A;break}}}else{B=x;C=c[i+(k<<2)>>2]|0}c[n>>2]=C;c[m+(k<<2)>>2]=q;if((k|0)>0){o=B;l=k}else{break}}D=c[f>>2]|0;E=m}else{D=y;E=c[d>>2]|0}d=D-1|0;y=(c[E+(d<<2)>>2]|0)+(c[g+(d<<2)>>2]|0)|0;if((D|0)<=0){bc(12824,12760,156,15696)}if((c[b>>2]|0)<=(d|0)){bc(12824,12760,156,15696)}c[g+(D<<2)>>2]=y+(c[b+8>>2]|0);te(u,c[g+(c[f>>2]<<2)>>2]|0,0.0);return}function Je(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;e=i;i=i+136|0;f=e|0;g=e+8|0;j=e+16|0;k=e+24|0;l=e+32|0;m=e+104|0;n=e+112|0;o=e+120|0;p=e+128|0;q=c[b+8>>2]|0;r=d+4|0;s=c[r>>2]|0;t=j|0;if(s>>>0>536870911>>>0){id();return 0}u=s<<3;if((Zp(g,16,u)|0)==0){v=c[g>>2]|0}else{c[g>>2]=0;v=0}if(!((v|0)!=0|(u|0)==0)){id();return 0}c[t>>2]=v;v=j+4|0;c[v>>2]=s;ne(j|0,c[r>>2]|0,1);j=c[v>>2]|0;if((j|0)!=(c[r>>2]|0)){bc(1480,1016,498,15448);return 0}if((j|0)>0){s=c[t>>2]|0;u=c[d>>2]|0;g=0;do{w=+h[u+(g<<4)>>3];x=+h[u+(g<<4)+8>>3];y=w*w+x*x;h[s+(g<<3)>>3]=(1.0-w*2.0+y)/(1.0-y);g=g+1|0;}while((g|0)<(j|0))}c[l+12>>2]=d;h[l+24>>3]=-2.0;c[l+40>>2]=d;h[l+56>>3]=1.0;oe(k,l);l=c[r>>2]|0;j=m|0;if(l>>>0>536870911>>>0){id();return 0}g=l<<3;if((Zp(f,16,g)|0)==0){z=c[f>>2]|0}else{c[f>>2]=0;z=0}if(!((z|0)!=0|(g|0)==0)){id();return 0}c[j>>2]=z;z=m+4|0;c[z>>2]=l;ne(m|0,c[r>>2]|0,1);m=c[z>>2]|0;if((m|0)!=(c[r>>2]|0)){bc(1480,1016,498,15448);return 0}if((m|0)>0){r=c[j>>2]|0;l=c[d>>2]|0;d=0;do{y=+h[l+(d<<4)>>3];w=+h[l+(d<<4)+8>>3];x=y*y+w*w;h[r+(d<<3)>>3]=(y*2.0+1.0+x)/(1.0-x);d=d+1|0;}while((d|0)<(m|0))}ae(n,b);m=q*9|0;if((m|0)==0){A=0;B=0}else{d=$p(q*144|0)|0;A=d;B=d+(m<<4)|0}a:do{if((q|0)>0){m=b+4|0;d=b|0;r=b+16|0;l=b+12|0;g=k+4|0;f=k|0;s=n+4|0;u=n|0;C=B;D=A;E=A;F=0;b:while(1){G=c[m>>2]|0;if((G|0)<=(F|0)){H=43;break}I=c[d>>2]|0;J=c[I+(F<<2)>>2]|0;K=c[I+(G+F<<2)>>2]|0;L=c[I+((G<<1)+F<<2)>>2]|0;if(!((K|0)>-1)){H=47;break}G=c[r>>2]|0;if((G|0)<=(K|0)){H=47;break}I=c[l>>2]|0;x=+h[I+(G+K<<3)>>3];if(!((L|0)>-1&(G|0)>(L|0))){H=50;break}y=+h[I+(G+L<<3)>>3];w=x-y;M=+h[I+(L<<3)>>3];N=+h[I+(K<<3)>>3];O=M-N;if(!((J|0)>-1&(G|0)>(J|0))){H=53;break}P=+h[I+(G+J<<3)>>3];Q=y-P;y=+h[I+(J<<3)>>3];R=y-M;M=P-x;x=N-y;if((c[v>>2]|0)<=(F|0)){H=56;break}if((c[g>>2]|0)<=(F|0)){H=59;break}if((c[z>>2]|0)<=(F|0)){H=62;break}if((c[s>>2]|0)<=(F|0)){H=65;break}y=-0.0-(w*w*+h[(c[t>>2]|0)+(F<<3)>>3]+O*w*+h[(c[f>>2]|0)+(F<<3)>>3]*2.0+O*O*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((D|0)==(C|0)){I=D-E|0;G=I>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=72;break b}if(G>>>0<134217727>>>0){T=I>>3;U=T>>>0<S>>>0?S:T;if((U|0)==0){V=0;W=0}else{X=U;H=76}}else{X=268435455;H=76}if((H|0)==76){H=0;V=$p(X<<4)|0;W=X}U=V+(G<<4)|0;T=V+(W<<4)|0;if((U|0)!=0){c[U>>2]=J;c[V+(G<<4)+4>>2]=J;h[V+(G<<4)+8>>3]=y}G=V+(S<<4)|0;S=E;sq(V|0,S|0,I)|0;if((E|0)==0){Y=V;Z=G;_=T;break}bq(S);Y=V;Z=G;_=T}else{if((D|0)==0){$=0}else{c[D>>2]=J;c[D+4>>2]=J;h[D+8>>3]=y;$=D}Y=E;Z=$+16|0;_=C}}while(0);if((c[v>>2]|0)<=(F|0)){H=83;break}if((c[g>>2]|0)<=(F|0)){H=86;break}if((c[z>>2]|0)<=(F|0)){H=89;break}if((c[s>>2]|0)<=(F|0)){H=92;break}y=-0.0-(Q*Q*+h[(c[t>>2]|0)+(F<<3)>>3]+R*Q*+h[(c[f>>2]|0)+(F<<3)>>3]*2.0+R*R*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((Z|0)==(_|0)){T=_-Y|0;G=T>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=99;break b}if(G>>>0<134217727>>>0){I=T>>3;U=I>>>0<S>>>0?S:I;if((U|0)==0){aa=0;ba=0}else{ca=U;H=103}}else{ca=268435455;H=103}if((H|0)==103){H=0;aa=$p(ca<<4)|0;ba=ca}U=aa+(G<<4)|0;I=aa+(ba<<4)|0;if((U|0)!=0){c[U>>2]=K;c[aa+(G<<4)+4>>2]=K;h[aa+(G<<4)+8>>3]=y}G=aa+(S<<4)|0;S=Y;sq(aa|0,S|0,T)|0;if((Y|0)==0){da=aa;ea=G;fa=I;break}bq(S);da=aa;ea=G;fa=I}else{if((Z|0)==0){ga=0}else{c[Z>>2]=K;c[Z+4>>2]=K;h[Z+8>>3]=y;ga=Z}da=Y;ea=ga+16|0;fa=_}}while(0);if((c[v>>2]|0)<=(F|0)){H=110;break}if((c[g>>2]|0)<=(F|0)){H=113;break}if((c[z>>2]|0)<=(F|0)){H=116;break}if((c[s>>2]|0)<=(F|0)){H=119;break}y=-0.0-(M*M*+h[(c[t>>2]|0)+(F<<3)>>3]+x*M*+h[(c[f>>2]|0)+(F<<3)>>3]*2.0+x*x*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((ea|0)==(fa|0)){I=fa-da|0;G=I>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=126;break b}if(G>>>0<134217727>>>0){T=I>>3;U=T>>>0<S>>>0?S:T;if((U|0)==0){ha=0;ia=0}else{ja=U;H=130}}else{ja=268435455;H=130}if((H|0)==130){H=0;ha=$p(ja<<4)|0;ia=ja}U=ha+(G<<4)|0;T=ha+(ia<<4)|0;if((U|0)!=0){c[U>>2]=L;c[ha+(G<<4)+4>>2]=L;h[ha+(G<<4)+8>>3]=y}G=ha+(S<<4)|0;S=da;sq(ha|0,S|0,I)|0;if((da|0)==0){ka=ha;la=G;ma=T;break}bq(S);ka=ha;la=G;ma=T}else{if((ea|0)==0){na=0}else{c[ea>>2]=L;c[ea+4>>2]=L;h[ea+8>>3]=y;na=ea}ka=da;la=na+16|0;ma=fa}}while(0);if((c[v>>2]|0)<=(F|0)){H=137;break}if((c[g>>2]|0)<=(F|0)){H=140;break}y=+h[(c[f>>2]|0)+(F<<3)>>3];if((c[z>>2]|0)<=(F|0)){H=143;break}if((c[s>>2]|0)<=(F|0)){H=146;break}N=-0.0-(R*w*y+(w*Q*+h[(c[t>>2]|0)+(F<<3)>>3]+O*Q*y)+O*R*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((la|0)==(ma|0)){T=ma-ka|0;G=T>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=153;break b}if(G>>>0<134217727>>>0){I=T>>3;U=I>>>0<S>>>0?S:I;if((U|0)==0){oa=0;pa=0}else{qa=U;H=157}}else{qa=268435455;H=157}if((H|0)==157){H=0;oa=$p(qa<<4)|0;pa=qa}U=oa+(G<<4)|0;I=oa+(pa<<4)|0;if((U|0)!=0){c[U>>2]=K;c[oa+(G<<4)+4>>2]=J;h[oa+(G<<4)+8>>3]=N}G=oa+(S<<4)|0;S=ka;sq(oa|0,S|0,T)|0;if((ka|0)==0){ra=oa;sa=G;ta=I;break}bq(S);ra=oa;sa=G;ta=I}else{if((la|0)==0){ua=0}else{c[la>>2]=K;c[la+4>>2]=J;h[la+8>>3]=N;ua=la}ra=ka;sa=ua+16|0;ta=ma}}while(0);do{if((sa|0)==(ta|0)){I=ta-ra|0;G=I>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=168;break b}if(G>>>0<134217727>>>0){T=I>>3;U=T>>>0<S>>>0?S:T;if((U|0)==0){va=0;wa=0}else{xa=U;H=172}}else{xa=268435455;H=172}if((H|0)==172){H=0;va=$p(xa<<4)|0;wa=xa}U=va+(G<<4)|0;T=va+(wa<<4)|0;if((U|0)!=0){c[U>>2]=J;c[va+(G<<4)+4>>2]=K;h[va+(G<<4)+8>>3]=N}G=va+(S<<4)|0;S=ra;sq(va|0,S|0,I)|0;if((ra|0)==0){ya=va;za=G;Aa=T;break}bq(S);ya=va;za=G;Aa=T}else{if((sa|0)==0){Ba=0}else{c[sa>>2]=J;c[sa+4>>2]=K;h[sa+8>>3]=N;Ba=sa}ya=ra;za=Ba+16|0;Aa=ta}}while(0);if((c[v>>2]|0)<=(F|0)){H=179;break}if((c[g>>2]|0)<=(F|0)){H=182;break}N=+h[(c[f>>2]|0)+(F<<3)>>3];if((c[z>>2]|0)<=(F|0)){H=185;break}if((c[s>>2]|0)<=(F|0)){H=188;break}y=-0.0-(x*Q*N+(Q*M*+h[(c[t>>2]|0)+(F<<3)>>3]+R*M*N)+R*x*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((za|0)==(Aa|0)){T=Aa-ya|0;G=T>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=195;break b}if(G>>>0<134217727>>>0){I=T>>3;U=I>>>0<S>>>0?S:I;if((U|0)==0){Ca=0;Da=0}else{Ea=U;H=199}}else{Ea=268435455;H=199}if((H|0)==199){H=0;Ca=$p(Ea<<4)|0;Da=Ea}U=Ca+(G<<4)|0;I=Ca+(Da<<4)|0;if((U|0)!=0){c[U>>2]=L;c[Ca+(G<<4)+4>>2]=K;h[Ca+(G<<4)+8>>3]=y}G=Ca+(S<<4)|0;S=ya;sq(Ca|0,S|0,T)|0;if((ya|0)==0){Fa=Ca;Ga=G;Ha=I;break}bq(S);Fa=Ca;Ga=G;Ha=I}else{if((za|0)==0){Ia=0}else{c[za>>2]=L;c[za+4>>2]=K;h[za+8>>3]=y;Ia=za}Fa=ya;Ga=Ia+16|0;Ha=Aa}}while(0);do{if((Ga|0)==(Ha|0)){I=Ha-Fa|0;G=I>>4;S=G+1|0;if(S>>>0>268435455>>>0){H=210;break b}if(G>>>0<134217727>>>0){T=I>>3;U=T>>>0<S>>>0?S:T;if((U|0)==0){Ja=0;Ka=0}else{La=U;H=214}}else{La=268435455;H=214}if((H|0)==214){H=0;Ja=$p(La<<4)|0;Ka=La}U=Ja+(G<<4)|0;T=Ja+(Ka<<4)|0;if((U|0)!=0){c[U>>2]=K;c[Ja+(G<<4)+4>>2]=L;h[Ja+(G<<4)+8>>3]=y}G=Ja+(S<<4)|0;S=Fa;sq(Ja|0,S|0,I)|0;if((Fa|0)==0){Ma=Ja;Na=G;Oa=T;break}bq(S);Ma=Ja;Na=G;Oa=T}else{if((Ga|0)==0){Pa=0}else{c[Ga>>2]=K;c[Ga+4>>2]=L;h[Ga+8>>3]=y;Pa=Ga}Ma=Fa;Na=Pa+16|0;Oa=Ha}}while(0);if((c[v>>2]|0)<=(F|0)){H=221;break}if((c[g>>2]|0)<=(F|0)){H=224;break}y=+h[(c[f>>2]|0)+(F<<3)>>3];if((c[z>>2]|0)<=(F|0)){H=227;break}if((c[s>>2]|0)<=(F|0)){H=230;break}R=-0.0-(O*M*y+(M*w*+h[(c[t>>2]|0)+(F<<3)>>3]+x*w*y)+x*O*+h[(c[j>>2]|0)+(F<<3)>>3])/+h[(c[u>>2]|0)+(F<<3)>>3];do{if((Na|0)==(Oa|0)){K=Oa-Ma|0;T=K>>4;G=T+1|0;if(G>>>0>268435455>>>0){H=237;break b}if(T>>>0<134217727>>>0){S=K>>3;I=S>>>0<G>>>0?G:S;if((I|0)==0){Qa=0;Ra=0}else{Sa=I;H=241}}else{Sa=268435455;H=241}if((H|0)==241){H=0;Qa=$p(Sa<<4)|0;Ra=Sa}I=Qa+(T<<4)|0;S=Qa+(Ra<<4)|0;if((I|0)!=0){c[I>>2]=J;c[Qa+(T<<4)+4>>2]=L;h[Qa+(T<<4)+8>>3]=R}T=Qa+(G<<4)|0;G=Ma;sq(Qa|0,G|0,K)|0;if((Ma|0)==0){Ta=Qa;Ua=T;Va=S;break}bq(G);Ta=Qa;Ua=T;Va=S}else{if((Na|0)==0){Wa=0}else{c[Na>>2]=J;c[Na+4>>2]=L;h[Na+8>>3]=R;Wa=Na}Ta=Ma;Ua=Wa+16|0;Va=Oa}}while(0);do{if((Ua|0)==(Va|0)){S=Va-Ta|0;T=S>>4;G=T+1|0;if(G>>>0>268435455>>>0){H=252;break b}if(T>>>0<134217727>>>0){K=S>>3;I=K>>>0<G>>>0?G:K;if((I|0)==0){Xa=0;Ya=0}else{Za=I;H=256}}else{Za=268435455;H=256}if((H|0)==256){H=0;Xa=$p(Za<<4)|0;Ya=Za}I=Xa+(T<<4)|0;K=Xa+(Ya<<4)|0;if((I|0)!=0){c[I>>2]=L;c[Xa+(T<<4)+4>>2]=J;h[Xa+(T<<4)+8>>3]=R}T=Xa+(G<<4)|0;G=Ta;sq(Xa|0,G|0,S)|0;if((Ta|0)==0){_a=Xa;$a=T;ab=K;break}bq(G);_a=Xa;$a=T;ab=K}else{if((Ua|0)==0){bb=0}else{c[Ua>>2]=L;c[Ua+4>>2]=J;h[Ua+8>>3]=R;bb=Ua}_a=Ta;$a=bb+16|0;ab=Va}}while(0);J=F+1|0;if((J|0)<(q|0)){C=ab;D=$a;E=_a;F=J}else{cb=$a;db=_a;break a}}if((H|0)==43){bc(9096,6792,114,15728);return 0}else if((H|0)==47){bc(9096,6792,114,15728);return 0}else if((H|0)==50){bc(9096,6792,114,15728);return 0}else if((H|0)==53){bc(9096,6792,114,15728);return 0}else if((H|0)==56){bc(9824,6792,394,15728);return 0}else if((H|0)==59){bc(9824,6792,394,15728);return 0}else if((H|0)==62){bc(9824,6792,394,15728);return 0}else if((H|0)==65){bc(9824,6792,394,15728);return 0}else if((H|0)==72){Wm(0);return 0}else if((H|0)==83){bc(9824,6792,394,15728);return 0}else if((H|0)==86){bc(9824,6792,394,15728);return 0}else if((H|0)==89){bc(9824,6792,394,15728);return 0}else if((H|0)==92){bc(9824,6792,394,15728);return 0}else if((H|0)==99){Wm(0);return 0}else if((H|0)==110){bc(9824,6792,394,15728);return 0}else if((H|0)==113){bc(9824,6792,394,15728);return 0}else if((H|0)==116){bc(9824,6792,394,15728);return 0}else if((H|0)==119){bc(9824,6792,394,15728);return 0}else if((H|0)==126){Wm(0);return 0}else if((H|0)==137){bc(9824,6792,394,15728);return 0}else if((H|0)==140){bc(9824,6792,394,15728);return 0}else if((H|0)==143){bc(9824,6792,394,15728);return 0}else if((H|0)==146){bc(9824,6792,394,15728);return 0}else if((H|0)==153){Wm(0);return 0}else if((H|0)==168){Wm(0);return 0}else if((H|0)==179){bc(9824,6792,394,15728);return 0}else if((H|0)==182){bc(9824,6792,394,15728);return 0}else if((H|0)==185){bc(9824,6792,394,15728);return 0}else if((H|0)==188){bc(9824,6792,394,15728);return 0}else if((H|0)==195){Wm(0);return 0}else if((H|0)==210){Wm(0);return 0}else if((H|0)==221){bc(9824,6792,394,15728);return 0}else if((H|0)==224){bc(9824,6792,394,15728);return 0}else if((H|0)==227){bc(9824,6792,394,15728);return 0}else if((H|0)==230){bc(9824,6792,394,15728);return 0}else if((H|0)==237){Wm(0);return 0}else if((H|0)==252){Wm(0);return 0}}else{cb=A;db=A}}while(0);c[o>>2]=db;c[p>>2]=cb;ue(o,p,a,0);do{if((c[a+16>>2]|0)==0){p=c[a+28>>2]|0;o=a+4|0;cb=c[o>>2]|0;A=a+12|0;H=cb;while(1){if(!((H|0)>-1)){break}if((c[(c[A>>2]|0)+(H<<2)>>2]|0)==0){H=H-1|0}else{break}}_a=H+1|0;if((_a|0)>(cb|0)){break}$a=c[A>>2]|0;ab=_a;do{c[$a+(ab<<2)>>2]=p;ab=ab+1|0;}while((ab|0)<=(c[o>>2]|0))}}while(0);if((db|0)==0){eb=n|0;fb=c[eb>>2]|0;gb=fb;Vp(gb);hb=c[j>>2]|0;ib=hb;Vp(ib);jb=k|0;kb=c[jb>>2]|0;lb=kb;Vp(lb);mb=c[t>>2]|0;nb=mb;Vp(nb);i=e;return 0}bq(db);eb=n|0;fb=c[eb>>2]|0;gb=fb;Vp(gb);hb=c[j>>2]|0;ib=hb;Vp(ib);jb=k|0;kb=c[jb>>2]|0;lb=kb;Vp(lb);mb=c[t>>2]|0;nb=mb;Vp(nb);i=e;return 0}function Ke(a){a=a|0;fc(c[r>>2]|0,a|0,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0)|0;i=a;jb(-1|0)}function Le(a){a=a|0;c[a>>2]=0;c[a+4>>2]=1;c[a+8>>2]=3;c[a+12>>2]=0;c[a+16>>2]=0;h[a+24>>3]=1.0;c[a+32>>2]=0;c[a+36>>2]=0;c[a+40>>2]=0;c[a+120>>2]=1;return}function Me(a){a=a|0;Xe(c[a+20>>2]|0);return}function Ne(a){a=a|0;var b=0;b=a+20|0;Xe(c[(c[b>>2]|0)+8>>2]|0);Xe(c[(c[b>>2]|0)+12>>2]|0);Xe(c[(c[b>>2]|0)+4>>2]|0);Xe(c[b>>2]|0);return}function Oe(a){a=a|0;var b=0;b=a+20|0;Xe(c[(c[b>>2]|0)+16>>2]|0);Xe(c[(c[b>>2]|0)+20>>2]|0);Xe(c[(c[b>>2]|0)+8>>2]|0);Xe(c[(c[b>>2]|0)+12>>2]|0);Xe(c[(c[b>>2]|0)+24>>2]|0);Xe(c[(c[b>>2]|0)+28>>2]|0);Xe(c[b>>2]|0);return}function Pe(a){a=a|0;var b=0;b=a+20|0;Xe(c[(c[b>>2]|0)+12>>2]|0);Xe(c[(c[b>>2]|0)+16>>2]|0);Xe(c[b>>2]|0);return}function Qe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)>0){e=0}else{return}do{c[d+(c[b+(e<<2)>>2]<<2)>>2]=-1;e=e+1|0;}while((e|0)<(a|0));return}function Re(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=c[f>>2]|0;g=c[f+12>>2]|0;c[d>>2]=0;c[e>>2]=c[(c[f+32>>2]|0)+(a<<2)>>2];h=c[(c[f+4>>2]|0)+(a<<2)>>2]|0;if((a|0)<1|(h|0)<0){return}a=0;f=c[b>>2]|0;while(1){i=a+1|0;j=b+(i<<2)|0;k=c[j>>2]|0;if((f|0)<(k|0)){l=1-f|0;m=(c[g+(f+1<<2)>>2]|0)-(c[g+(f<<2)>>2]|0)|0;n=f;while(1){c[d>>2]=(c[d>>2]|0)+m;c[e>>2]=l+n+(c[e>>2]|0);o=n+1|0;p=c[j>>2]|0;if((o|0)<(p|0)){m=m-1|0;n=o}else{q=p;break}}}else{q=k}if((i|0)>(h|0)){break}else{a=i;f=q}}return}function Se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((a|0)<2){return}e=c[d>>2]|0;f=c[d+8>>2]|0;g=c[d+12>>2]|0;h=c[(c[d+4>>2]|0)+(a<<2)>>2]|0;if((h|0)<0){i=0}else{d=0;j=0;k=c[e>>2]|0;while(1){l=g+(k<<2)|0;m=c[l>>2]|0;c[l>>2]=j;l=k+1|0;n=g+(l<<2)|0;if((m|0)<(c[n>>2]|0)){o=m;m=j;while(1){c[f+(m<<2)>>2]=c[b+(c[f+(o<<2)>>2]<<2)>>2];p=m+1|0;q=o+1|0;if((q|0)<(c[n>>2]|0)){o=q;m=p}else{r=p;break}}}else{r=j}m=d+1|0;o=e+(m<<2)|0;n=c[o>>2]|0;if((l|0)<(n|0)){p=l;while(1){c[g+(p<<2)>>2]=r;q=p+1|0;s=c[o>>2]|0;if((q|0)<(s|0)){p=q}else{t=s;break}}}else{t=n}if((m|0)>(h|0)){i=r;break}else{d=m;j=r;k=t}}}c[g+(a<<2)>>2]=i;return}function Te(a){a=a|0;var b=0,d=0,e=0,f=0,j=0,k=0;b=i;i=i+512|0;d=bf(1)|0;e=bf(2)|0;c[a>>2]=af(((d|0)>(e|0)?d:e)+1|0)|0;e=We(128)|0;d=a+4|0;c[d>>2]=e;if((e|0)==0){e=b|0;kb(e|0,9920,(f=i,i=i+24|0,c[f>>2]=9512,c[f+8>>2]=305,c[f+16>>2]=9088,f)|0)|0;i=f;Ke(e)}e=We(64)|0;j=e;c[a+8>>2]=j;if((e|0)==0){k=b+256|0;kb(k|0,9920,(f=i,i=i+24|0,c[f>>2]=8512,c[f+8>>2]=307,c[f+16>>2]=9088,f)|0)|0;i=f;Ke(k)}else{k=c[d>>2]|0;h[k>>3]=0.0;g[j>>2]=0.0;h[k+8>>3]=0.0;g[e+4>>2]=0.0;h[k+16>>3]=0.0;g[e+8>>2]=0.0;h[k+24>>3]=0.0;g[e+12>>2]=0.0;h[k+32>>3]=0.0;g[e+16>>2]=0.0;h[k+40>>3]=0.0;g[e+20>>2]=0.0;h[k+48>>3]=0.0;g[e+24>>2]=0.0;h[k+56>>3]=0.0;g[e+28>>2]=0.0;h[k+64>>3]=0.0;g[e+32>>2]=0.0;h[k+72>>3]=0.0;g[e+36>>2]=0.0;h[k+80>>3]=0.0;g[e+40>>2]=0.0;h[k+88>>3]=0.0;g[e+44>>2]=0.0;h[k+96>>3]=0.0;g[e+48>>2]=0.0;h[k+104>>3]=0.0;g[e+52>>2]=0.0;h[k+112>>3]=0.0;g[e+56>>2]=0.0;h[k+120>>3]=0.0;g[e+60>>2]=0.0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;i=b;return}}function Ue(a){a=a|0;Xe(c[a>>2]|0);Xe(c[a+4>>2]|0);Xe(c[a+8>>2]|0);return}function Ve(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((b|0)>0){e=0}else{return}do{c[a+(e<<2)>>2]=d;e=e+1|0;}while((e|0)<(b|0));return}function We(a){a=a|0;return Up(a)|0}function Xe(a){a=a|0;Vp(a);return}function Ye(a,b,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;c[f>>2]=e;c[g>>2]=e+(a<<2);g=a<<1;c[h>>2]=e+(g<<2);h=g+a|0;c[i>>2]=e+(h<<2);g=fa(d,a)|0;a=g+h|0;c[j>>2]=e+(a<<2);h=a+g|0;c[k>>2]=e+(h<<2);c[l>>2]=e+(h+b<<2);Ve(c[i>>2]|0,g,-1);Ve(c[j>>2]|0,g,-1);return}function Ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=b;b=d;if((a|0)>0){f=0}else{return}do{c[b+(f<<2)>>2]=c[e+(f<<2)>>2];f=f+1|0;}while((f|0)<(a|0));return}function _e(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;e=d-1|0;if((e|0)<0){return}d=b+e|0;b=c+e|0;while(1){a[b]=a[d]|0;e=b-1|0;if(e>>>0<c>>>0){break}else{d=d-1|0;b=e}}return}function $e(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+256|0;d=Up(a<<2)|0;a=d;if((d|0)!=0){i=b;return a|0}d=b|0;kb(d|0,9424,(e=i,i=i+24|0,c[e>>2]=13104,c[e+8>>2]=138,c[e+16>>2]=9496,e)|0)|0;i=e;Ke(d);i=b;return a|0}function af(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+256|0;d=Up(a<<2)|0;e=d;if((d|0)==0){f=b|0;kb(f|0,9424,(g=i,i=i+24|0,c[g>>2]=6536,c[g+8>>2]=149,c[g+16>>2]=9496,g)|0)|0;i=g;Ke(f)}if((a|0)<=0){i=b;return e|0}tq(d|0,0,a<<2|0)|0;i=b;return e|0}function bf(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+8|0;d=b|0;switch(a|0){case 6:{e=20;break};case 2:{e=6;break};case 5:{e=60;break};case 7:{e=10;break};case 1:{e=12;break};case 4:{e=200;break};case 3:{e=100;break};default:{c[d>>2]=1;cf(9e3,d)|0;e=0}}i=b;return e|0}function cf(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=c[b>>2]|0;Gb(8888,(b=i,i=i+16|0,c[b>>2]=a,c[b+8>>2]=e,b)|0)|0;i=b;i=d;return 0}function df(b,d,e,f,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z){b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;var A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0,$=0,aa=0.0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0.0,ta=0.0,ua=0,va=0,wa=0.0,xa=0.0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0;A=i;i=i+72|0;B=A|0;C=A+24|0;D=A+32|0;E=A+40|0;F=A+48|0;G=A+56|0;H=A+64|0;I=c[r+20>>2]|0;J=c[s+20>>2]|0;K=c[I+4>>2]|0;L=c[J+4>>2]|0;M=I;I=c[M>>2]|0;N=J;J=c[N>>2]|0;O=r+16|0;P=c[O>>2]|0;c[z>>2]=0;Q=b|0;R=(c[Q>>2]|0)!=3;S=b+4|0;T=c[S>>2]|0;U=b+12|0;V=(c[U>>2]|0)==0;if(R){a[k]=78;W=0;X=0;Y=0.0;Z=0.0}else{if((hg(k,8640)|0)==0){_=(hg(k,13056)|0)!=0|0}else{_=1}if((hg(k,9456)|0)==0){$=(hg(k,13056)|0)!=0|0}else{$=1}aa=+Mf(6520);W=$;X=_;Y=aa;Z=1.0/aa}_=c[Q>>2]|0;do{if(_>>>0<4>>>0){ba=12}else{if((c[U>>2]|0)>>>0<3>>>0){ba=12;break}if((c[S>>2]|0)>>>0<2>>>0){ba=12;break}c[z>>2]=-1;ca=-1}}while(0);a:do{if((ba|0)==12){S=d+12|0;$=c[S>>2]|0;da=d+16|0;do{if(!(($|0)!=(c[da>>2]|0)|($|0)<0)){ea=d|0;ga=c[ea>>2]|0;if(!((ga|0)==0|(ga|0)==2)){break}ga=d+4|0;if((c[ga>>2]|0)!=1){break}ha=d+8|0;if((c[ha>>2]|0)!=0){break}ia=(X|0)==0;ja=(W|0)==0;do{if((_|0)==3&ia&ja){if((hg(k,5184)|0)!=0){break}c[z>>2]=-6;ca=-6;break a}}while(0);do{if(!ia){ka=c[S>>2]|0;la=(ka|0)>0;if(la){ma=0;aa=0.0;na=Z;while(1){oa=+h[l+(ma<<3)>>3];pa=na<oa?na:oa;qa=aa>oa?aa:oa;ra=ma+1|0;if((ra|0)<(ka|0)){ma=ra;aa=qa;na=pa}else{sa=qa;ta=pa;break}}}else{sa=0.0;ta=Z}if(!(ta>0.0)){c[z>>2]=-7;break}if(la){h[H>>3]=(ta>Y?ta:Y)/(sa<Z?sa:Z);break}else{h[H>>3]=1.0;break}}}while(0);ia=c[z>>2]|0;ma=(ia|0)==0;do{if(ja){if(!ma){ca=ia;break a}}else{if(!ma){ca=ia;break a}ka=c[S>>2]|0;ra=(ka|0)>0;if(ra){ua=0;na=0.0;aa=Z;while(1){pa=+h[m+(ua<<3)>>3];qa=aa<pa?aa:pa;oa=na>pa?na:pa;va=ua+1|0;if((va|0)<(ka|0)){ua=va;na=oa;aa=qa}else{wa=oa;xa=qa;break}}}else{wa=0.0;xa=Z}if(!(xa>0.0)){c[z>>2]=-8;ca=-8;break a}if(ra){h[G>>3]=(xa>Y?xa:Y)/(wa<Z?wa:Z);break}else{h[G>>3]=1.0;break}}}while(0);b:do{if((q|0)<-1){c[z>>2]=-12;ya=-12}else{ia=c[O>>2]|0;if((ia|0)<0){c[z>>2]=-13;ya=-13;break}if((ia|0)<=0){ya=0;break}ia=c[S>>2]|0;do{if((c[M>>2]|0)>=(((ia|0)<0?0:ia)|0)){if((c[r>>2]|0)!=6){break}if((c[r+4>>2]|0)!=1){break}if((c[r+8>>2]|0)==0){ya=0;break b}}}while(0);c[z>>2]=-13;ya=-13}}while(0);ia=c[s+16>>2]|0;if((ia|0)<0){c[z>>2]=-14;ca=-14;break a}c:do{if((ia|0)>0){ra=c[S>>2]|0;do{if((c[N>>2]|0)>=(((ra|0)<0?0:ra)|0)){ma=c[O>>2]|0;if(!((ma|0)==0|(ma|0)==(ia|0))){break}if((c[s>>2]|0)!=6){break}if((c[s+4>>2]|0)!=1){break}if((c[s+8>>2]|0)==0){break c}}}while(0);c[z>>2]=-14;ca=-14;break a}}while(0);if((ya|0)!=0){ca=ya;break a}ia=bf(1)|0;ra=bf(2)|0;ma=c[y+4>>2]|0;if((c[ea>>2]|0)==2){ja=c[d+20>>2]|0;ua=We(24)|0;Ff(ua,c[da>>2]|0,c[S>>2]|0,c[ja>>2]|0,c[ja+4>>2]|0,c[ja+8>>2]|0,c[ja+12>>2]|0,0,c[ga>>2]|0,c[ha>>2]|0);za=ua;Aa=V^1;Ba=V&1}else{za=d;Aa=V;Ba=c[U>>2]|0}if((T|0)!=1|R^1){Ca=W;Da=X}else{aa=+Tf();gf(za,l,m,H,G,F,E);do{if((c[E>>2]|0)==0){hf(za,l,m,+h[H>>3],+h[G>>3],+h[F>>3],k);if((hg(k,8640)|0)==0){Ea=(hg(k,13056)|0)!=0|0}else{Ea=1}if((hg(k,9456)|0)!=0){Fa=1;Ga=Ea;break}Fa=(hg(k,13056)|0)!=0|0;Ga=Ea}else{Fa=W;Ga=X}}while(0);h[ma+32>>3]=+Tf()-aa;Ca=Fa;Da=Ga}do{if(R){na=+Tf();ha=c[b+8>>2]|0;do{if((ha|0)!=7){if((c[Q>>2]|0)!=0){break}Xf(ha,za,e)}}while(0);h[ma>>3]=+Tf()-na;qa=+Tf();bg(b,za,e,j,B);h[ma+24>>3]=+Tf()-qa;qa=+Tf();lf(b,B,ra,ia,j,p,q,e,f,n,o,y,z);h[ma+56>>3]=+Tf()-qa;if(!((q|0)==-1)){break}g[x+4>>2]=+((c[z>>2]|0)-(c[da>>2]|0)|0);i=A;return}}while(0);do{if((c[b+36>>2]|0)!=0){ia=c[z>>2]|0;ra=c[da>>2]|0;if((ia|0)<=0){h[t>>3]=+jf(ra,za,e,n,o);break}if((ia|0)>(ra|0)){i=A;return}h[t>>3]=+jf(ia,za,e,n,o);i=A;return}}while(0);ia=b+40|0;if((c[ia>>2]|0)!=0){aa=+Tf();ra=C|0;a[ra]=Aa?49:73;ef(ra,n,o,+ff(ra,za),u,y,z);h[ma+80>>3]=+Tf()-aa}do{if((P|0)>0){do{if(Aa){if((Da|0)==0){break}ra=c[S>>2]|0;ha=(ra|0)>0;ga=0;do{if(ha){ua=fa(ga,I)|0;ja=(ra|0)>1;ka=0;do{la=K+(ka+ua<<3)|0;h[la>>3]=+h[l+(ka<<3)>>3]*+h[la>>3];ka=ka+1|0;}while((ka|0)<(ra|0));Ha=ja?ra:1}else{Ha=0}ga=ga+1|0;}while((ga|0)<(P|0));c[D>>2]=Ha}else{if((Ca|0)==0){break}ga=c[S>>2]|0;ra=(ga|0)>0;ha=0;do{if(ra){ka=fa(ha,I)|0;ua=(ga|0)>1;la=0;do{va=K+(la+ka<<3)|0;h[va>>3]=+h[m+(la<<3)>>3]*+h[va>>3];la=la+1|0;}while((la|0)<(ga|0));Ia=ua?ga:1}else{Ia=0}ha=ha+1|0;}while((ha|0)<(P|0));c[D>>2]=Ia}}while(0);ha=c[r+12>>2]|0;if((ha|0)>0){ga=0;while(1){ra=fa(ga,I)|0;la=fa(ga,J)|0;ka=(ha|0)>1;ja=0;do{h[L+(ja+la<<3)>>3]=+h[K+(ja+ra<<3)>>3];ja=ja+1|0;}while((ja|0)<(ha|0));ja=ga+1|0;if((ja|0)<(P|0)){ga=ja}else{Ja=ka?ha:1;break}}}else{Ja=0}c[D>>2]=Ja;na=+Tf();mf(Ba,n,o,e,f,s,y,z);h[ma+88>>3]=+Tf()-na;na=+Tf();if((c[b+16>>2]|0)==0){ha=0;do{h[w+(ha<<3)>>3]=1.0;h[v+(ha<<3)>>3]=1.0;ha=ha+1|0;}while((ha|0)<(P|0))}else{kf(Ba,za,n,o,e,f,k,l,m,r,s,v,w,y,z)}h[ma+96>>3]=+Tf()-na;if(Aa){if((Ca|0)==0){break}ha=c[S>>2]|0;if((ha|0)>0){ga=0;while(1){ja=fa(ga,J)|0;ra=(ha|0)>1;la=0;do{va=L+(la+ja<<3)|0;h[va>>3]=+h[m+(la<<3)>>3]*+h[va>>3];la=la+1|0;}while((la|0)<(ha|0));la=ga+1|0;if((la|0)<(P|0)){ga=la}else{Ka=ra?ha:1;break}}}else{Ka=0}c[D>>2]=Ka;break}else{if((Da|0)==0){break}ha=c[S>>2]|0;if((ha|0)>0){ga=0;while(1){la=fa(ga,J)|0;ja=(ha|0)>1;ka=0;do{va=L+(ka+la<<3)|0;h[va>>3]=+h[l+(ka<<3)>>3]*+h[va>>3];ka=ka+1|0;}while((ka|0)<(ha|0));ka=ga+1|0;if((ka|0)<(P|0)){ga=ka}else{La=ja?ha:1;break}}}else{La=0}c[D>>2]=La;break}}}while(0);do{if((c[ia>>2]|0)!=0){na=+h[u>>3];if(!(na<+Mf(2592))){break}c[z>>2]=(c[da>>2]|0)+1}}while(0);if(R){wf(n,o,x)|0;Pe(B)}if((c[ea>>2]|0)!=2){i=A;return}Me(za);Xe(za);i=A;return}}while(0);c[z>>2]=-2;ca=-2}}while(0);c[D>>2]=-ca;cf(3656,D)|0;i=A;return}function ef(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=+f;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0;l=i;i=i+280|0;m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;c[k>>2]=0;do{if((a[b]|0)==49){q=1;r=5}else{if((hg(b,8384)|0)!=0){q=1;r=5;break}if((hg(b,12936)|0)!=0){q=2;r=5;break}c[k>>2]=-1;s=-1}}while(0);a:do{if((r|0)==5){b=d+12|0;t=c[b>>2]|0;do{if((t|0)>=0){if((t|0)!=(c[d+16>>2]|0)){break}if((c[d>>2]|0)!=3){break}if((c[d+4>>2]|0)!=1){break}if((c[d+8>>2]|0)!=1){break}u=c[e+12>>2]|0;do{if((u|0)>=0){if((u|0)!=(c[e+16>>2]|0)){break}if((c[e>>2]|0)!=0){break}if((c[e+4>>2]|0)!=1){break}if((c[e+8>>2]|0)!=4){break}v=c[k>>2]|0;if((v|0)!=0){s=v;break a}h[g>>3]=0.0;if((t|0)==0|(u|0)==0){h[g>>3]=1.0;i=l;return}v=Ef(t*3|0)|0;w=$e(c[b>>2]|0)|0;if((v|0)==0|(w|0)==0){x=p|0;kb(x|0,6488,(y=i,i=i+24|0,c[y>>2]=5144,c[y+8>>2]=117,c[y+16>>2]=3640,y)|0)|0;i=y;Ke(x)}h[o>>3]=0.0;c[m>>2]=0;do{Lf(b,v+(c[b>>2]<<3)|0,v,w,o,m)|0;x=c[m>>2]|0;if((x|0)==0){break}if((x|0)==(q|0)){ig(2584,2e3,1464,d,e,v,j,k)|0;ig(992,2e3,15200,d,e,v,j,k)|0}else{ig(992,13896,15200,d,e,v,j,k)|0;ig(2584,13896,1464,d,e,v,j,k)|0}}while((c[m>>2]|0)!=0);z=+h[o>>3];if(z!=0.0){h[g>>3]=1.0/z/f}Xe(v);Xe(w);i=l;return}}while(0);c[k>>2]=-3;s=-3;break a}}while(0);c[k>>2]=-2;s=-2}}while(0);c[n>>2]=-s;cf(9416,n)|0;i=l;return}function ff(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0,t=0,u=0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0;e=i;i=i+768|0;f=e|0;g=e+256|0;j=e+512|0;k=c[d+20>>2]|0;l=c[k+4>>2]|0;m=d+12|0;n=c[m>>2]|0;o=d+16|0;d=c[o>>2]|0;if((((n|0)<(d|0)?n:d)|0)==0){p=0.0;i=e;return+p}if((hg(b,8112)|0)!=0){d=c[o>>2]|0;if((d|0)<=0){p=0.0;i=e;return+p}n=c[k+12>>2]|0;q=0;r=0.0;s=c[n>>2]|0;while(1){t=q+1|0;u=c[n+(t<<2)>>2]|0;if((s|0)<(u|0)){v=r;w=s;while(1){x=+U(+(+h[l+(w<<3)>>3]));y=v>x?v:x;z=w+1|0;if((z|0)<(u|0)){v=y;w=z}else{A=y;break}}}else{A=r}if((t|0)<(d|0)){q=t;r=A;s=u}else{p=A;break}}i=e;return+p}do{if((hg(b,12920)|0)==0){if((a[b]|0)==49){break}if((hg(b,9320)|0)==0){do{if((hg(b,2576)|0)==0){if((hg(b,1976)|0)!=0){break}s=j|0;kb(s|0,6376,(B=i,i=i+24|0,c[B>>2]=968,c[B+8>>2]=114,c[B+16>>2]=3592,B)|0)|0;i=B;Ke(s);p=0.0;i=e;return+p}}while(0);u=g|0;kb(u|0,6376,(B=i,i=i+24|0,c[B>>2]=1440,c[B+8>>2]=112,c[B+16>>2]=3592,B)|0)|0;i=B;Ke(u);p=0.0;i=e;return+p}u=We(c[m>>2]<<3)|0;t=u;if((u|0)==0){s=f|0;kb(s|0,6376,(B=i,i=i+24|0,c[B>>2]=5112,c[B+8>>2]=97,c[B+16>>2]=3592,B)|0)|0;i=B;Ke(s)}s=c[m>>2]|0;if((s|0)>0){tq(u|0,0,((s|0)>1?s<<3:8)|0)|0}s=c[o>>2]|0;if((s|0)>0){q=c[k+12>>2]|0;d=k+8|0;n=0;w=c[q>>2]|0;while(1){z=n+1|0;C=c[q+(z<<2)>>2]|0;if((w|0)<(C|0)){D=c[d>>2]|0;E=w;do{A=+U(+(+h[l+(E<<3)>>3]));F=t+(c[D+(E<<2)>>2]<<3)|0;h[F>>3]=A+ +h[F>>3];E=E+1|0;}while((E|0)<(C|0))}if((z|0)<(s|0)){n=z;w=C}else{break}}}w=c[m>>2]|0;if((w|0)>0){A=0.0;n=0;while(1){r=+h[t+(n<<3)>>3];v=A>r?A:r;s=n+1|0;if((s|0)<(w|0)){A=v;n=s}else{G=v;break}}}else{G=0.0}Xe(u);p=G;i=e;return+p}}while(0);m=c[o>>2]|0;if((m|0)<=0){p=0.0;i=e;return+p}o=c[k+12>>2]|0;k=0;G=0.0;B=c[o>>2]|0;while(1){f=k+1|0;g=c[o+(f<<2)>>2]|0;if((B|0)<(g|0)){A=0.0;j=B;while(1){v=A+ +U(+(+h[l+(j<<3)>>3]));b=j+1|0;if((b|0)<(g|0)){A=v;j=b}else{H=v;break}}}else{H=0.0}A=G>H?G:H;if((f|0)<(m|0)){k=f;G=A;B=g}else{p=A;break}}i=e;return+p}function gf(a,b,d,e,f,g,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0,Q=0,R=0.0,S=0.0,T=0.0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0,aa=0,ba=0,ca=0;k=i;l=d;m=i;i=i+4|0;i=i+7&-8;c[j>>2]=0;n=a+12|0;o=c[n>>2]|0;do{if((o|0)>=0){p=a+16|0;q=c[p>>2]|0;if((q|0)<0){break}if((c[a>>2]|0)!=0){break}if((c[a+4>>2]|0)!=1){break}if((c[a+8>>2]|0)!=0){break}if((o|0)==0|(q|0)==0){h[e>>3]=1.0;h[f>>3]=1.0;h[g>>3]=0.0;i=k;return}q=c[a+20>>2]|0;r=c[q+4>>2]|0;s=+Mf(12896);t=1.0/s;c[m>>2]=0;u=c[n>>2]|0;v=(u|0)>0;if(v){w=(u|0)>1;x=0;do{h[b+(x<<3)>>3]=0.0;x=x+1|0;}while((x|0)<(u|0));c[m>>2]=w?u:1}x=c[p>>2]|0;y=(x|0)>0;if(y){z=q+12|0;A=q+8|0;B=0;C=c[z>>2]|0;while(1){D=c[C+(B<<2)>>2]|0;c[m>>2]=D;E=B+1|0;F=c[z>>2]|0;if((D|0)<(c[F+(E<<2)>>2]|0)){G=c[A>>2]|0;H=D;while(1){D=b+(c[G+(H<<2)>>2]<<3)|0;I=+h[D>>3];J=+U(+(+h[r+(H<<3)>>3]));h[D>>3]=I>J?I:J;D=H+1|0;c[m>>2]=D;K=c[z>>2]|0;if((D|0)<(c[K+(E<<2)>>2]|0)){H=D}else{L=K;break}}}else{L=F}if((E|0)<(x|0)){B=E;C=L}else{break}}}c[m>>2]=0;if(v){C=(u|0)>1;B=0;J=t;I=0.0;do{M=+h[b+(B<<3)>>3];I=I>M?I:M;J=J<M?J:M;B=B+1|0;}while((B|0)<(u|0));c[m>>2]=C?u:1;N=J;O=I}else{N=t;O=0.0}h[g>>3]=O;c[m>>2]=0;a:do{if(N==0.0){if(v){P=0}else{break}while(1){Q=P+1|0;if(+h[b+(P<<3)>>3]==0.0){break}c[m>>2]=Q;if((Q|0)<(u|0)){P=Q}else{break a}}c[j>>2]=Q;i=k;return}else{if(v){E=(u|0)>1;F=0;do{M=+h[b+(F<<3)>>3];R=M>s?M:s;h[b+(F<<3)>>3]=1.0/(R<t?R:t);F=F+1|0;}while((F|0)<(u|0));c[m>>2]=E?u:1}h[e>>3]=(N>s?N:s)/(O<t?O:t)}}while(0);do{if(y){tq(l|0,0,((x|0)>1?x<<3:8)|0)|0;u=c[p>>2]|0;v=(u|0)>0;if(!v){S=t;T=0.0;V=0;W=u;break}C=q+12|0;F=q+8|0;B=0;z=c[C>>2]|0;while(1){A=c[z+(B<<2)>>2]|0;c[m>>2]=A;w=B+1|0;H=c[C>>2]|0;if((A|0)<(c[H+(w<<2)>>2]|0)){G=c[F>>2]|0;K=d+(B<<3)|0;D=A;I=+h[K>>3];while(1){J=+U(+(+h[r+(D<<3)>>3]));R=J*+h[b+(c[G+(D<<2)>>2]<<3)>>3];J=I>R?I:R;h[K>>3]=J;A=D+1|0;c[m>>2]=A;X=c[C>>2]|0;if((A|0)<(c[X+(w<<2)>>2]|0)){D=A;I=J}else{Y=X;break}}}else{Y=H}if((w|0)<(u|0)){B=w;z=Y}else{break}}if(v){Z=t;_=0.0;$=0}else{S=t;T=0.0;V=0;W=u;break}while(1){I=+h[d+($<<3)>>3];J=_>I?_:I;R=Z<I?Z:I;z=$+1|0;if((z|0)<(u|0)){Z=R;_=J;$=z}else{S=R;T=J;V=1;W=u;break}}}else{S=t;T=0.0;V=0;W=x}}while(0);if(S==0.0){aa=0}else{if(V){x=0;do{r=d+(x<<3)|0;J=+h[r>>3];R=J>s?J:s;h[r>>3]=1.0/(R<t?R:t);x=x+1|0;}while((x|0)<(W|0))}h[f>>3]=(S>s?S:s)/(T<t?T:t);i=k;return}while(1){if((aa|0)>=(W|0)){ba=49;break}ca=aa+1|0;if(+h[d+(aa<<3)>>3]==0.0){break}else{aa=ca}}if((ba|0)==49){i=k;return}c[j>>2]=ca+(c[n>>2]|0);i=k;return}}while(0);c[j>>2]=-1;c[m>>2]=1;cf(7688,m)|0;i=k;return}function hf(b,d,e,f,g,i,j){b=b|0;d=d|0;e=e|0;f=+f;g=+g;i=+i;j=j|0;var k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;do{if((c[b+12>>2]|0)>=1){k=b+16|0;if((c[k>>2]|0)<1){break}l=c[b+20>>2]|0;m=c[l+4>>2]|0;n=+Mf(7616);o=n/+Mf(12880);p=g<.1;if(!(f<.1|o>i|1.0/o<i)){if(!p){a[j]=78;return}q=c[k>>2]|0;if((q|0)>0){r=c[l+12>>2]|0;s=0;t=c[r>>2]|0;while(1){o=+h[e+(s<<3)>>3];u=s+1|0;v=c[r+(u<<2)>>2]|0;if((t|0)<(v|0)){w=t;do{x=m+(w<<3)|0;h[x>>3]=o*+h[x>>3];w=w+1|0;}while((w|0)<(v|0))}if((u|0)<(q|0)){s=u;t=v}else{break}}}a[j]=67;return}t=c[k>>2]|0;s=(t|0)>0;if(p){if(s){q=c[l+12>>2]|0;r=l+8|0;w=0;x=c[q>>2]|0;while(1){o=+h[e+(w<<3)>>3];y=w+1|0;z=c[q+(y<<2)>>2]|0;if((x|0)<(z|0)){A=c[r>>2]|0;B=x;do{C=m+(B<<3)|0;h[C>>3]=+h[C>>3]*o*+h[d+(c[A+(B<<2)>>2]<<3)>>3];B=B+1|0;}while((B|0)<(z|0))}if((y|0)<(t|0)){w=y;x=z}else{break}}}a[j]=66;return}else{if(s){x=c[l+12>>2]|0;w=l+8|0;r=0;q=c[x>>2]|0;while(1){p=r+1|0;k=c[x+(p<<2)>>2]|0;if((q|0)<(k|0)){B=c[w>>2]|0;A=q;do{v=m+(A<<3)|0;h[v>>3]=+h[d+(c[B+(A<<2)>>2]<<3)>>3]*+h[v>>3];A=A+1|0;}while((A|0)<(k|0))}if((p|0)<(t|0)){r=p;q=k}else{break}}}a[j]=82;return}}}while(0);a[j]=78;return}function jf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0;g=1.0/+Mf(7608);i=c[b+20>>2]|0;j=c[e+20>>2]|0;e=c[f+20>>2]|0;f=c[i+4>>2]|0;k=c[j+8>>2]|0;l=c[e+4>>2]|0;m=b+16|0;b=We(c[m>>2]<<2)|0;n=b;if((c[m>>2]|0)>0){o=0;do{c[n+(c[d+(o<<2)>>2]<<2)>>2]=o;o=o+1|0;}while((o|0)<(c[m>>2]|0))}m=c[j+4>>2]|0;o=j+28|0;d=j+20|0;p=j+12|0;j=i+12|0;i=e+12|0;q=g;e=0;while(1){if((e|0)>(m|0)){r=q;s=18;break}t=c[o>>2]|0;u=c[t+(e<<2)>>2]|0;v=c[d>>2]|0;w=(c[v+(u+1<<2)>>2]|0)-(c[v+(u<<2)>>2]|0)|0;v=e+1|0;x=c[t+(v<<2)>>2]|0;t=(u|0)<(a|0);if((u|0)<(x|0)&t){y=c[j>>2]|0;z=c[i>>2]|0;A=u;g=q;B=1;C=k+(c[(c[p>>2]|0)+(u<<2)>>2]<<3)|0;while(1){u=c[n+(A<<2)>>2]|0;D=c[y+(u<<2)>>2]|0;E=c[y+(u+1<<2)>>2]|0;if((D|0)<(E|0)){u=D;F=0.0;while(1){G=+U(+(+h[f+(u<<3)>>3]));H=F>G?F:G;D=u+1|0;if((D|0)<(E|0)){u=D;F=H}else{I=H;break}}}else{I=0.0}u=c[z+(A<<2)>>2]|0;E=A+1|0;D=c[z+(E<<2)>>2]|0;if((u|0)<(D|0)){J=u;F=0.0;while(1){H=+U(+(+h[l+(J<<3)>>3]));G=F>H?F:H;u=J+1|0;if((u|0)<(D|0)){J=u;F=G}else{K=G;break}}}else{K=0.0}if((B|0)>0){J=0;F=K;while(1){G=+U(+(+h[C+(J<<3)>>3]));H=F>G?F:G;D=J+1|0;if((D|0)<(B|0)){J=D;F=H}else{L=H;break}}}else{L=K}if(L==0.0){M=g<1.0?g:1.0}else{F=I/L;M=g<F?g:F}J=(E|0)<(a|0);if((E|0)<(x|0)&J){A=E;g=M;B=B+1|0;C=C+(w<<3)|0}else{N=M;O=J;break}}}else{N=q;O=t}if(O){q=N;e=v}else{r=N;s=18;break}}if((s|0)==18){Xe(b);return+r}return 0.0}function kf(b,d,e,f,g,j,k,l,m,n,o,p,q,r,s){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;var t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0.0,ga=0.0,ha=0.0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0.0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0.0,Oa=0,Pa=0,Qa=0.0,Ra=0,Sa=0.0,Ta=0,Ua=0.0,Va=0.0,Wa=0,Xa=0.0,Ya=0,Za=0.0,_a=0,$a=0.0,ab=0;t=i;i=i+576|0;u=t|0;v=t+8|0;w=t+16|0;x=t+40|0;y=t+48|0;z=t+56|0;A=t+64|0;B=t+320|0;c[u>>2]=1;h[v>>3]=1.0;C=c[d+20>>2]|0;D=c[C+4>>2]|0;E=c[n+20>>2]|0;F=c[o+20>>2]|0;G=c[E+4>>2]|0;H=c[F+4>>2]|0;I=c[E>>2]|0;E=c[F>>2]|0;F=c[n+16>>2]|0;c[s>>2]=0;J=(b|0)==0;K=J^1;a:do{if((b-1|0)>>>0>1>>>0&K){c[s>>2]=-1;L=-1}else{M=d+12|0;N=c[M>>2]|0;O=d+16|0;do{if(!((N|0)!=(c[O>>2]|0)|(N|0)<0)){if((c[d>>2]|0)!=0){break}if((c[d+4>>2]|0)!=1){break}if((c[d+8>>2]|0)!=0){break}P=c[e+12>>2]|0;do{if(!((P|0)!=(c[e+16>>2]|0)|(P|0)<0)){if((c[e>>2]|0)!=3){break}if((c[e+4>>2]|0)!=1){break}if((c[e+8>>2]|0)!=1){break}Q=c[f+12>>2]|0;do{if(!((Q|0)!=(c[f+16>>2]|0)|(Q|0)<0)){if((c[f>>2]|0)!=0){break}if((c[f+4>>2]|0)!=1){break}if((c[f+8>>2]|0)!=4){break}do{if((I|0)>=(N|0)){R=n|0;if((c[R>>2]|0)!=6){break}S=n+4|0;if((c[S>>2]|0)!=1){break}T=n+8|0;if((c[T>>2]|0)!=0){break}do{if((E|0)>=(N|0)){if((c[o>>2]|0)!=6){break}if((c[o+4>>2]|0)!=1){break}if((c[o+8>>2]|0)!=0){break}if((N|0)==0|(F|0)==0){if((F|0)>0){V=0}else{i=t;return}do{h[p+(V<<3)>>3]=0.0;h[q+(V<<3)>>3]=0.0;V=V+1|0;}while((V|0)<(F|0));i=t;return}if((hg(k,12864)|0)==0){W=(hg(k,9312)|0)==0}else{W=0}if((hg(k,6368)|0)==0){X=(hg(k,9312)|0)==0}else{X=0}Y=Df(c[M>>2]<<1)|0;Z=We(c[M>>2]<<3)|0;_=Z;$=$e(c[M>>2]<<1)|0;if((Y|0)==0|(Z|0)==0|($|0)==0){aa=A|0;kb(aa|0,5080,(ba=i,i=i+24|0,c[ba>>2]=3552,c[ba+8>>2]=222,c[ba+16>>2]=2560,ba)|0)|0;i=ba;Ke(aa)}aa=z|0;ca=J&1;a[aa]=J?78:84;da=(c[O>>2]|0)+1|0;ea=+Mf(1968);ga=+(da|0)*+Mf(1424);ha=ga/ea;c[y>>2]=0;if((c[M>>2]|0)>0){da=0;do{c[$+(da<<2)>>2]=0;da=(c[y>>2]|0)+1|0;c[y>>2]=da;}while((da|0)<(c[M>>2]|0))}da=c[O>>2]|0;ia=(da|0)>0;do{if(J){if(!ia){break}ja=C+12|0;ka=C+8|0;la=0;ma=c[ja>>2]|0;na=da;while(1){oa=c[ma+(la<<2)>>2]|0;c[y>>2]=oa;pa=la+1|0;qa=c[ja>>2]|0;if((oa|0)<(c[qa+(pa<<2)>>2]|0)){ra=c[ka>>2]|0;sa=oa;do{oa=$+(c[ra+(sa<<2)>>2]<<2)|0;c[oa>>2]=(c[oa>>2]|0)+1;sa=(c[y>>2]|0)+1|0;c[y>>2]=sa;ta=c[ja>>2]|0;}while((sa|0)<(c[ta+(pa<<2)>>2]|0));ua=ta;va=c[O>>2]|0}else{ua=qa;va=na}if((pa|0)<(va|0)){la=pa;ma=ua;na=va}else{break}}}else{if(!ia){break}na=c[C+12>>2]|0;ma=0;while(1){la=ma+1|0;c[$+(ma<<2)>>2]=(c[na+(la<<2)>>2]|0)-(c[na+(ma<<2)>>2]|0);if((la|0)<(c[O>>2]|0)){ma=la}else{break}}}}while(0);c[w>>2]=c[R>>2];c[w+4>>2]=c[S>>2];c[w+8>>2]=c[T>>2];c[w+12>>2]=c[n+12>>2];c[w+16>>2]=1;ia=We(8)|0;da=w+20|0;c[da>>2]=ia;if((ia|0)==0){ma=B|0;kb(ma|0,5080,(ba=i,i=i+24|0,c[ba>>2]=928,c[ba+8>>2]=259,c[ba+16>>2]=2560,ba)|0)|0;i=ba;Ke(ma);wa=c[da>>2]|0}else{wa=ia}c[wa>>2]=I;ia=Y;c[wa+4>>2]=ia;if((F|0)>0){ma=C+12|0;na=C+8|0;la=r+16|0;ja=X|K;ka=J|W;sa=0;do{ra=fa(sa,I)|0;oa=G+(ra<<3)|0;xa=fa(sa,E)|0;ya=H+(xa<<3)|0;za=q+(sa<<3)|0;Aa=0;Ba=3.0;while(1){pg(M,oa,u,Y,u)|0;Ca=c[u>>2]|0;jg(aa,-1.0,d,ya,Ca,+h[v>>3],Y,Ca)|0;c[y>>2]=0;Ca=c[M>>2]|0;Da=(Ca|0)>0;if(Da){Ea=(Ca|0)>1;Fa=0;do{h[_+(Fa<<3)>>3]=+U(+(+h[G+(Fa+ra<<3)>>3]));Fa=Fa+1|0;}while((Fa|0)<(Ca|0));c[y>>2]=Ea?Ca:1}Fa=c[O>>2]|0;pa=(Fa|0)>0;do{if(J){if(!pa){break}qa=0;Ga=c[ma>>2]|0;while(1){Ha=+U(+(+h[H+(qa+xa<<3)>>3]));Ia=c[Ga+(qa<<2)>>2]|0;c[y>>2]=Ia;Ja=qa+1|0;Ka=c[ma>>2]|0;if((Ia|0)<(c[Ka+(Ja<<2)>>2]|0)){La=c[na>>2]|0;Ma=Ia;while(1){Na=Ha*+U(+(+h[D+(Ma<<3)>>3]));Ia=_+(c[La+(Ma<<2)>>2]<<3)|0;h[Ia>>3]=Na+ +h[Ia>>3];Ia=Ma+1|0;c[y>>2]=Ia;Oa=c[ma>>2]|0;if((Ia|0)<(c[Oa+(Ja<<2)>>2]|0)){Ma=Ia}else{Pa=Oa;break}}}else{Pa=Ka}if((Ja|0)<(Fa|0)){qa=Ja;Ga=Pa}else{break}}}else{if(!pa){break}Ga=0;qa=c[ma>>2]|0;while(1){Ma=c[qa+(Ga<<2)>>2]|0;c[y>>2]=Ma;La=Ga+1|0;Oa=c[ma>>2]|0;if((Ma|0)<(c[Oa+(La<<2)>>2]|0)){Ia=Ma;Ha=0.0;while(1){Na=+U(+(+h[D+(Ia<<3)>>3]));Qa=Ha+Na*+U(+(+h[H+((c[(c[na>>2]|0)+(Ia<<2)>>2]|0)+xa<<3)>>3]));Ma=Ia+1|0;c[y>>2]=Ma;Ra=c[ma>>2]|0;if((Ma|0)<(c[Ra+(La<<2)>>2]|0)){Ia=Ma;Ha=Qa}else{Sa=Qa;Ta=Ra;break}}}else{Sa=0.0;Ta=Oa}Ia=_+(Ga<<3)|0;h[Ia>>3]=Sa+ +h[Ia>>3];if((La|0)<(Fa|0)){Ga=La;qa=Ta}else{break}}}}while(0);c[y>>2]=0;if(Da){Fa=(Ca|0)>1;Ha=0.0;pa=0;while(1){Qa=+h[_+(pa<<3)>>3];do{if(Qa>ha){Na=+U(+(+h[Y+(pa<<3)>>3]))/Qa;Ua=Ha>Na?Ha:Na}else{if(!(Qa!=0.0)){Ua=Ha;break}Na=(ga+ +U(+(+h[Y+(pa<<3)>>3])))/Qa;Ua=Ha>Na?Ha:Na}}while(0);Ea=pa+1|0;if((Ea|0)<(Ca|0)){Ha=Ua;pa=Ea}else{break}}c[y>>2]=Fa?Ca:1;Va=Ua}else{Va=0.0}h[za>>3]=Va;if(!(Va*2.0<=Ba&Va>ea&(Aa|0)<5)){break}mf(b,e,f,g,j,w,r,s);og(M,v,Y,u,ya,u)|0;Aa=Aa+1|0;Ba=+h[za>>3]}c[la>>2]=Aa;c[y>>2]=0;za=c[M>>2]|0;ya=(za|0)>0;if(ya){oa=(za|0)>1;pa=0;do{h[_+(pa<<3)>>3]=+U(+(+h[G+(pa+ra<<3)>>3]));pa=pa+1|0;}while((pa|0)<(za|0));c[y>>2]=oa?za:1}pa=c[O>>2]|0;ra=(pa|0)>0;do{if(J){if(!ra){break}Aa=0;Da=c[ma>>2]|0;while(1){Ba=+U(+(+h[H+(Aa+xa<<3)>>3]));Ea=c[Da+(Aa<<2)>>2]|0;c[y>>2]=Ea;qa=Aa+1|0;Ga=c[ma>>2]|0;if((Ea|0)<(c[Ga+(qa<<2)>>2]|0)){Ia=c[na>>2]|0;Ja=Ea;while(1){Ha=Ba*+U(+(+h[D+(Ja<<3)>>3]));Ea=_+(c[Ia+(Ja<<2)>>2]<<3)|0;h[Ea>>3]=Ha+ +h[Ea>>3];Ea=Ja+1|0;c[y>>2]=Ea;Ka=c[ma>>2]|0;if((Ea|0)<(c[Ka+(qa<<2)>>2]|0)){Ja=Ea}else{Wa=Ka;break}}}else{Wa=Ga}if((qa|0)<(pa|0)){Aa=qa;Da=Wa}else{break}}}else{if(!ra){break}Da=0;Aa=c[ma>>2]|0;while(1){Ca=c[Aa+(Da<<2)>>2]|0;c[y>>2]=Ca;Fa=Da+1|0;Ja=c[ma>>2]|0;if((Ca|0)<(c[Ja+(Fa<<2)>>2]|0)){Ia=Ca;Ba=0.0;while(1){Ha=+U(+(+h[H+((c[(c[na>>2]|0)+(Ia<<2)>>2]|0)+xa<<3)>>3]));Qa=Ba+Ha*+U(+(+h[D+(Ia<<3)>>3]));Ca=Ia+1|0;c[y>>2]=Ca;Ka=c[ma>>2]|0;if((Ca|0)<(c[Ka+(Fa<<2)>>2]|0)){Ia=Ca;Ba=Qa}else{Xa=Qa;Ya=Ka;break}}}else{Xa=0.0;Ya=Ja}Ia=_+(Da<<3)|0;h[Ia>>3]=Xa+ +h[Ia>>3];if((Fa|0)<(pa|0)){Da=Fa;Aa=Ya}else{break}}}}while(0);c[y>>2]=0;if(ya){pa=0;while(1){ra=_+(pa<<3)|0;Ba=+h[ra>>3];Qa=+U(+(+h[Y+(pa<<3)>>3]));Ha=Qa+Ba*ea*+((c[$+(pa<<2)>>2]|0)+1|0);if(Ba>ha){Za=Ha}else{Za=ga+Ha}h[ra>>3]=Za;ra=pa+1|0;c[y>>2]=ra;oa=c[M>>2]|0;if((ra|0)<(oa|0)){pa=ra}else{_a=oa;break}}}else{_a=za}c[x>>2]=0;pa=p+(sa<<3)|0;ya=_a;b:while(1){Lf(M,Y+(ya<<3)|0,Y,$+(ya<<2)|0,pa,x)|0;oa=c[x>>2]|0;do{if((oa|0)==1){do{if(ja){if(ka){break}c[y>>2]=0;ra=c[M>>2]|0;if((ra|0)<=0){break}Aa=(ra|0)>1;Da=0;do{Ia=Y+(Da<<3)|0;h[Ia>>3]=+h[l+(Da<<3)>>3]*+h[Ia>>3];Da=Da+1|0;}while((Da|0)<(ra|0));c[y>>2]=Aa?ra:1}else{c[y>>2]=0;Da=c[O>>2]|0;if((Da|0)<=0){break}La=(Da|0)>1;Oa=0;do{Ia=Y+(Oa<<3)|0;h[Ia>>3]=+h[m+(Oa<<3)>>3]*+h[Ia>>3];Oa=Oa+1|0;}while((Oa|0)<(Da|0));c[y>>2]=La?Da:1}}while(0);mf(ca,e,f,g,j,w,r,s);c[y>>2]=0;Fa=c[M>>2]|0;if((Fa|0)<=0){break}Ja=(Fa|0)>1;Oa=0;do{ra=Y+(Oa<<3)|0;h[ra>>3]=+h[_+(Oa<<3)>>3]*+h[ra>>3];Oa=Oa+1|0;}while((Oa|0)<(Fa|0));c[y>>2]=Ja?Fa:1}else if((oa|0)==0){break b}else{c[y>>2]=0;Oa=c[M>>2]|0;if((Oa|0)>0){ra=(Oa|0)>1;Aa=0;do{Ia=Y+(Aa<<3)|0;h[Ia>>3]=+h[_+(Aa<<3)>>3]*+h[Ia>>3];Aa=Aa+1|0;}while((Aa|0)<(Oa|0));c[y>>2]=ra?Oa:1}mf(b,e,f,g,j,w,r,s);if(!ja){c[y>>2]=0;Aa=c[O>>2]|0;if((Aa|0)<=0){break}Fa=(Aa|0)>1;Ja=0;do{Ia=Y+(Ja<<3)|0;h[Ia>>3]=+h[m+(Ja<<3)>>3]*+h[Ia>>3];Ja=Ja+1|0;}while((Ja|0)<(Aa|0));c[y>>2]=Fa?Aa:1;break}if(ka){break}c[y>>2]=0;Ja=c[O>>2]|0;if((Ja|0)<=0){break}Oa=(Ja|0)>1;ra=0;do{Ia=Y+(ra<<3)|0;h[Ia>>3]=+h[l+(ra<<3)>>3]*+h[Ia>>3];ra=ra+1|0;}while((ra|0)<(Ja|0));c[y>>2]=Oa?Ja:1}}while(0);if((c[x>>2]|0)==0){break}ya=c[M>>2]|0}c[y>>2]=0;ya=c[M>>2]|0;za=(ya|0)>0;do{if(ja){if(ka){if(!za){break}oa=(ya|0)>1;ra=0;Ha=0.0;do{Ba=+U(+(+h[H+(ra+xa<<3)>>3]));Ha=Ha>Ba?Ha:Ba;ra=ra+1|0;}while((ra|0)<(ya|0));c[y>>2]=oa?ya:1;$a=Ha;ab=148;break}else{if(!za){break}ra=(ya|0)>1;Aa=0;Ba=0.0;do{Qa=+h[l+(Aa<<3)>>3]*+U(+(+h[H+(Aa+xa<<3)>>3]));Ba=Ba>Qa?Ba:Qa;Aa=Aa+1|0;}while((Aa|0)<(ya|0));c[y>>2]=ra?ya:1;$a=Ba;ab=148;break}}else{if(!za){break}Aa=(ya|0)>1;oa=0;Ha=0.0;do{Qa=+h[m+(oa<<3)>>3]*+U(+(+h[H+(oa+xa<<3)>>3]));Ha=Ha>Qa?Ha:Qa;oa=oa+1|0;}while((oa|0)<(ya|0));c[y>>2]=Aa?ya:1;$a=Ha;ab=148}}while(0);do{if((ab|0)==148){ab=0;if(!($a!=0.0)){break}h[pa>>3]=+h[pa>>3]/$a}}while(0);sa=sa+1|0;}while((sa|0)<(F|0))}Xe(ia);Xe(Z);Xe($);Xe(c[da>>2]|0);i=t;return}}while(0);c[s>>2]=-11;L=-11;break a}}while(0);c[s>>2]=-10;L=-10;break a}}while(0);c[s>>2]=-4;L=-4;break a}}while(0);c[s>>2]=-3;L=-3;break a}}while(0);c[s>>2]=-2;L=-2}}while(0);c[y>>2]=-L;cf(7440,y)|0;i=t;return}function lf(a,b,d,e,f,j,k,l,m,n,o,p,q){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0,M=0.0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;r=i;i=i+144|0;s=r|0;t=r+8|0;u=r+16|0;v=r+24|0;w=r+32|0;x=r+40|0;y=r+48|0;z=r+56|0;A=r+64|0;B=r+72|0;C=r+80|0;D=r+88|0;E=r+96|0;F=r+104|0;G=r+112|0;H=r+120|0;I=r+128|0;J=r+136|0;K=+(bf(6)|0);L=c[a>>2]|0;M=+h[a+24>>3];N=c[p>>2]|0;O=c[p+8>>2]|0;P=b+12|0;Q=c[P>>2]|0;R=c[b+16>>2]|0;S=(Q|0)<(R|0)?Q:R;T=c[b+20>>2]|0;U=c[T+4>>2]|0;V=c[T+8>>2]|0;W=c[T+12>>2]|0;X=c[T+16>>2]|0;Y=xf(L,j,k,Q,R,c[T>>2]|0,e,K,n,o,25296,s,t)|0;c[q>>2]=Y;if((Y|0)!=0){i=r;return}Y=c[6324]|0;T=c[6325]|0;k=c[6327]|0;j=c[6329]|0;Z=c[6332]|0;Ye(Q,R,e,c[s>>2]|0,u,w,x,v,y,z,A);Af(Q,e,c[t>>2]|0,B,C);_=(L|0)==2;c[H>>2]=_&1;do{if(_){L=$e(Q)|0;if((Q|0)>0){$=0}else{aa=L;ba=1;break}while(1){c[L+(c[m+($<<2)>>2]<<2)>>2]=$;ca=$+1|0;if((ca|0)<(Q|0)){$=ca}else{aa=L;ba=1;break}}}else{aa=0;ba=0}}while(0);$=$e(R)|0;if((R|0)>0){L=0;do{c[$+(c[l+(L<<2)>>2]<<2)>>2]=L;L=L+1|0;}while((L|0)<(R|0))}L=$e(R)|0;l=c[A>>2]|0;if((c[a+32>>2]|0)==1){dg(R,f,d,l,L)}else{cg(R,f,d,l,L)}Ve(m,Q,-1);Ve(c[A>>2]|0,Q*3|0,-1);c[T>>2]=-1;c[j>>2]=0;c[Z>>2]=0;c[k>>2]=0;c[Y>>2]=0;a:do{if((S|0)>0){l=0;d=0;b:while(1){f=c[L+(d<<2)>>2]|0;do{if((f|0)==-1){a=d+e|0;ca=(a|0)<(S|0)?a:S;a=d;while(1){da=a+1|0;if((da|0)>=(ca|0)){ea=e;break}if((c[L+(da<<2)>>2]|0)==-1){a=da}else{ga=25;break}}if((ga|0)==25){ga=0;ea=da-d|0}a=(da|0)==(S|0)?S-d|0:ea;ca=N+(a<<2)|0;c[ca>>2]=(c[ca>>2]|0)+1;qf(Q,a,d,b,m,F,c[B>>2]|0,c[y>>2]|0,c[u>>2]|0,c[v>>2]|0,c[z>>2]|0,c[A>>2]|0,c[w>>2]|0,c[x>>2]|0,25296);rf(Q,a,d,c[F>>2]|0,c[B>>2]|0,c[C>>2]|0,c[u>>2]|0,c[v>>2]|0,25296,p);ca=a+d|0;if((a|0)>0){ha=l;ia=d}else{ja=ca;ka=l;break}while(1){a=fa(ia-d|0,Q)|0;c[G>>2]=c[F>>2];la=sf(Q,ia,m,G,(c[y>>2]|0)+(a<<2)|0,c[u>>2]|0,(c[v>>2]|0)+(a<<2)|0,c[z>>2]|0,c[A>>2]|0,c[w>>2]|0,c[x>>2]|0,25296)|0;c[q>>2]=la;if((la|0)!=0){ga=41;break b}la=c[F>>2]|0;ma=tf(ia,(c[G>>2]|0)-la|0,(c[B>>2]|0)+(a<<3)|0,c[C>>2]|0,(c[u>>2]|0)+(la<<2)|0,(c[v>>2]|0)+(a<<2)|0,d,25296,p)|0;c[q>>2]=ma;if((ma|0)!=0){ga=41;break b}ma=nf(ia,c[G>>2]|0,c[u>>2]|0,(c[v>>2]|0)+(a<<2)|0,m,(c[B>>2]|0)+(a<<3)|0,25296)|0;c[q>>2]=ma;if((ma|0)!=0){ga=41;break b}ma=uf(ia,M,H,m,aa,$,E,25296,p)|0;c[q>>2]=ma;la=(ma|0)!=0&(ha|0)==0?ma:ha;vf(ia,m,c[E>>2]|0,c[G>>2]|0,c[u>>2]|0,(c[v>>2]|0)+(a<<2)|0,c[z>>2]|0,25296);Qe(c[G>>2]|0,c[u>>2]|0,(c[v>>2]|0)+(a<<2)|0);a=ia+1|0;if((a|0)<(ca|0)){ha=la;ia=a}else{ja=ca;ka=la;break}}}else{ca=f-d+1|0;la=N+(ca<<2)|0;c[la>>2]=(c[la>>2]|0)+1;la=of(d,f,V,W,X,c[z>>2]|0,c[A>>2]|0,25296)|0;c[q>>2]=la;if((la|0)!=0){ga=41;break b}la=c[Z+(d<<2)>>2]|0;a=c[j+(d<<2)>>2]|0;ma=c[T+(d<<2)>>2]|0;na=c[Y+(ma<<2)>>2]|0;oa=(fa((c[k+(na+1<<2)>>2]|0)-(c[k+(na<<2)>>2]|0)|0,ca)|0)+a|0;ca=c[6335]|0;c[D>>2]=ca;pa=ca;while(1){if((oa|0)<=(pa|0)){break}ca=Cf(d,a,0,D,25296)|0;c[q>>2]=ca;if((ca|0)!=0){ga=41;break b}pa=c[D>>2]|0}if((d|0)>(f|0)){ja=d;ka=l;break}else{qa=l;ra=d}while(1){pa=ra+1|0;c[Z+(pa<<2)>>2]=la;a=c[W+(ra<<2)>>2]|0;oa=c[X+(ra<<2)>>2]|0;ca=c[B>>2]|0;if((a|0)<(oa|0)){sa=a;do{h[ca+(c[V+(sa<<2)>>2]<<3)>>3]=+h[U+(sa<<3)>>3];sa=sa+1|0;}while((sa|0)<(oa|0))}pf(ra,ma,na,ca,c[C>>2]|0,25296,p)|0;oa=uf(ra,M,H,m,aa,$,E,25296,p)|0;c[q>>2]=oa;sa=(oa|0)!=0&(qa|0)==0?oa:qa;if((pa|0)>(f|0)){ja=pa;ka=sa;break}else{qa=sa;ra=pa}}}}while(0);if((ja|0)<(S|0)){l=ka;d=ja}else{ta=ka;break a}}if((ga|0)==41){i=r;return}}else{ta=0}}while(0);c[q>>2]=ta;if((Q|0)>(R|0)&(Q|0)>0){ta=0;q=0;while(1){ga=m+(q<<2)|0;if((c[ga>>2]|0)==-1){c[ga>>2]=ta+R;ua=ta+1|0}else{ua=ta}ga=q+1|0;if((ga|0)<(Q|0)){ta=ua;q=ga}else{break}}}Re(S,c[z>>2]|0,I,J,25296);Se(S,m,25296);Bf(c[s>>2]|0,c[t>>2]|0,25296);if(_){_=n+20|0;t=c[_>>2]|0;c[t>>2]=c[I>>2];c[t+4>>2]=c[(c[6325]|0)+(R<<2)>>2];c[t+8>>2]=c[6328];c[(c[_>>2]|0)+12>>2]=c[6329];c[(c[_>>2]|0)+16>>2]=c[6326];c[(c[_>>2]|0)+20>>2]=c[6327];_=o+20|0;t=c[_>>2]|0;c[t>>2]=c[J>>2];c[t+4>>2]=c[6330];c[(c[_>>2]|0)+8>>2]=c[6331];c[(c[_>>2]|0)+12>>2]=c[6332]}else{Gf(n,c[P>>2]|0,S,c[I>>2]|0,c[6328]|0,c[6329]|0,c[6326]|0,c[6327]|0,c[6325]|0,c[6324]|0,3,1,1);Ff(o,S,S,c[J>>2]|0,c[6330]|0,c[6331]|0,c[6332]|0,0,1,4)}J=O+28|0;g[J>>2]=+g[J>>2]+(+g[O+52>>2]+ +g[O+56>>2]);O=(c[6338]|0)-1|0;c[6338]=O;c[p+20>>2]=O;if((ba|0)!=0){Xe(aa)}Xe($);Xe(L);i=r;return}function mf(a,b,d,e,f,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0,N=0,O=0,P=0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0.0,ma=0.0,na=0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0.0,ta=0,ua=0,va=0,wa=0;m=i;i=i+520|0;n=m|0;o=m+8|0;p=m+264|0;c[l>>2]=0;q=c[j+20>>2]|0;r=c[q>>2]|0;s=c[j+16>>2]|0;a:do{if(a>>>0>2>>>0){c[l>>2]=-1;t=-1}else{u=c[b+12>>2]|0;do{if(!((u|0)!=(c[b+16>>2]|0)|(u|0)<0)){if((c[b>>2]|0)!=3){break}if((c[b+4>>2]|0)!=1){break}if((c[b+8>>2]|0)!=1){break}v=c[d+12>>2]|0;do{if(!((v|0)!=(c[d+16>>2]|0)|(v|0)<0)){if((c[d>>2]|0)!=0){break}if((c[d+4>>2]|0)!=1){break}if((c[d+8>>2]|0)!=4){break}do{if((r|0)>=(u|0)){if((c[j>>2]|0)!=6){break}if((c[j+4>>2]|0)!=1){break}if((c[j+8>>2]|0)!=0){break}w=Ef(fa(u,s)|0)|0;if((w|0)==0){x=o|0;kb(x|0,12720,(y=i,i=i+24|0,c[y>>2]=9152,c[y+8>>2]=137,c[y+16>>2]=6272,y)|0)|0;i=y;Ke(x)}x=Df(u)|0;if((x|0)==0){z=p|0;kb(z|0,12720,(y=i,i=i+24|0,c[y>>2]=5048,c[y+8>>2]=139,c[y+16>>2]=6272,y)|0)|0;i=y;Ke(z)}z=c[q+4>>2]|0;A=c[b+20>>2]|0;B=c[A+8>>2]|0;C=c[d+20>>2]|0;D=c[C+4>>2]|0;c[n>>2]=0;E=(s|0)>0;b:do{if((a|0)==0){if(E){F=(u|0)>0;G=(s|0)>1;H=0;do{I=fa(H,r)|0;do{if(F){J=0;do{h[x+(c[f+(J<<2)>>2]<<3)>>3]=+h[z+(J+I<<3)>>3];J=J+1|0;}while((J|0)<(u|0));if(F){K=0}else{break}do{h[z+(K+I<<3)>>3]=+h[x+(K<<3)>>3];K=K+1|0;}while((K|0)<(u|0))}}while(0);H=H+1|0;}while((H|0)<(s|0));c[n>>2]=G?s:1}H=A+4|0;F=c[H>>2]|0;c:do{if((F|0)<0){L=0.0}else{I=A+28|0;J=A+20|0;M=s<<1;N=A+12|0;O=A+16|0;P=0;Q=0.0;R=F;while(1){S=c[I>>2]|0;T=c[S+(P<<2)>>2]|0;U=c[J>>2]|0;V=c[U+(T<<2)>>2]|0;W=c[U+(T+1<<2)>>2]|0;U=W-V|0;X=P+1|0;Y=(c[S+(X<<2)>>2]|0)-T|0;S=U-Y|0;Z=+(fa(fa(M,Y)|0,S)|0)+(Q+ +(fa(fa(Y,s)|0,Y-1|0)|0));do{if((Y|0)==1){if(!E){_=R;break}$=c[(c[N>>2]|0)+(T<<2)>>2]|0;aa=V+1|0;ba=(aa|0)<(W|0);ca=0;while(1){da=fa(ca,r)|0;if(ba){ea=c[O>>2]|0;ga=z+(da+T<<3)|0;ha=$;ia=aa;do{ha=ha+1|0;ja=z+((c[ea+(ia<<2)>>2]|0)+da<<3)|0;h[ja>>3]=+h[ja>>3]- +h[ga>>3]*+h[B+(ha<<3)>>3];ia=ia+1|0;}while((ia|0)<(W|0))}ia=ca+1|0;if((ia|0)<(s|0)){ca=ia}else{_=R;break}}}else{ca=c[(c[N>>2]|0)+(T<<2)>>2]|0;if(!E){_=R;break}aa=B+(ca<<3)|0;$=B+(ca+Y<<3)|0;ca=Y+V|0;ba=(S|0)>0;ia=0;do{ha=fa(ia,r)|0;ga=z+(ha+T<<3)|0;If(U,Y,aa,ga);Kf(U,S,Y,$,ga,w);c[n>>2]=0;if(ba){ga=c[O>>2]|0;da=0;ea=ca;while(1){ja=w+(da<<3)|0;ka=z+((c[ga+(ea<<2)>>2]|0)+ha<<3)|0;h[ka>>3]=+h[ka>>3]- +h[ja>>3];h[ja>>3]=0.0;ja=da+1|0;c[n>>2]=ja;if((ja|0)<(S|0)){da=ja;ea=ea+1|0}else{break}}}ia=ia+1|0;}while((ia|0)<(s|0));_=c[H>>2]|0}}while(0);if((X|0)>(_|0)){break}else{P=X;Q=Z;R=_}}if(!((_|0)>-1)){L=Z;break}R=A+28|0;P=A+20|0;O=A+12|0;N=C+12|0;M=C+8|0;J=_;Q=Z;while(1){I=c[R>>2]|0;S=c[I+(J<<2)>>2]|0;Y=c[P>>2]|0;U=(c[Y+(S+1<<2)>>2]|0)-(c[Y+(S<<2)>>2]|0)|0;Y=c[I+(J+1<<2)>>2]|0;I=Y-S|0;T=c[(c[O>>2]|0)+(S<<2)>>2]|0;la=Q+ +(fa(fa(I,s)|0,I+1|0)|0);do{if((I|0)==1){if(!E){ma=la;break}V=B+(T<<3)|0;W=0;ia=z;while(1){ca=ia+(S<<3)|0;h[ca>>3]=+h[ca>>3]/+h[V>>3];ca=W+1|0;if((ca|0)<(s|0)){W=ca;ia=ia+(r<<3)|0}else{na=67;break}}}else{if(!E){ma=la;break}ia=B+(T<<3)|0;W=0;while(1){Jf(U,I,ia,z+((fa(W,r)|0)+S<<3)|0);V=W+1|0;if((V|0)<(s|0)){W=V}else{na=67;break}}}}while(0);do{if((na|0)==67){na=0;if(!E){ma=la;break}I=(S|0)<(Y|0);U=0;oa=la;while(1){T=fa(U,r)|0;if(I){X=S;pa=oa;W=c[N>>2]|0;while(1){ia=X+1|0;V=c[W+(X<<2)>>2]|0;qa=pa+ +((c[W+(ia<<2)>>2]|0)-V<<1|0);c[n>>2]=V;ca=c[N>>2]|0;if((V|0)<(c[ca+(ia<<2)>>2]|0)){ba=c[M>>2]|0;$=z+(X+T<<3)|0;aa=V;while(1){V=z+((c[ba+(aa<<2)>>2]|0)+T<<3)|0;h[V>>3]=+h[V>>3]- +h[$>>3]*+h[D+(aa<<3)>>3];V=aa+1|0;c[n>>2]=V;ea=c[N>>2]|0;if((V|0)<(c[ea+(ia<<2)>>2]|0)){aa=V}else{ra=ea;break}}}else{ra=ca}if((ia|0)<(Y|0)){X=ia;pa=qa;W=ra}else{sa=qa;break}}}else{sa=oa}W=U+1|0;if((W|0)<(s|0)){U=W;oa=sa}else{ma=sa;break}}}}while(0);if((J|0)<=0){L=ma;break c}J=J-1|0;Q=ma}}}while(0);c[n>>2]=0;if(E){H=(s|0)>1;if((u|0)>0){F=0;do{G=fa(F,r)|0;J=0;while(1){h[x+(J<<3)>>3]=+h[z+((c[e+(J<<2)>>2]|0)+G<<3)>>3];N=J+1|0;if((N|0)<(u|0)){J=N}else{ta=0;break}}do{h[z+(ta+G<<3)>>3]=+h[x+(ta<<3)>>3];ta=ta+1|0;}while((ta|0)<(u|0));F=F+1|0;}while((F|0)<(s|0))}c[n>>2]=H?s:1}g[(c[k+8>>2]|0)+44>>2]=L}else{do{if(E){F=(u|0)>0;G=(s|0)>1;J=0;do{N=fa(J,r)|0;do{if(F){M=0;do{h[x+(c[e+(M<<2)>>2]<<3)>>3]=+h[z+(M+N<<3)>>3];M=M+1|0;}while((M|0)<(u|0));if(F){ua=0}else{break}do{h[z+(ua+N<<3)>>3]=+h[x+(ua<<3)>>3];ua=ua+1|0;}while((ua|0)<(u|0))}}while(0);J=J+1|0;}while((J|0)<(s|0));c[n>>2]=G?s:1;g[(c[k+8>>2]|0)+44>>2]=0.0;if(E){va=0}else{break}do{J=z+((fa(va,r)|0)<<3)|0;ig(3488,2552,1944,b,d,J,k,l)|0;ig(1400,2552,3488,b,d,J,k,l)|0;va=va+1|0;}while((va|0)<(s|0));c[n>>2]=0;if(!E){break b}G=(u|0)>0;J=(s|0)>1;F=0;do{N=fa(F,r)|0;do{if(G){M=0;do{h[x+(M<<3)>>3]=+h[z+((c[f+(M<<2)>>2]|0)+N<<3)>>3];M=M+1|0;}while((M|0)<(u|0));if(G){wa=0}else{break}do{h[z+(wa+N<<3)>>3]=+h[x+(wa<<3)>>3];wa=wa+1|0;}while((wa|0)<(u|0))}}while(0);F=F+1|0;}while((F|0)<(s|0));c[n>>2]=J?s:1;break b}else{g[(c[k+8>>2]|0)+44>>2]=0.0}}while(0);c[n>>2]=0}}while(0);Xe(w);Xe(x);i=m;return}}while(0);c[l>>2]=-6;t=-6;break a}}while(0);c[l>>2]=-3;t=-3;break a}}while(0);c[l>>2]=-2;t=-2}}while(0);c[n>>2]=-t;cf(7120,n)|0;i=m;return}function nf(a,b,d,e,f,g,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;k=i;i=i+8|0;l=k|0;m=c[j>>2]|0;n=c[j+4>>2]|0;o=j+8|0;p=c[o>>2]|0;q=c[j+12>>2]|0;r=j+24|0;s=c[r>>2]|0;t=j+28|0;u=c[t>>2]|0;v=c[j+32>>2]|0;c[l>>2]=c[j+40>>2];w=c[n+(a<<2)>>2]|0;x=c[v+(a<<2)>>2]|0;a:do{if((b|0)>0){y=x;z=p;A=s;B=u;C=0;D=b;b:while(1){E=D-1|0;F=c[d+(E<<2)>>2]|0;G=c[n+(F<<2)>>2]|0;do{if((G|0)==(w|0)){H=B;I=A;J=z;K=y}else{L=c[e+(F<<2)>>2]|0;if((L|0)==-1){H=B;I=A;J=z;K=y;break}M=c[m+(G<<2)>>2]|0;N=L-M+(c[q+(M<<2)>>2]|0)|0;M=F-L+1|0;O=M+y|0;if((O|0)>(c[l>>2]|0)){do{P=Cf(a,y,1,l,j)|0;if((P|0)!=0){Q=P;R=15;break b}S=c[r>>2]|0;P=Cf(a,y,3,l,j)|0;if((P|0)!=0){Q=P;R=15;break b}}while((O|0)>(c[l>>2]|0));T=c[o>>2]|0;U=S;V=c[t>>2]|0}else{T=z;U=A;V=B}if((M|0)<=0){H=V;I=U;J=T;K=y;break}O=y+1+F|0;P=y;W=N;X=0;while(1){Y=c[T+(W<<2)>>2]|0;c[V+(P<<2)>>2]=c[f+(Y<<2)>>2];Z=g+(Y<<3)|0;h[U+(P<<3)>>3]=+h[Z>>3];h[Z>>3]=0.0;Z=X+1|0;if((Z|0)<(M|0)){P=P+1|0;W=W+1|0;X=Z}else{break}}H=V;I=U;J=T;K=O-L|0}}while(0);F=C+1|0;if((F|0)<(b|0)){y=K;z=J;A=I;B=H;C=F;D=E}else{_=K;break a}}if((R|0)==15){i=k;return Q|0}}else{_=x}}while(0);c[v+(a+1<<2)>>2]=_;Q=0;i=k;return Q|0}function of(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+8|0;l=k|0;m=c[j>>2]|0;n=c[j+4>>2]|0;o=j+8|0;p=c[o>>2]|0;q=c[j+12>>2]|0;c[l>>2]=c[j+36>>2];r=n+(a<<2)|0;s=c[r>>2]|0;t=s+1|0;c[r>>2]=t;r=q+(a<<2)|0;u=c[r>>2]|0;a:do{if((a|0)>(b|0)){v=u;w=p}else{x=u;y=a;z=p;b:while(1){A=c[e+(y<<2)>>2]|0;B=f+(y<<2)|0;if((A|0)<(c[B>>2]|0)){C=x;D=A;A=z;while(1){E=c[d+(D<<2)>>2]|0;F=h+(E<<2)|0;do{if((c[F>>2]|0)==(b|0)){G=A;H=C}else{c[F>>2]=b;I=C+1|0;c[A+(C<<2)>>2]=E;if((I|0)<(c[l>>2]|0)){G=A;H=I;break}J=Cf(a,I,2,l,j)|0;if((J|0)!=0){K=J;break b}G=c[o>>2]|0;H=I}}while(0);E=D+1|0;if((E|0)<(c[B>>2]|0)){C=H;D=E;A=G}else{L=H;M=G;break}}}else{L=x;M=z}c[n+(y<<2)>>2]=t;A=y+1|0;if((A|0)>(b|0)){v=L;w=M;break a}else{x=L;y=A;z=M}}i=k;return K|0}}while(0);do{if((a|0)<(b|0)){M=c[r>>2]|0;L=(v<<1)-M|0;do{if((L|0)>(c[l>>2]|0)){while(1){G=Cf(a,v,2,l,j)|0;if((G|0)!=0){K=G;N=21;break}if((L|0)<=(c[l>>2]|0)){N=13;break}}if((N|0)==13){O=c[o>>2]|0;P=c[r>>2]|0;break}else if((N|0)==21){i=k;return K|0}}else{O=w;P=M}}while(0);if((P|0)<(v|0)){M=v<<1;L=v;G=P;while(1){H=G+1|0;c[O+(L<<2)>>2]=c[O+(G<<2)>>2];if((H|0)<(v|0)){L=L+1|0;G=H}else{break}}Q=M-P|0}else{Q=v}G=a+1|0;if((G|0)>(b|0)){R=Q;break}else{S=G}while(1){c[q+(S<<2)>>2]=v;G=S+1|0;if((G|0)>(b|0)){R=Q;break}else{S=G}}}else{R=v}}while(0);v=b+1|0;c[m+(s+2<<2)>>2]=v;c[n+(v<<2)>>2]=t;c[g+(b<<2)>>2]=R;c[q+(v<<2)>>2]=R;K=0;i=k;return K|0}function pf(a,b,d,e,f,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0.0;b=c[j+8>>2]|0;j=c[i+8>>2]|0;k=c[i+12>>2]|0;l=c[i+16>>2]|0;m=c[i+20>>2]|0;i=c[m+(a<<2)>>2]|0;n=k+(d<<2)|0;o=c[n>>2]|0;p=k+(d+1<<2)|0;k=c[p>>2]|0;if((o|0)<(k|0)){q=o+1|0;r=i+((k|0)>(q|0)?k:q)|0;q=i;s=o;while(1){t=e+(c[j+(s<<2)>>2]<<3)|0;h[l+(q<<3)>>3]=+h[t>>3];h[t>>3]=0.0;t=s+1|0;if((t|0)<(k|0)){q=q+1|0;s=t}else{break}}u=r-o|0}else{u=i}c[m+(a+1<<2)>>2]=u;if((d|0)>=(a|0)){return 0}u=c[m+(d<<2)>>2]|0;m=(c[p>>2]|0)-(c[n>>2]|0)|0;n=a-d|0;d=m-n|0;v=+(fa(n-1|0,n)|0);a=b+52|0;g[a>>2]=v+ +g[a>>2];v=+(fa(n<<1,d)|0);a=b+56|0;g[a>>2]=+g[a>>2]+v;a=l+(i<<3)|0;If(m,n,l+(u<<3)|0,a);Kf(m,d,n,l+(u+n<<3)|0,a,f);if((d|0)<=0){return 0}a=i+n|0;n=0;while(1){i=f+(n<<3)|0;u=l+(a<<3)|0;h[u>>3]=+h[u>>3]- +h[i>>3];h[i>>3]=0.0;i=n+1|0;if((i|0)<(d|0)){a=a+1|0;n=i}else{break}}return 0}function qf(a,b,d,e,f,g,i,j,k,l,m,n,o,p,q){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;r=c[e+20>>2]|0;e=c[r+4>>2]|0;s=c[r+8>>2]|0;t=c[r+12>>2]|0;u=c[r+16>>2]|0;c[g>>2]=0;r=c[q>>2]|0;v=c[q+4>>2]|0;w=c[q+8>>2]|0;x=c[q+12>>2]|0;q=d+b|0;if((b|0)>0){y=d;z=l;A=i}else{return}while(1){i=c[t+(y<<2)>>2]|0;l=u+(y<<2)|0;if((i|0)<(c[l>>2]|0)){b=fa(y-d|0,a)|0;B=i;while(1){i=c[s+(B<<2)>>2]|0;h[A+(i<<3)>>3]=+h[e+(B<<3)>>3];C=n+(i<<2)|0;a:do{if((c[C>>2]|0)==(y|0)){D=b}else{c[C>>2]=y;E=c[f+(i<<2)>>2]|0;if((E|0)==-1){c[j+(b<<2)>>2]=i;D=b+1|0;break}F=(c[r+((c[v+(E<<2)>>2]|0)+1<<2)>>2]|0)-1|0;G=z+(F<<2)|0;H=c[G>>2]|0;if(!((H|0)==-1)){if((H|0)<=(E|0)){D=b;break}c[G>>2]=E;D=b;break}c[o+(F<<2)>>2]=-1;c[G>>2]=E;E=b;G=x+(F<<2)|0;H=F;b:while(1){F=c[G>>2]|0;I=c[m+(H<<2)>>2]|0;c:do{if((F|0)<(I|0)){J=F;K=E;d:while(1){L=J;e:while(1){M=c[w+(L<<2)>>2]|0;N=L+1|0;O=n+(M<<2)|0;do{if((c[O>>2]|0)!=(y|0)){c[O>>2]=y;P=c[f+(M<<2)>>2]|0;if((P|0)==-1){break e}Q=(c[r+((c[v+(P<<2)>>2]|0)+1<<2)>>2]|0)-1|0;R=z+(Q<<2)|0;S=c[R>>2]|0;if((S|0)==-1){break d}if((S|0)<=(P|0)){break}c[R>>2]=P}}while(0);if((N|0)<(I|0)){L=N}else{T=K;break c}}L=K+1|0;c[j+(K<<2)>>2]=M;if((N|0)<(I|0)){J=N;K=L}else{T=L;break c}}c[p+(H<<2)>>2]=N;c[o+(Q<<2)>>2]=H;c[R>>2]=P;E=K;G=x+(Q<<2)|0;H=Q;continue b}else{T=E}}while(0);I=n+(H+a<<2)|0;if((c[I>>2]|0)<(d|0)){c[k+(c[g>>2]<<2)>>2]=H;c[g>>2]=(c[g>>2]|0)+1;c[I>>2]=y}I=c[o+(H<<2)>>2]|0;if((I|0)==-1){D=T;break a}E=T;G=p+(I<<2)|0;H=I}}}while(0);i=B+1|0;if((i|0)<(c[l>>2]|0)){b=D;B=i}else{break}}}B=y+1|0;if((B|0)<(q|0)){y=B;z=z+(a<<2)|0;A=A+(a<<3)|0}else{break}}return}function rf(b,d,e,f,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0,$=0,aa=0,ba=0.0,ca=0,da=0.0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0.0,la=0.0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;o=c[n+8>>2]|0;n=c[m>>2]|0;p=c[m+4>>2]|0;q=c[m+8>>2]|0;r=c[m+12>>2]|0;s=c[m+16>>2]|0;t=c[m+20>>2]|0;if(!(a[256]|0)){m=bf(3)|0;if((m|0)>(bf(7)|0)){u=bf(3)|0}else{u=bf(7)|0}c[6250]=u;c[6248]=bf(4)|0;c[6252]=bf(5)|0;a[256]=1}u=c[6248]|0;m=u+(c[6250]|0)|0;if((f|0)<=0){return}v=e+d|0;w=(d|0)>0;d=o+52|0;x=o+56|0;o=1;y=f;z=u;while(1){u=y-1|0;A=c[k+(u<<2)>>2]|0;B=c[n+(c[p+(A<<2)>>2]<<2)>>2]|0;C=A-B|0;D=C+1|0;E=r+(B+1<<2)|0;F=c[r+(B<<2)>>2]|0;G=(c[E>>2]|0)-F|0;H=G-D|0;I=F+D|0;J=F+C|0;do{if((D|0)>=(c[6252]|0)&(H|0)>(z|0)){if(w){K=t+(B<<2)|0;L=H<<1;M=q+(J<<2)|0;N=fa(G,C)|0;O=N+D|0;P=q+(J-1<<2)|0;Q=N+C|0;N=q+(J-2<<2)|0;R=e;S=l;T=i;U=j;while(1){V=c[S+(A<<2)>>2]|0;a:do{if(!((V|0)==-1)){W=A-V|0;X=W+1|0;Y=c[K>>2]|0;Z=+(fa(X,W)|0);g[d>>2]=Z+ +g[d>>2];Z=+(fa(L,X)|0);g[x>>2]=Z+ +g[x>>2];if((A|0)==(V|0)){Z=+h[T+(c[M>>2]<<3)>>3];W=c[E>>2]|0;if((I|0)>=(W|0)){break}_=I;$=O+Y|0;while(1){aa=T+(c[q+(_<<2)>>2]<<3)|0;h[aa>>3]=+h[aa>>3]-Z*+h[s+($<<3)>>3];aa=_+1|0;if((aa|0)<(W|0)){_=aa;$=$+1|0}else{break a}}}if((X|0)>=4){$=V-B|0;_=0;W=$+F|0;while(1){h[U+(_<<3)>>3]=+h[T+(c[q+(W<<2)>>2]<<3)>>3];aa=_+1|0;if((aa|0)<(X|0)){_=aa;W=W+1|0}else{break}}If(G,X,s+((fa($,G)|0)+$+Y<<3)|0,U);break}W=T+(c[M>>2]<<3)|0;Z=+h[W>>3];_=T+(c[P>>2]<<3)|0;ba=+h[_>>3];aa=Q+Y|0;ca=aa-G|0;if((X|0)==2){da=Z-ba*+h[s+(ca<<3)>>3];h[W>>3]=da;ea=c[E>>2]|0;if((I|0)<(ea|0)){ga=I;ha=ca;ia=aa}else{break}do{ia=ia+1|0;ha=ha+1|0;ja=T+(c[q+(ga<<2)>>2]<<3)|0;h[ja>>3]=+h[ja>>3]-(da*+h[s+(ia<<3)>>3]+ba*+h[s+(ha<<3)>>3]);ga=ga+1|0;}while((ga|0)<(ea|0))}else{da=+h[T+(c[N>>2]<<3)>>3];ea=ca-G|0;ka=ba-da*+h[s+(ea-1<<3)>>3];la=Z- +h[s+(ca<<3)>>3]*ka-da*+h[s+(ea<<3)>>3];h[W>>3]=la;h[_>>3]=ka;X=c[E>>2]|0;if((I|0)<(X|0)){ma=I;na=ea;oa=ca;pa=aa}else{break}do{pa=pa+1|0;oa=oa+1|0;na=na+1|0;ea=T+(c[q+(ma<<2)>>2]<<3)|0;h[ea>>3]=+h[ea>>3]-(la*+h[s+(pa<<3)>>3]+ka*+h[s+(oa<<3)>>3]+da*+h[s+(na<<3)>>3]);ma=ma+1|0;}while((ma|0)<(X|0))}}}while(0);V=R+1|0;if((V|0)<(v|0)){R=V;S=S+(b<<2)|0;T=T+(b<<3)|0;U=U+(m<<3)|0}else{break}}}if((H|0)>0){U=t+(B<<2)|0;T=0;S=c[6248]|0;while(1){R=S+T|0;N=((H|0)<(R|0)?H:R)-T|0;R=(S|0)<(N|0)?S:N;N=T+I|0;if(w){Q=T+D+(c[U>>2]|0)|0;if((R|0)>0){P=e;M=l;O=i;L=j;while(1){K=c[M+(A<<2)>>2]|0;do{if(!((K|0)==-1)){V=A-K+1|0;if((V|0)<4){break}X=Q+(fa(K-B|0,G)|0)|0;aa=c[6250]|0;Kf(G,R,V,s+(X<<3)|0,L,L+(aa<<3)|0);X=0;V=N;while(1){ca=L+(X+aa<<3)|0;_=O+(c[q+(V<<2)>>2]<<3)|0;h[_>>3]=+h[_>>3]- +h[ca>>3];h[ca>>3]=0.0;ca=X+1|0;if((ca|0)<(R|0)){X=ca;V=V+1|0}else{break}}}}while(0);K=P+1|0;if((K|0)<(v|0)){P=K;M=M+(b<<2)|0;O=O+(b<<3)|0;L=L+(m<<3)|0}else{break}}}else{L=e;O=l;M=j;while(1){P=c[O+(A<<2)>>2]|0;do{if(!((P|0)==-1)){N=A-P+1|0;if((N|0)<4){break}K=Q+(fa(P-B|0,G)|0)|0;Kf(G,R,N,s+(K<<3)|0,M,M+(c[6250]<<3)|0)}}while(0);P=L+1|0;if((P|0)<(v|0)){L=P;O=O+(b<<2)|0;M=M+(m<<3)|0}else{break}}}qa=c[6248]|0}else{qa=S}M=qa+T|0;if((M|0)<(H|0)){T=M;S=qa}else{break}}}if(!w){break}S=F-B|0;T=e;U=l;M=i;O=j;while(1){L=c[U+(A<<2)>>2]|0;do{if(!((L|0)==-1)){R=A-L+1|0;if((R|0)<4){break}Q=0;P=S+L|0;while(1){K=O+(Q<<3)|0;h[M+(c[q+(P<<2)>>2]<<3)>>3]=+h[K>>3];h[K>>3]=0.0;K=Q+1|0;if((K|0)<(R|0)){Q=K;P=P+1|0}else{break}}}}while(0);L=T+1|0;if((L|0)<(v|0)){T=L;U=U+(b<<2)|0;M=M+(b<<3)|0;O=O+(m<<3)|0}else{break}}}else{if(!w){break}O=t+(B<<2)|0;M=H<<1;U=q+(J<<2)|0;T=fa(G,C)|0;S=T+D|0;L=T+C|0;T=q+(J-1<<2)|0;P=q+(J-2<<2)|0;Q=(H|0)>0;R=A+1+F-B|0;K=e;N=l;V=i;while(1){X=c[N+(A<<2)>>2]|0;b:do{if(!((X|0)==-1)){aa=A-X|0;ca=aa+1|0;_=c[O>>2]|0;da=+(fa(ca,aa)|0);g[d>>2]=da+ +g[d>>2];da=+(fa(M,ca)|0);g[x>>2]=da+ +g[x>>2];if((A|0)==(X|0)){da=+h[V+(c[U>>2]<<3)>>3];aa=c[E>>2]|0;if((I|0)>=(aa|0)){break}W=I;ea=S+_|0;while(1){Y=V+(c[q+(W<<2)>>2]<<3)|0;h[Y>>3]=+h[Y>>3]-da*+h[s+(ea<<3)>>3];Y=W+1|0;if((Y|0)<(aa|0)){W=Y;ea=ea+1|0}else{break b}}}if((ca|0)<4){ea=V+(c[U>>2]<<3)|0;da=+h[ea>>3];W=L+_|0;aa=V+(c[T>>2]<<3)|0;ka=+h[aa>>3];Y=W-G|0;if((ca|0)==2){la=da-ka*+h[s+(Y<<3)>>3];h[ea>>3]=la;$=c[E>>2]|0;if((I|0)<($|0)){ra=I;sa=Y;ta=W}else{break}while(1){ta=ta+1|0;sa=sa+1|0;ja=V+(c[q+(ra<<2)>>2]<<3)|0;h[ja>>3]=+h[ja>>3]-(la*+h[s+(ta<<3)>>3]+ka*+h[s+(sa<<3)>>3]);ra=ra+1|0;if((ra|0)>=($|0)){break b}}}else{la=+h[V+(c[P>>2]<<3)>>3];$=Y-G|0;Z=ka-la*+h[s+($-1<<3)>>3];ba=da- +h[s+(Y<<3)>>3]*Z-la*+h[s+($<<3)>>3];h[ea>>3]=ba;h[aa>>3]=Z;ja=c[E>>2]|0;if((I|0)<(ja|0)){ua=I;va=$;wa=Y;xa=W}else{break}while(1){xa=xa+1|0;wa=wa+1|0;va=va+1|0;$=V+(c[q+(ua<<2)>>2]<<3)|0;h[$>>3]=+h[$>>3]-(ba*+h[s+(xa<<3)>>3]+Z*+h[s+(wa<<3)>>3]+la*+h[s+(va<<3)>>3]);ua=ua+1|0;if((ua|0)>=(ja|0)){break b}}}}ja=X-B|0;W=ja+F|0;Y=0;aa=W;while(1){h[j+(Y<<3)>>3]=+h[V+(c[q+(aa<<2)>>2]<<3)>>3];ea=Y+1|0;if((ea|0)<(ca|0)){Y=ea;aa=aa+1|0}else{break}}aa=(fa(ja,G)|0)+ja+_|0;If(G,ca,s+(aa<<3)|0,j);Kf(G,H,ca,s+(aa+ca<<3)|0,j,j+(ca<<3)|0);aa=0;Y=W;while(1){ea=j+(aa<<3)|0;h[V+(c[q+(Y<<2)>>2]<<3)>>3]=+h[ea>>3];h[ea>>3]=0.0;ea=aa+1|0;if((ea|0)<(ca|0)){aa=ea;Y=Y+1|0}else{break}}if(Q){ya=0;za=R}else{break}while(1){Y=j+(ya+ca<<3)|0;aa=V+(c[q+(za<<2)>>2]<<3)|0;h[aa>>3]=+h[aa>>3]- +h[Y>>3];h[Y>>3]=0.0;Y=ya+1|0;if((Y|0)<(H|0)){ya=Y;za=za+1|0}else{break}}}}while(0);X=K+1|0;if((X|0)<(v|0)){K=X;N=N+(b<<2)|0;V=V+(b<<3)|0}else{break}}}}while(0);if((o|0)>=(f|0)){break}o=o+1|0;y=u;z=c[6248]|0}return}function sf(b,d,e,f,g,h,j,k,l,m,n,o){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0;p=i;i=i+8|0;q=p|0;r=c[o>>2]|0;s=c[o+4>>2]|0;t=o+8|0;u=c[t>>2]|0;v=c[o+12>>2]|0;c[q>>2]=c[o+36>>2];if(!(a[744]|0)){c[6354]=bf(3)|0;a[744]=1}w=d+1|0;x=d-1|0;y=s+(d<<2)|0;z=c[y>>2]|0;A=v+(d<<2)|0;B=c[A>>2]|0;C=b<<1;b=c[g>>2]|0;a:do{if((b|0)==-1){D=B;E=z;F=u}else{G=0;H=B;I=z;J=u;K=g;L=b;b:while(1){c[K>>2]=-1;M=l+(L+C<<2)|0;N=c[M>>2]|0;c:do{if((N|0)==(d|0)){O=J;P=I;Q=H}else{c[M>>2]=d;R=c[e+(L<<2)>>2]|0;if((R|0)==-1){S=H+1|0;c[J+(H<<2)>>2]=L;if((S|0)<(c[q>>2]|0)){T=J}else{U=Cf(d,S,2,q,o)|0;if((U|0)!=0){V=U;W=40;break b}T=c[t>>2]|0}O=T;P=(N|0)==(x|0)?I:-1;Q=S;break}S=(c[r+((c[s+(R<<2)>>2]|0)+1<<2)>>2]|0)-1|0;U=j+(S<<2)|0;X=c[U>>2]|0;if(!((X|0)==-1)){if((X|0)<=(R|0)){O=J;P=I;Q=H;break}c[U>>2]=R;O=J;P=I;Q=H;break}c[m+(S<<2)>>2]=-1;c[U>>2]=R;R=J;U=I;X=H;Y=S;Z=v+(S<<2)|0;d:while(1){S=c[k+(Y<<2)>>2]|0;_=c[Z>>2]|0;e:do{if((_|0)<(S|0)){$=_;aa=X;ba=U;ca=R;f:while(1){da=$;g:while(1){ea=c[ca+(da<<2)>>2]|0;fa=da+1|0;ga=l+(ea+C<<2)|0;ha=c[ga>>2]|0;do{if((ha|0)!=(d|0)){c[ga>>2]=d;ia=c[e+(ea<<2)>>2]|0;if((ia|0)==-1){break g}ja=(c[r+((c[s+(ia<<2)>>2]|0)+1<<2)>>2]|0)-1|0;ka=j+(ja<<2)|0;la=c[ka>>2]|0;if((la|0)==-1){break f}if((la|0)<=(ia|0)){break}c[ka>>2]=ia}}while(0);if((fa|0)<(S|0)){da=fa}else{ma=aa;na=ba;oa=ca;break e}}da=aa+1|0;c[ca+(aa<<2)>>2]=ea;if((da|0)<(c[q>>2]|0)){pa=ca}else{ga=Cf(d,da,2,q,o)|0;if((ga|0)!=0){V=ga;W=40;break b}pa=c[t>>2]|0}ga=(ha|0)==(x|0)?ba:-1;if((fa|0)<(S|0)){$=fa;aa=da;ba=ga;ca=pa}else{ma=da;na=ga;oa=pa;break e}}c[n+(Y<<2)>>2]=fa;c[m+(ja<<2)>>2]=Y;c[ka>>2]=ia;R=ca;U=ba;X=aa;Y=ja;Z=v+(ja<<2)|0;continue d}else{ma=X;na=U;oa=R}}while(0);c[h+(c[f>>2]<<2)>>2]=Y;c[f>>2]=(c[f>>2]|0)+1;S=c[m+(Y<<2)>>2]|0;if((S|0)==-1){O=oa;P=na;Q=ma;break c}R=oa;U=na;X=ma;Y=S;Z=n+(S<<2)|0}}}while(0);N=G+1|0;M=g+(N<<2)|0;Z=c[M>>2]|0;if((Z|0)==-1){D=Q;E=P;F=O;break a}else{G=N;H=Q;I=P;J=O;K=M;L=Z}}if((W|0)==40){i=p;return V|0}}}while(0);do{if((d|0)==0){c[s>>2]=0;qa=0;ra=D}else{W=c[r+(z<<2)>>2]|0;O=c[A>>2]|0;P=v+(x<<2)|0;Q=c[P>>2]|0;if(!((E|0)==-1|(D-O|0)!=(O-1-Q|0)|(d-W|0)>=(c[6354]|0))){qa=z;ra=D;break}do{if((W|0)<(d-2|0)){g=c[v+(W+1<<2)>>2]|0;c[P>>2]=g;n=O-Q+g|0;c[k+(x<<2)>>2]=n;c[A>>2]=n;if((Q|0)>=(D|0)){sa=g;break}n=D+g|0;ma=g;g=Q;while(1){c[F+(ma<<2)>>2]=c[F+(g<<2)>>2];na=g+1|0;if((na|0)<(D|0)){ma=ma+1|0;g=na}else{break}}sa=n-Q|0}else{sa=D}}while(0);Q=z+1|0;c[y>>2]=Q;qa=Q;ra=sa}}while(0);c[r+(qa+1<<2)>>2]=w;c[s+(w<<2)>>2]=qa;c[k+(d<<2)>>2]=ra;c[v+(w<<2)>>2]=ra;V=0;i=p;return V|0}function tf(a,b,d,e,f,j,k,l,m){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,X=0.0,Y=0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0.0,da=0.0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0;n=i;i=i+8|0;o=n|0;p=c[m+8>>2]|0;m=c[l>>2]|0;q=c[l+4>>2]|0;r=l+8|0;s=c[r>>2]|0;t=c[l+12>>2]|0;u=l+16|0;v=c[u>>2]|0;w=c[l+20>>2]|0;x=c[l+44>>2]|0;c[o>>2]=x;y=a+1|0;z=c[q+(a<<2)>>2]|0;if((b|0)>0){A=p+52|0;B=p+56|0;C=0;D=b;do{D=D-1|0;E=c[f+(D<<2)>>2]|0;F=c[q+(E<<2)>>2]|0;a:do{if((z|0)!=(F|0)){G=c[m+(F<<2)>>2]|0;H=(G|0)>(k|0)?G:k;I=H-G|0;J=I+(c[w+(H<<2)>>2]|0)|0;K=c[t+(G<<2)>>2]|0;L=I+K|0;M=c[j+(E<<2)>>2]|0;N=(M|0)>(k|0)?M:k;M=E-N|0;O=M+1|0;P=E-H|0;Q=P+1|0;R=c[t+(G+1<<2)>>2]|0;S=R-K|0;T=S-I+~P|0;I=L+Q|0;U=L+P|0;V=+(fa(O,M)|0);g[A>>2]=+g[A>>2]+V;V=+(fa(T<<1,O)|0);g[B>>2]=+g[B>>2]+V;if((E|0)==(N|0)){V=+h[d+(c[s+(U<<2)>>2]<<3)>>3];if((I|0)>=(R|0)){break}M=I;W=J+Q+(fa(S,P)|0)|0;while(1){Q=d+(c[s+(M<<2)>>2]<<3)|0;h[Q>>3]=+h[Q>>3]-V*+h[v+(W<<3)>>3];Q=M+1|0;if((Q|0)<(R|0)){M=Q;W=W+1|0}else{break a}}}if((O|0)<4){W=d+(c[s+(U<<2)>>2]<<3)|0;V=+h[W>>3];M=J+P+(fa(S,P)|0)|0;Q=d+(c[s+(U-1<<2)>>2]<<3)|0;X=+h[Q>>3];Y=M-S|0;if((O|0)==2){Z=V-X*+h[v+(Y<<3)>>3];h[W>>3]=Z;if((I|0)<(R|0)){_=I;$=Y;aa=M}else{break}while(1){aa=aa+1|0;$=$+1|0;ba=d+(c[s+(_<<2)>>2]<<3)|0;h[ba>>3]=+h[ba>>3]-(Z*+h[v+(aa<<3)>>3]+X*+h[v+($<<3)>>3]);_=_+1|0;if((_|0)>=(R|0)){break a}}}else{Z=+h[d+(c[s+(U-2<<2)>>2]<<3)>>3];P=Y-S|0;ca=X-Z*+h[v+(P-1<<3)>>3];da=V- +h[v+(Y<<3)>>3]*ca-Z*+h[v+(P<<3)>>3];h[W>>3]=da;h[Q>>3]=ca;if((I|0)<(R|0)){ea=I;ga=P;ha=Y;ia=M}else{break}while(1){ia=ia+1|0;ha=ha+1|0;ga=ga+1|0;P=d+(c[s+(ea<<2)>>2]<<3)|0;h[P>>3]=+h[P>>3]-(da*+h[v+(ia<<3)>>3]+ca*+h[v+(ha<<3)>>3]+Z*+h[v+(ga<<3)>>3]);ea=ea+1|0;if((ea|0)>=(R|0)){break a}}}}R=N-H|0;M=R+L|0;Y=M;I=0;while(1){h[e+(I<<3)>>3]=+h[d+(c[s+(Y<<2)>>2]<<3)>>3];Q=I+1|0;if((Q|0)<(O|0)){Y=Y+1|0;I=Q}else{break}}I=R+J+(fa(R,S)|0)|0;If(S,O,v+(I<<3)|0,e);Kf(S,T,O,v+(I+O<<3)|0,e,e+(O<<3)|0);I=E+1+K|0;Y=M;L=0;while(1){H=e+(L<<3)|0;h[d+(c[s+(Y<<2)>>2]<<3)>>3]=+h[H>>3];h[H>>3]=0.0;H=L+1|0;if((H|0)<(O|0)){Y=Y+1|0;L=H}else{break}}if((T|0)>0){ja=I-G|0;ka=0}else{break}while(1){L=e+(ka+O<<3)|0;Y=d+(c[s+(ja<<2)>>2]<<3)|0;h[Y>>3]=+h[Y>>3]- +h[L>>3];h[L>>3]=0.0;L=ka+1|0;if((L|0)<(T|0)){ja=ja+1|0;ka=L}else{break}}}}while(0);C=C+1|0;}while((C|0)<(b|0));la=c[o>>2]|0}else{la=x}x=w+(a<<2)|0;b=c[x>>2]|0;C=c[m+(z<<2)>>2]|0;z=t+(C+1<<2)|0;m=c[z>>2]|0;ka=t+(C<<2)|0;t=c[ka>>2]|0;ja=m+b-t|0;do{if((ja|0)>(la|0)){while(1){ea=Cf(a,b,0,o,l)|0;if((ea|0)!=0){ma=ea;na=34;break}if((ja|0)<=(c[o>>2]|0)){na=25;break}}if((na|0)==25){oa=c[r>>2]|0;pa=c[u>>2]|0;qa=c[ka>>2]|0;ra=c[z>>2]|0;break}else if((na|0)==34){i=n;return ma|0}}else{oa=s;pa=v;qa=t;ra=m}}while(0);if((qa|0)<(ra|0)){m=qa+1|0;t=b+((ra|0)>(m|0)?ra:m)|0;m=qa;v=b;while(1){s=d+(c[oa+(m<<2)>>2]<<3)|0;h[pa+(v<<3)>>3]=+h[s>>3];h[s>>3]=0.0;s=m+1|0;if((s|0)<(ra|0)){m=s;v=v+1|0}else{break}}sa=t-qa|0}else{sa=b}c[w+(y<<2)>>2]=sa;sa=(C|0)>(k|0)?C:k;if((sa|0)>=(a|0)){ma=0;i=n;return ma|0}k=sa-C|0;C=(c[w+(sa<<2)>>2]|0)+k|0;w=(c[z>>2]|0)-(c[ka>>2]|0)|0;ka=a-sa|0;sa=w-k-ka|0;a=(c[x>>2]|0)+k|0;Z=+(fa(ka-1|0,ka)|0);k=p+52|0;g[k>>2]=Z+ +g[k>>2];Z=+(fa(ka<<1,sa)|0);k=p+56|0;g[k>>2]=+g[k>>2]+Z;k=pa+(a<<3)|0;If(w,ka,pa+(C<<3)|0,k);Kf(w,sa,ka,pa+(C+ka<<3)|0,k,e);if((sa|0)<=0){ma=0;i=n;return ma|0}k=a+ka|0;ka=0;while(1){a=e+(ka<<3)|0;C=pa+(k<<3)|0;h[C>>3]=+h[C>>3]- +h[a>>3];h[a>>3]=0.0;a=ka+1|0;if((a|0)<(sa|0)){k=k+1|0;ka=a}else{ma=0;break}}i=n;return ma|0}function uf(a,b,d,e,f,i,j,k,l){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0.0,w=0,x=0.0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;m=c[l+8>>2]|0;l=c[k+8>>2]|0;n=c[k+12>>2]|0;o=c[k+16>>2]|0;p=c[k+20>>2]|0;q=c[(c[k>>2]|0)+(c[(c[k+4>>2]|0)+(a<<2)>>2]<<2)>>2]|0;k=a-q|0;r=c[n+(q<<2)>>2]|0;s=(c[n+(q+1<<2)>>2]|0)-r|0;n=c[p+(q<<2)>>2]|0;q=c[p+(a<<2)>>2]|0;if((c[d>>2]|0)!=0){c[j>>2]=c[f+(a<<2)>>2]}f=c[i+(a<<2)>>2]|0;do{if((k|0)<(s|0)){if((c[d>>2]|0)==0){i=k;t=0.0;p=-1;u=k;while(1){v=+U(+(+h[o+(i+q<<3)>>3]));w=v>t;x=w?v:t;y=w?i:u;w=(c[l+(i+r<<2)>>2]|0)==(f|0)?i:p;z=i+1|0;if((z|0)<(s|0)){i=z;t=x;p=w;u=y}else{A=x;B=w;C=k;D=y;break}}}else{u=k;t=0.0;p=-1;i=k;y=k;while(1){x=+U(+(+h[o+(u+q<<3)>>3]));w=x>t;v=w?x:t;z=w?u:y;w=c[l+(u+r<<2)>>2]|0;E=(w|0)==(c[j>>2]|0)?u:i;F=(w|0)==(f|0)?u:p;w=u+1|0;if((w|0)<(s|0)){u=w;t=v;p=F;i=E;y=z}else{A=v;B=F;C=E;D=z;break}}}if(A==0.0){G=D;break}t=A*b;a:do{if((c[d>>2]|0)==0){H=14}else{v=+h[o+(C+q<<3)>>3];do{if(v!=0.0){if(+U(+v)<t){break}I=C;J=c[j>>2]|0;break a}}while(0);c[d>>2]=0;H=14}}while(0);if((H|0)==14){do{if((B|0)>-1){v=+h[o+(B+q<<3)>>3];if(!(v!=0.0)){K=D;break}if(+U(+v)<t){K=D;break}K=B}else{K=D}}while(0);y=c[l+(K+r<<2)>>2]|0;c[j>>2]=y;I=K;J=y}c[e+(J<<2)>>2]=a;do{if((I|0)!=(k|0)){y=l+(I+r<<2)|0;i=c[y>>2]|0;p=l+(r+k<<2)|0;c[y>>2]=c[p>>2];c[p>>2]=i;if((k|0)<0){break}i=I+n|0;p=n+k|0;y=0;do{u=fa(y,s)|0;z=o+(i+u<<3)|0;t=+h[z>>3];E=o+(p+u<<3)|0;h[z>>3]=+h[E>>3];h[E>>3]=t;y=y+1|0;}while((y|0)<=(k|0))}}while(0);y=m+28|0;g[y>>2]=+(s-k|0)+ +g[y>>2];t=1.0/+h[o+(q+k<<3)>>3];y=k+1|0;if((y|0)<(s|0)){L=y}else{M=0;return M|0}while(1){y=o+(L+q<<3)|0;h[y>>3]=t*+h[y>>3];y=L+1|0;if((y|0)<(s|0)){L=y}else{M=0;break}}return M|0}else{G=k}}while(0);k=c[l+(G+r<<2)>>2]|0;c[j>>2]=k;c[e+(k<<2)>>2]=a;c[d>>2]=0;M=a+1|0;return M|0}function vf(a,b,d,e,f,g,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0,P=0,Q=0,R=0,S=0;k=c[j>>2]|0;l=c[j+4>>2]|0;m=c[j+8>>2]|0;n=c[j+12>>2]|0;o=c[j+16>>2]|0;p=c[j+20>>2]|0;j=c[l+(a<<2)>>2]|0;if((e|0)>0){q=0}else{return}do{a=c[f+(q<<2)>>2]|0;r=a+1|0;a:do{if(!((c[g+(a<<2)>>2]|0)==-1)){s=c[l+(a<<2)>>2]|0;if((s|0)==(c[l+(r<<2)>>2]|0)|(s|0)==(j|0)){break}t=i+(a<<2)|0;u=c[n+(r<<2)>>2]|0;if((c[t>>2]|0)<(u|0)){break}v=n+(a<<2)|0;w=c[v>>2]|0;x=u-1|0;u=w;while(1){if((u|0)>(x|0)){break a}if((c[m+(u<<2)>>2]|0)==(d|0)){break}else{u=u+1|0}}u=p+(a<<2)|0;b:do{if((a|0)==(c[k+(s<<2)>>2]|0)){y=w;z=x;while(1){A=m+(z<<2)|0;B=y;while(1){if((B|0)>(z|0)){C=B;break b}D=c[A>>2]|0;if((c[b+(D<<2)>>2]|0)==-1){E=B;break}F=m+(B<<2)|0;G=c[F>>2]|0;H=B+1|0;if((c[b+(G<<2)>>2]|0)==-1){I=12;break}else{B=H}}if((I|0)==12){I=0;c[F>>2]=D;c[A>>2]=G;J=c[u>>2]|0;K=c[v>>2]|0;L=o+(J+B-K<<3)|0;M=+h[L>>3];N=o+(J+z-K<<3)|0;h[L>>3]=+h[N>>3];h[N>>3]=M;E=H}y=E;z=z-1|0}}else{z=w;y=x;while(1){N=m+(y<<2)|0;L=z;while(1){if((L|0)>(y|0)){C=L;break b}O=c[N>>2]|0;if((c[b+(O<<2)>>2]|0)==-1){P=L;break}Q=m+(L<<2)|0;R=c[Q>>2]|0;S=L+1|0;if((c[b+(R<<2)>>2]|0)==-1){I=20;break}else{L=S}}if((I|0)==20){I=0;c[Q>>2]=O;c[N>>2]=R;P=S}z=P;y=y-1|0}}}while(0);c[t>>2]=C}}while(0);q=q+1|0;}while((q|0)<(e|0));return}function wf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0.0,j=0.0,k=0.0;e=bf(1)|0;f=c[a+20>>2]|0;h=c[a+16>>2]|0;i=+(h|0);j=(i*4.0+3.0)*4.0+ +(c[(c[f+12>>2]|0)+(h<<2)>>2]<<3|0)+ +(c[(c[f+20>>2]|0)+(h<<2)>>2]<<2|0)+((i+1.0)*4.0+ +((c[(c[(c[b+20>>2]|0)+12>>2]|0)+(h<<2)>>2]|0)*12|0|0));g[d>>2]=j;k=+(e|0);g[d+4>>2]=(k*2.0+4.0+3.0)*i*4.0+(k+1.0)*i*8.0+j;return 0}function xf(a,b,d,e,f,g,h,j,k,l,m,n,o){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=+j;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0;p=i;i=i+280|0;q=p|0;r=p+8|0;s=p+16|0;t=p+24|0;c[m+48>>2]=f;u=m+56|0;c[u>>2]=0;v=m+60|0;do{if((c[v>>2]|0)==0){w=We(32)|0;c[v>>2]=w;if((w|0)!=0){break}w=t|0;kb(w|0,6240,(x=i,i=i+24|0,c[x>>2]=12656,c[x+8>>2]=203,c[x+16>>2]=9008,x)|0)|0;i=x;Ke(w)}}while(0);if((a|0)==2){a=c[k+20>>2]|0;k=c[l+20>>2]|0;l=c[a+28>>2]|0;t=c[a+24>>2]|0;w=c[a+20>>2]|0;x=c[a+12>>2]|0;y=c[k+12>>2]|0;z=m+36|0;A=c[z>>2]|0;c[q>>2]=A;B=m+40|0;C=c[B>>2]|0;c[r>>2]=C;D=m+44|0;E=c[D>>2]|0;c[s>>2]=E;if((d|0)==-1){F=f+20+(f*20|0)+(A+(fa((h<<1)+7|0,e)|0)+C<<2)+(E+(fa(h+1|0,e)|0)+C<<3)|0;i=p;return F|0}G=m+52|0;if((d|0)==0){c[G>>2]=0}else{c[G>>2]=1;G=((d|0)/4|0)<<2;c[m+76>>2]=G;c[m+64>>2]=G}G=c[a+16>>2]|0;c[(c[v>>2]|0)+20>>2]=G;H=c[a+8>>2]|0;c[(c[v>>2]|0)+4>>2]=H;a=c[k+8>>2]|0;c[(c[v>>2]|0)+28>>2]=a;I=c[k+4>>2]|0;c[(c[v>>2]|0)+12>>2]=I;k=c[v>>2]|0;c[k+16>>2]=A;c[k>>2]=E;c[k+24>>2]=C;c[k+8>>2]=C;J=y;K=a;L=I;M=x;N=H;O=w;P=G;Q=t;R=l;S=A;T=C;U=E;V=z;W=B;X=D}else{Y=+(g|0);D=~~(Y*j);c[s>>2]=D;c[r>>2]=D;Z=j*.25;B=~~(Y*(Z<1.0?1.0:Z));c[q>>2]=B;do{if((d|0)==(-1|0)){F=f+20+(f*20|0)+(B+(fa((h<<1)+7|0,e)|0)+D<<2)+(D+(fa(h+1|0,e)|0)+D<<3)|0;i=p;return F|0}else if((d|0)==0){c[m+52>>2]=0;_=m+52|0;$=f+1|0;aa=11}else{z=m+52|0;if((d|0)>0){c[z>>2]=1;c[m+68>>2]=0;c[m+72>>2]=0;E=((d|0)/4|0)<<2;c[m+76>>2]=E;c[m+64>>2]=E;c[m+80>>2]=b;ba=m+52|0;ca=f+1|0}else{E=m+52|0;C=f+1|0;if((c[z>>2]|0)==0){_=E;$=C;aa=11;break}else{ba=E;ca=C}}C=ca<<2;E=m+68|0;z=c[E>>2]|0;A=z+C|0;l=c[m+64>>2]|0;if((A|0)<(l|0)){t=m+72|0;G=c[t>>2]|0;w=(c[m+80>>2]|0)+G|0;c[t>>2]=G+C;c[E>>2]=A;da=w;ea=A}else{da=0;ea=z}z=ea+C|0;if((z|0)<(l|0)){A=m+72|0;w=c[A>>2]|0;G=(c[m+80>>2]|0)+w|0;c[A>>2]=w+C;c[E>>2]=z;ga=G;ha=z}else{ga=0;ha=ea}z=ha+C|0;if((z|0)<(l|0)){G=m+72|0;w=c[G>>2]|0;A=(c[m+80>>2]|0)+w|0;c[G>>2]=w+C;c[E>>2]=z;ia=A;ja=z}else{ia=0;ja=ha}z=ja+C|0;if((z|0)<(l|0)){A=m+72|0;w=c[A>>2]|0;G=(c[m+80>>2]|0)+w|0;c[A>>2]=w+C;c[E>>2]=z;ka=G;la=z}else{ka=0;la=ja}z=la+C|0;if((z|0)>=(l|0)){ma=0;na=ka;oa=ia;pa=ga;qa=da;ra=ba;break}l=m+72|0;G=c[l>>2]|0;w=(c[m+80>>2]|0)+G|0;c[l>>2]=G+C;c[E>>2]=z;ma=w;na=ka;oa=ia;pa=ga;qa=da;ra=ba}}while(0);if((aa|0)==11){aa=$e($)|0;ba=$e($)|0;da=$e($)|0;ga=$e($)|0;ma=$e($)|0;na=ga;oa=da;pa=ba;qa=aa;ra=_}_=yf(s,0,0,0,m)|0;aa=yf(r,1,0,0,m)|0;ba=yf(q,2,0,0,m)|0;da=yf(r,3,0,1,m)|0;a:do{if((_|0)==0|(aa|0)==0|(ba|0)==0|(da|0)==0){ga=m+72|0;$=m+68|0;ia=ba;ka=_;la=aa;ja=da;while(1){if((c[ra>>2]|0)==0){Xe(ka);Xe(la);Xe(ia);Xe(ja);sa=c[s>>2]|0;ta=c[r>>2]|0;ua=c[q>>2]|0}else{ha=c[s>>2]|0;ea=c[r>>2]|0;ca=c[q>>2]|0;b=(ca+ea<<2)+(ea+ha<<3)|0;c[ga>>2]=(c[ga>>2]|0)-b;c[$>>2]=(c[$>>2]|0)-b;sa=ha;ta=ea;ua=ca}va=(sa|0)/2|0;c[s>>2]=va;wa=(ta|0)/2|0;c[r>>2]=wa;xa=(ua|0)/2|0;c[q>>2]=xa;if((va|0)<(g|0)){break}ca=yf(s,0,0,0,m)|0;ea=yf(r,1,0,0,m)|0;ha=yf(q,2,0,0,m)|0;b=yf(r,3,0,1,m)|0;if((ca|0)==0|(ea|0)==0|(ha|0)==0|(b|0)==0){ia=ha;ka=ca;la=ea;ja=b}else{ya=ca;za=ea;Aa=b;Ba=ha;break a}}Lb(48)|0;F=(f*41|0)+(xa<<2)+(wa*12|0)+(va<<3)|0;i=p;return F|0}else{ya=_;za=aa;Aa=da;Ba=ba}}while(0);J=ma;K=Aa;L=za;M=na;N=ya;O=oa;P=Ba;Q=pa;R=qa;S=c[q>>2]|0;T=c[r>>2]|0;U=c[s>>2]|0;V=m+36|0;W=m+40|0;X=m+44|0}c[m>>2]=R;c[m+4>>2]=Q;c[m+8>>2]=P;c[m+12>>2]=O;c[m+16>>2]=N;c[m+20>>2]=M;c[m+24>>2]=L;c[m+28>>2]=K;c[m+32>>2]=J;c[V>>2]=S;c[W>>2]=T;c[X>>2]=U;X=zf(e,f,h,n,o,m)|0;if((X|0)==0){c[u>>2]=(c[u>>2]|0)+1;F=0;i=p;return F|0}else{F=(f*41|0)+X+(S<<2)+(T*12|0)+(U<<3)|0;i=p;return F|0}return 0}function yf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0;g=c[f+60>>2]|0;i=f+56|0;j=c[i>>2]|0;k=(e|0)==0;e=c[a>>2]|0;if((j|0)!=0&k){l=~~(+(e|0)*1.5)}else{l=e}m=(b-2|0)>>>0<2>>>0;n=m?4:8;do{if((c[f+52>>2]|0)==0){o=We(fa(l,n)|0)|0;if((c[i>>2]|0)==0){p=l;q=o;r=g+(b<<3)+4|0}else{s=(o|0)==0;a:do{if(k){if(s){t=1;u=1.5}else{v=l;w=o;break}while(1){if((t|0)>10){x=0;break}y=(u+1.0)*.5;z=~~(y*+(c[a>>2]|0));A=We(fa(z,n)|0)|0;if((A|0)==0){t=t+1|0;u=y}else{v=z;w=A;break a}}return x|0}else{if(s){x=0}else{v=l;w=o;break}return x|0}}while(0);o=g+(b<<3)+4|0;s=c[o>>2]|0;do{if(m){Ze(d,s,w);B=c[o>>2]|0}else{A=s;z=w;if((d|0)>0){C=0}else{B=s;break}while(1){h[z+(C<<3)>>3]=+h[A+(C<<3)>>3];D=C+1|0;if((D|0)<(d|0)){C=D}else{B=s;break}}}}while(0);Xe(B);p=v;q=w;r=o}c[r>>2]=q;E=p}else{if((j|0)==0){s=fa(l,n)|0;A=f+68|0;z=c[A>>2]|0;D=z+s|0;if((D|0)<(c[f+64>>2]|0)){F=f+72|0;G=c[F>>2]|0;H=(c[f+80>>2]|0)+G|0;c[F>>2]=G+s;c[A>>2]=D;I=H;J=D}else{I=0;J=z}z=I;if((z&7|0)!=0&b>>>0<2>>>0){D=z+7&-8;H=D-z|0;z=f+72|0;c[z>>2]=(c[z>>2]|0)+H;c[A>>2]=J+H;K=D}else{K=I}c[g+(b<<3)+4>>2]=K;E=l;break}D=fa(l-e|0,n)|0;H=c[f+68>>2]|0;A=c[f+64>>2]|0;z=(H+D|0)<(A|0);b:do{if(k){if(z){L=D;M=l;break}else{N=1;O=1.5}while(1){if((N|0)>10){x=0;break}y=(O+1.0)*.5;s=~~(y*+(e|0));G=fa(s-e|0,n)|0;if((H+G|0)<(A|0)){L=G;M=s;break b}else{N=N+1|0;O=y}}return x|0}else{if(z){L=D;M=l;break}else{x=0}return x|0}}while(0);if((b|0)==3){E=M;break}D=c[g+(b+1<<3)+4>>2]|0;z=f+72|0;_e(D,D+L|0,(c[f+80>>2]|0)+(c[z>>2]|0)-D|0);do{if(b>>>0<3>>>0){D=g+28|0;A=(c[D>>2]|0)+L|0;c[D>>2]=A;c[f+28>>2]=A;if(!(b>>>0<2>>>0)){break}A=g+20|0;D=(c[A>>2]|0)+L|0;c[A>>2]=D;c[f+8>>2]=D;if((b|0)!=0){break}D=g+12|0;A=(c[D>>2]|0)+L|0;c[D>>2]=A;c[f+24>>2]=A}}while(0);A=(c[z>>2]|0)+L|0;c[z>>2]=A;D=f+68|0;H=(c[D>>2]|0)+L|0;c[D>>2]=H;if((b|0)!=1){E=M;break}c[z>>2]=A+L;c[D>>2]=H+L;E=M}}while(0);c[g+(b<<3)>>2]=E;c[a>>2]=E;E=c[i>>2]|0;if((E|0)!=0){c[i>>2]=E+1}x=c[g+(b<<3)+4>>2]|0;return x|0}function zf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;h=bf(3)|0;if((h|0)>(bf(7)|0)){i=bf(3)|0}else{i=bf(7)|0}h=(fa((d<<1)+6|0,a)|0)+b|0;j=h<<2;k=fa(d,a)|0;l=fa((bf(4)|0)+i|0,d)|0;d=((l|0)<(a|0)?a:l)+k<<3;k=g+52|0;do{if((c[k>>2]|0)==0){m=af(h&1073741823)|0;n=9}else{l=g+68|0;a=(c[l>>2]|0)+j|0;if((a|0)<(c[g+64>>2]|0)){i=g+76|0;o=(c[i>>2]|0)-j|0;c[i>>2]=o;i=(c[g+80>>2]|0)+o|0;c[l>>2]=a;m=i;n=9;break}else{c[e>>2]=0;break}}}while(0);do{if((n|0)==9){c[e>>2]=m;if((m|0)==0){break}do{if((c[k>>2]|0)==0){h=We(d)|0;c[f>>2]=h;p=h}else{h=g+68|0;i=c[h>>2]|0;a=i+d|0;if((a|0)<(c[g+64>>2]|0)){l=g+76|0;o=(c[l>>2]|0)-d|0;c[l>>2]=o;l=(c[g+80>>2]|0)+o|0;c[h>>2]=a;q=l;s=a}else{q=0;s=i}i=q;c[f>>2]=i;a=q;if((a&7|0)==0){p=i;break}i=(a+7&-8)-8|0;c[f>>2]=i;l=a-i|0;a=g+76|0;c[a>>2]=(c[a>>2]|0)-l;c[h>>2]=s+l;p=i}}while(0);if((p|0)!=0){t=0;return t|0}Ka(3448,34,1,c[r>>2]|0)|0;t=j+b+d|0;return t|0}}while(0);Ka(5e3,47,1,c[r>>2]|0)|0;t=j+b|0;return t|0}function Af(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=bf(3)|0;if((g|0)>(bf(7)|0)){h=bf(3)|0}else{h=bf(7)|0}g=bf(4)|0;c[e>>2]=d;i=fa(b,a)|0;c[f>>2]=d+(i<<3);Hf(c[e>>2]|0,i,0.0);i=fa(g+h|0,b)|0;Hf(c[f>>2]|0,(i|0)<(a|0)?a:i,0.0);return}function Bf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[d+52>>2]|0)==0){Xe(a);Xe(b)}else{b=c[d+64>>2]|0;a=d+76|0;e=d+68|0;c[e>>2]=(c[a>>2]|0)-b+(c[e>>2]|0);c[a>>2]=b}b=d+60|0;Xe(c[b>>2]|0);c[b>>2]=0;return}function Cf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((d|0)==3){h=yf(e,3,b,1,f)|0}else{h=yf(e,d,b,0,f)|0}if((h|0)==0){b=c[f+36>>2]|0;j=c[f+40>>2]|0;k=c[f+44>>2]|0;fc(c[r>>2]|0,2512,(l=i,i=i+16|0,c[l>>2]=d,c[l+8>>2]=a,l)|0)|0;i=l;l=c[f+48>>2]|0;m=(j*12|0)+(b<<2)+(k<<3)+l+(l*40|0)|0;i=g;return m|0}if((d|0)==2){c[f+8>>2]=h;c[f+36>>2]=c[e>>2];m=0;i=g;return m|0}else if((d|0)==0){c[f+16>>2]=h;c[f+44>>2]=c[e>>2];m=0;i=g;return m|0}else if((d|0)==1){c[f+24>>2]=h;c[f+40>>2]=c[e>>2];m=0;i=g;return m|0}else if((d|0)==3){c[f+28>>2]=h;c[f+40>>2]=c[e>>2];m=0;i=g;return m|0}else{m=0;i=g;return m|0}return 0}function Df(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+256|0;d=We(a<<3)|0;a=d;if((d|0)!=0){i=b;return a|0}d=b|0;kb(d|0,6240,(e=i,i=i+24|0,c[e>>2]=1888,c[e+8>>2]=671,c[e+16>>2]=9008,e)|0)|0;i=e;Ke(d);i=b;return a|0}function Ef(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+256|0;d=We(a<<3)|0;e=d;if((d|0)==0){f=b|0;kb(f|0,6240,(g=i,i=i+24|0,c[g>>2]=1344,c[g+8>>2]=683,c[g+16>>2]=9008,g)|0)|0;i=g;Ke(f)}if((a|0)<=0){i=b;return e|0}tq(d|0,0,a<<3|0)|0;i=b;return e|0}function Ff(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;m=i;i=i+256|0;c[a>>2]=j;c[a+4>>2]=k;c[a+8>>2]=l;c[a+12>>2]=b;c[a+16>>2]=d;d=We(16)|0;b=a+20|0;c[b>>2]=d;if((d|0)==0){a=m|0;kb(a|0,5696,(l=i,i=i+24|0,c[l>>2]=12504,c[l+8>>2]=41,c[l+16>>2]=8952,l)|0)|0;i=l;Ke(a);n=c[b>>2]|0}else{n=d}c[n>>2]=e;c[n+4>>2]=f;c[n+8>>2]=g;c[n+12>>2]=h;i=m;return}function Gf(a,b,d,e,f,g,h,j,k,l,m,n,o){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0;p=i;i=i+256|0;c[a>>2]=m;c[a+4>>2]=n;c[a+8>>2]=o;c[a+12>>2]=b;c[a+16>>2]=d;b=We(32)|0;o=a+20|0;c[o>>2]=b;if((b|0)==0){a=p|0;kb(a|0,5696,(n=i,i=i+24|0,c[n>>2]=4960,c[n+8>>2]=137,c[n+16>>2]=8952,n)|0)|0;i=n;Ke(a);q=c[o>>2]|0}else{q=b}c[q>>2]=e;c[q+4>>2]=c[k+(d<<2)>>2];c[q+8>>2]=f;c[q+12>>2]=g;c[q+16>>2]=h;c[q+20>>2]=j;c[q+24>>2]=k;c[q+28>>2]=l;i=p;return}function Hf(a,b,c){a=a|0;b=b|0;c=+c;var d=0;if((b|0)>0){d=0}else{return}do{h[a+(d<<3)>>3]=c;d=d+1|0;}while((d|0)<(b|0));return}



function Bk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7224]|0)==-1)){c[m>>2]=28896;c[m+4>>2]=14;c[m+8>>2]=0;qh(28896,m,102)}m=(c[7225]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}q=j;r=c[o>>2]|0;if(!((c[7128]|0)==-1)){c[l>>2]=28512;c[l+4>>2]=14;c[l+8>>2]=0;qh(28512,l,102)}l=(c[7129]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}s=r;Ac[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Mc[c[(c[j>>2]|0)+48>>2]&15](q,b,e,f)|0;l=f+(e-b<<2)|0;c[h>>2]=l;v=l}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Bc[c[(c[j>>2]|0)+44>>2]&63](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;w=b+1|0}else{w=b}do{if((e-w|0)>1){if((a[w]|0)!=48){x=w;break}o=w+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){x=w;break}l=j;m=Bc[c[(c[l>>2]|0)+44>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=Bc[c[(c[l>>2]|0)+44>>2]&63](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=m;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(e|0)){m=e-1|0;if(m>>>0>x>>>0){y=x;z=m}else{break}do{m=a[y]|0;a[y]=a[z]|0;a[z]=m;y=y+1|0;z=z-1|0;}while(y>>>0<z>>>0)}}while(0);m=Ec[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;A=n+8|0;B=0;C=0;D=x;while(1){E=(a[t]&1)==0;do{if((a[(E?o:c[A>>2]|0)+C|0]|0)==0){F=C;G=B}else{if((B|0)!=(a[(E?o:c[A>>2]|0)+C|0]|0)){F=C;G=B;break}H=c[h>>2]|0;c[h>>2]=H+4;c[H>>2]=m;H=a[t]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[p>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}}while(0);E=Bc[c[(c[l>>2]|0)+44>>2]&63](q,a[D]|0)|0;H=c[h>>2]|0;J=H+4|0;c[h>>2]=J;c[H>>2]=E;E=D+1|0;if(E>>>0<e>>>0){B=G+1|0;C=F;D=E}else{K=J;break}}}else{K=c[h>>2]|0}D=f+(x-b<<2)|0;if((D|0)==(K|0)){v=K;break}C=K-4|0;if(C>>>0>D>>>0){L=D;M=C}else{v=K;break}while(1){C=c[L>>2]|0;c[L>>2]=c[M>>2];c[M>>2]=C;C=L+4|0;D=M-4|0;if(C>>>0<D>>>0){L=C;M=D}else{v=K;break}}}}while(0);if((d|0)==(e|0)){N=v;c[g>>2]=N;vh(n);i=k;return}N=f+(d-b<<2)|0;c[g>>2]=N;vh(n);i=k;return}function Ck(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Gh(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){Hh(l);break}c[m>>2]=0;c[b>>2]=0;Hh(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Dk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,22,c[6868]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;Qh(p,f);Bk(u,w,r,x,n,o,p);Yg(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Ck(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Ek(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[16824]|0;a[q+1|0]=a[16825]|0;a[q+2|0]=a[16826]|0;a[q+3|0]=a[16827]|0;a[q+4|0]=a[16828]|0;a[q+5|0]=a[16829]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,12,c[6868]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;Qh(o,f);Bk(u,w,q,x,m,n,o);Yg(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Ck(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Fk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,23,c[6868]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;Qh(p,f);Bk(u,w,r,x,n,o,p);Yg(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Ck(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Gk(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=c[6868]|0;if(y){w=nk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=nk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[29464]|0)==0;if(y){do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);w=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}hq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=Up(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}hq();H=B;I=B;J=c[m>>2]|0}}while(0);Qh(q,f);Hk(J,F,A,H,o,p,q);Yg(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Ck(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Vp(I)}if((D|0)==0){i=d;return}Vp(D);i=d;return}function Hk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7224]|0)==-1)){c[m>>2]=28896;c[m+4>>2]=14;c[m+8>>2]=0;qh(28896,m,102)}m=(c[7225]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}q=j;r=c[o>>2]|0;if(!((c[7128]|0)==-1)){c[l>>2]=28512;c[l+4>>2]=14;c[l+8>>2]=0;qh(28512,l,102)}l=(c[7129]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}s=r;Ac[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Bc[c[(c[j>>2]|0)+44>>2]&63](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Bc[c[(c[o>>2]|0)+44>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=u+2|0;p=Bc[c[(c[o>>2]|0)+44>>2]&63](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((Qa(t<<24>>24|0,c[6868]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((fb(p<<24>>24|0,c[6868]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Mc[c[(c[j>>2]|0)+48>>2]&15](q,x,y,c[h>>2]|0)|0;v=(c[h>>2]|0)+(y-x<<2)|0;c[h>>2]=v;A=v}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){B=x;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);p=Ec[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;D=0;E=x;while(1){F=(a[w]&1)==0;do{if((a[(F?v:c[t>>2]|0)+D|0]|0)>0){if((o|0)!=(a[(F?v:c[t>>2]|0)+D|0]|0)){G=D;H=o;break}I=c[h>>2]|0;c[h>>2]=I+4;c[I>>2]=p;I=a[w]|0;if((I&1)==0){J=(I&255)>>>1}else{J=c[u>>2]|0}G=(D>>>0<(J-1|0)>>>0)+D|0;H=0}else{G=D;H=o}}while(0);F=Bc[c[(c[m>>2]|0)+44>>2]&63](q,a[E]|0)|0;I=c[h>>2]|0;K=I+4|0;c[h>>2]=K;c[I>>2]=F;F=E+1|0;if(F>>>0<y>>>0){o=H+1|0;D=G;E=F}else{L=K;break}}}else{L=c[h>>2]|0}E=f+(x-b<<2)|0;if((E|0)==(L|0)){A=L;break}D=L-4|0;if(D>>>0>E>>>0){M=E;N=D}else{A=L;break}while(1){D=c[M>>2]|0;c[M>>2]=c[N>>2];c[N>>2]=D;D=M+4|0;E=N-4|0;if(D>>>0<E>>>0){M=D;N=E}else{A=L;break}}}}while(0);c:do{if(y>>>0<e>>>0){L=j;N=y;while(1){M=a[N]|0;if(M<<24>>24==46){break}x=Bc[c[(c[L>>2]|0)+44>>2]&63](q,M)|0;M=c[h>>2]|0;G=M+4|0;c[h>>2]=G;c[M>>2]=x;x=N+1|0;if(x>>>0<e>>>0){N=x}else{O=x;P=G;break c}}L=Ec[c[(c[r>>2]|0)+12>>2]&255](s)|0;G=c[h>>2]|0;x=G+4|0;c[h>>2]=x;c[G>>2]=L;O=N+1|0;P=x}else{O=y;P=A}}while(0);Mc[c[(c[j>>2]|0)+48>>2]&15](q,O,e,P)|0;P=(c[h>>2]|0)+(l-O<<2)|0;c[h>>2]=P;if((d|0)==(e|0)){Q=P;c[g>>2]=Q;vh(n);i=k;return}Q=f+(d-b<<2)|0;c[g>>2]=Q;vh(n);i=k;return}function Ik(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=c[6868]|0;if(y){w=nk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=nk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[29464]|0)==0;if(y){do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);w=tk(m,c[6868]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}hq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=Up(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}hq();H=B;I=B;J=c[m>>2]|0}}while(0);Qh(q,f);Hk(J,F,A,H,o,p,q);Yg(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Ck(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Vp(I)}if((D|0)==0){i=d;return}Vp(D);i=d;return}function Jk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[16832]|0;a[o+1|0]=a[16833]|0;a[o+2|0]=a[16834]|0;a[o+3|0]=a[16835]|0;a[o+4|0]=a[16836]|0;a[o+5|0]=a[16837]|0;p=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);q=nk(p,20,c[6868]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}Qh(m,f);t=m|0;m=c[t>>2]|0;if(!((c[7224]|0)==-1)){c[j>>2]=28896;c[j+4>>2]=14;c[j+8>>2]=0;qh(28896,j,102)}j=(c[7225]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}Yg(c[t>>2]|0)|0;u=l|0;Mc[c[(c[r>>2]|0)+48>>2]&15](r,p,o,u)|0;r=l+(q<<2)|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Ck(b,n,u,v,r,f,g);i=d;return}v=l+(s-k<<2)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Ck(b,n,u,v,r,f,g);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Kk(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;Qh(p,h);t=p|0;p=c[t>>2]|0;if(!((c[7226]|0)==-1)){c[o>>2]=28904;c[o+4>>2]=14;c[o+8>>2]=0;qh(28904,o,102)}o=(c[7227]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;Yg(c[t>>2]|0)|0;c[j>>2]=0;x=f|0;a:do{if((l|0)==(m|0)){y=67}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;b:while(1){J=I;while(1){if((J|0)!=0){y=67;break a}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if(!((Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;c:do{if((M|0)==0){y=20}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if(!((Ec[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1)){break}c[z>>2]=0;y=20;break c}}while(0);if(K){N=M}else{y=21;break b}}}while(0);if((y|0)==20){y=0;if(K){y=21;break b}else{N=0}}if((Cc[c[(c[A>>2]|0)+36>>2]&63](w,a[H]|0,0)|0)<<24>>24==37){y=24;break}M=a[H]|0;if(!(M<<24>>24<0)){O=c[C>>2]|0;if(!((b[O+(M<<24>>24<<1)>>1]&8192)==0)){P=H;y=35;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(Ec[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=Bc[c[(c[B>>2]|0)+12>>2]&63](w,S)|0;if(M<<24>>24==(Bc[c[(c[B>>2]|0)+12>>2]&63](w,a[H]|0)|0)<<24>>24){y=62;break}c[j>>2]=4;J=4}d:do{if((y|0)==24){y=0;J=H+1|0;if((J|0)==(m|0)){y=25;break b}M=Cc[c[(c[A>>2]|0)+36>>2]&63](w,a[J]|0,0)|0;if((M<<24>>24|0)==69|(M<<24>>24|0)==48){T=H+2|0;if((T|0)==(m|0)){y=28;break b}U=M;V=Cc[c[(c[A>>2]|0)+36>>2]&63](w,a[T]|0,0)|0;W=T}else{U=0;V=M;W=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;Jc[J&7](q,e,r,s,h,j,k,V,U);c[x>>2]=c[G>>2];X=W+1|0}else if((y|0)==35){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){Y=m;break}M=a[J]|0;if(M<<24>>24<0){Y=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){Y=J;break}else{P=J;y=35}}K=L;J=N;M=N;while(1){do{if((K|0)==0){Z=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){Z=K;break}if(!((Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){Z=K;break}c[x>>2]=0;Z=0}}while(0);T=(Z|0)==0;do{if((J|0)==0){_=M;y=48}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(T){$=J;aa=M;break}else{X=Y;break d}}if((Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;_=0;y=48;break}else{if(T^(M|0)==0){$=M;aa=M;break}else{X=Y;break d}}}}while(0);if((y|0)==48){y=0;if(T){X=Y;break d}else{$=0;aa=_}}ba=Z+12|0;ca=c[ba>>2]|0;da=Z+16|0;if((ca|0)==(c[da>>2]|0)){ea=(Ec[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{ea=a[ca]|0}if(ea<<24>>24<0){X=Y;break d}if((b[(c[C>>2]|0)+(ea<<24>>24<<1)>>1]&8192)==0){X=Y;break d}ca=c[ba>>2]|0;if((ca|0)==(c[da>>2]|0)){Ec[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;K=Z;J=$;M=aa;continue}else{c[ba>>2]=ca+1;K=Z;J=$;M=aa;continue}}}else if((y|0)==62){y=0;M=c[Q>>2]|0;if((M|0)==(c[R>>2]|0)){Ec[c[(c[L>>2]|0)+40>>2]&255](L)|0}else{c[Q>>2]=M+1}X=H+1|0}}while(0);if((X|0)==(m|0)){y=67;break a}H=X;I=c[j>>2]|0}if((y|0)==21){c[j>>2]=4;fa=L;break}else if((y|0)==25){c[j>>2]=4;fa=L;break}else if((y|0)==28){c[j>>2]=4;fa=L;break}}}while(0);if((y|0)==67){fa=c[x>>2]|0}w=f|0;do{if((fa|0)==0){ga=0}else{if((c[fa+12>>2]|0)!=(c[fa+16>>2]|0)){ga=fa;break}if(!((Ec[c[(c[fa>>2]|0)+36>>2]&255](fa)|0)==-1)){ga=fa;break}c[w>>2]=0;ga=0}}while(0);w=(ga|0)==0;x=g|0;v=c[x>>2]|0;e:do{if((v|0)==0){y=77}else{do{if((c[v+12>>2]|0)==(c[v+16>>2]|0)){if(!((Ec[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){break}c[x>>2]=0;y=77;break e}}while(0);if(!w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);do{if((y|0)==77){if(w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);n=oc(4)|0;zp(n);Fb(n|0,22832,140)}function Lk(a){a=a|0;Wg(a|0);bq(a);return}function Mk(a){a=a|0;Wg(a|0);return}function Nk(a){a=a|0;return 2}function Ok(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Kk(a,b,k,l,f,g,h,16816,16824);i=j;return}function Pk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Ec[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+1|0;r=o+1|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}Kk(b,d,l,m,g,h,j,q,r+p|0);i=k;return}function Qk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7226]|0)==-1)){c[l>>2]=28904;c[l+4>>2]=14;c[l+8>>2]=0;qh(28904,l,102)}l=(c[7227]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Yg(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Ec[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(lj(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function Rk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7226]|0)==-1)){c[l>>2]=28904;c[l+4>>2]=14;c[l+8>>2]=0;qh(28904,l,102)}l=(c[7227]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Yg(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Ec[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(lj(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function Sk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;Qh(l,f);f=l|0;l=c[f>>2]|0;if(!((c[7226]|0)==-1)){c[k>>2]=28904;c[k+4>>2]=14;c[k+8>>2]=0;qh(28904,k,102)}k=(c[7227]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Yg(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=Xk(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=oc(4)|0;zp(b);Fb(b|0,22832,140)}function Tk(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;Qh(z,g);_=z|0;z=c[_>>2]|0;if(!((c[7226]|0)==-1)){c[y>>2]=28904;c[y+4>>2]=14;c[y+8>>2]=0;qh(28904,y,102)}y=(c[7227]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;Yg(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];yc[aa&127](b,d,U,V,g,h,j);i=l;return};case 88:{aa=d+8|0;ca=Ec[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];da=a[ca]|0;if((da&1)==0){ea=(da&255)>>>1;fa=ca+1|0;ga=ca+1|0}else{da=c[ca+8>>2]|0;ea=c[ca+4>>2]|0;fa=da;ga=da}Kk(W,d,X,Y,g,h,j,fa,ga+ea|0);c[aa>>2]=c[W>>2];break};case 106:{c[s>>2]=c[f>>2];aa=Xk(e,s,h,ba,3)|0;da=c[h>>2]|0;if((da&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break a}else{c[h>>2]=da|4;break a}break};case 98:case 66:case 104:{da=c[f>>2]|0;aa=d+8|0;ca=Ec[c[(c[aa>>2]|0)+4>>2]&255](aa)|0;c[w>>2]=da;da=(lj(e,w,ca,ca+288|0,ba,h,0)|0)-ca|0;if((da|0)>=288){break a}c[j+16>>2]=((da|0)/12|0|0)%12|0;break};case 73:{da=j+8|0;c[t>>2]=c[f>>2];ca=Xk(e,t,h,ba,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if(!((ca-1|0)>>>0<12>>>0)){break}c[da>>2]=ca;break a}}while(0);c[h>>2]=aa|4;break};case 100:case 101:{ca=j+12|0;c[v>>2]=c[f>>2];da=Xk(e,v,h,ba,2)|0;ha=c[h>>2]|0;do{if((ha&4|0)==0){if(!((da-1|0)>>>0<31>>>0)){break}c[ca>>2]=da;break a}}while(0);c[h>>2]=ha|4;break};case 82:{da=e|0;c[P>>2]=c[da>>2];c[Q>>2]=c[f>>2];Kk(O,d,P,Q,g,h,j,16776,16781);c[da>>2]=c[O>>2];break};case 83:{c[p>>2]=c[f>>2];da=Xk(e,p,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<61){c[j>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 110:case 116:{c[J>>2]=c[f>>2];Uk(0,e,J,h,ba);break};case 112:{c[K>>2]=c[f>>2];Vk(d,j+8|0,e,K,h,ba);break};case 114:{ca=e|0;c[M>>2]=c[ca>>2];c[N>>2]=c[f>>2];Kk(L,d,M,N,g,h,j,16784,16795);c[ca>>2]=c[L>>2];break};case 109:{c[r>>2]=c[f>>2];ca=(Xk(e,r,h,ba,2)|0)-1|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<12){c[j+16>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 84:{da=e|0;c[S>>2]=c[da>>2];c[T>>2]=c[f>>2];Kk(R,d,S,T,g,h,j,16768,16776);c[da>>2]=c[R>>2];break};case 119:{c[o>>2]=c[f>>2];da=Xk(e,o,h,ba,1)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<7){c[j+24>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 37:{c[Z>>2]=c[f>>2];Wk(0,e,Z,h,ba);break};case 89:{c[m>>2]=c[f>>2];ca=Xk(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ca-1900;break};case 68:{ca=e|0;c[E>>2]=c[ca>>2];c[F>>2]=c[f>>2];Kk(D,d,E,F,g,h,j,16808,16816);c[ca>>2]=c[D>>2];break};case 121:{c[n>>2]=c[f>>2];ca=Xk(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((ca|0)<69){ia=ca+2e3|0}else{ia=(ca-69|0)>>>0<31>>>0?ca+1900|0:ca}c[j+20>>2]=ia-1900;break};case 99:{ca=d+8|0;da=Ec[c[(c[ca>>2]|0)+12>>2]&255](ca)|0;ca=e|0;c[B>>2]=c[ca>>2];c[C>>2]=c[f>>2];aa=a[da]|0;if((aa&1)==0){ja=(aa&255)>>>1;ka=da+1|0;la=da+1|0}else{aa=c[da+8>>2]|0;ja=c[da+4>>2]|0;ka=aa;la=aa}Kk(A,d,B,C,g,h,j,ka,la+ja|0);c[ca>>2]=c[A>>2];break};case 70:{ca=e|0;c[H>>2]=c[ca>>2];c[I>>2]=c[f>>2];Kk(G,d,H,I,g,h,j,16800,16808);c[ca>>2]=c[G>>2];break};case 72:{c[u>>2]=c[f>>2];ca=Xk(e,u,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ca|0)<24){c[j+8>>2]=ca;break a}else{c[h>>2]=aa|4;break a}break};case 77:{c[q>>2]=c[f>>2];aa=Xk(e,q,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break a}else{c[h>>2]=ca|4;break a}break};case 97:case 65:{ca=c[f>>2]|0;aa=d+8|0;da=Ec[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=ca;ca=(lj(e,x,da,da+168|0,ba,h,0)|0)-da|0;if((ca|0)>=168){break a}c[j+24>>2]=((ca|0)/12|0|0)%7|0;break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=oc(4)|0;zp(l);Fb(l|0,22832,140)}function Uk(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((Ec[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)==0){m=12}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){n=l;break}else{o=l;break a}}if((Ec[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[e>>2]=0;m=12;break}else{if(h){n=l;break}else{o=l;break a}}}}while(0);if((m|0)==12){m=0;if(h){o=0;break}else{n=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=(Ec[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{q=a[p]|0}if(q<<24>>24<0){o=n;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){o=n;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){Ec[c[(c[p>>2]|0)+40>>2]&255](p)|0;continue}else{c[l>>2]=r+1;continue}}n=c[j>>2]|0;do{if((n|0)==0){s=0}else{if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){s=n;break}if((Ec[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}}while(0);j=(s|0)==0;b:do{if((o|0)==0){m=32}else{do{if((c[o+12>>2]|0)==(c[o+16>>2]|0)){if(!((Ec[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1)){break}c[e>>2]=0;m=32;break b}}while(0);if(!j){break}i=d;return}}while(0);do{if((m|0)==32){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function Vk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Ec[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=lj(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function Wk(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;a:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Ec[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[j>>2]=0;k=11;break a}}while(0);if(d){l=e}else{k=12}}}while(0);if((k|0)==11){if(d){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){m=(Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{m=a[e]|0}if(!((Cc[c[(c[g>>2]|0)+36>>2]&63](g,m,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=b;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){Ec[c[(c[m>>2]|0)+40>>2]&255](m)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){n=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){n=e;break}if((Ec[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;n=0;break}else{n=c[h>>2]|0;break}}}while(0);h=(n|0)==0;b:do{if((l|0)==0){k=31}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if(!((Ec[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){break}c[j>>2]=0;k=31;break b}}while(0);if(!h){break}i=b;return}}while(0);do{if((k|0)==31){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function Xk(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;a:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((Ec[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[l>>2]=0;m=11;break a}}while(0);if(d){n=e}else{m=12}}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(!(p<<24>>24<0)){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(Cc[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){Ec[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=q;v=h;w=n;x=n}else{c[s>>2]=t+1;u=q;v=h;w=n;x=n}while(1){y=u-48|0;q=v-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((Ec[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;do{if((w|0)==0){A=0;B=x}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){A=w;B=x;break}if(!((Ec[c[(c[w>>2]|0)+36>>2]&255](w)|0)==-1)){A=x;B=x;break}c[l>>2]=0;A=0;B=0}}while(0);C=c[k>>2]|0;if(!((t^(A|0)==0)&(q|0)>0)){m=40;break}s=c[C+12>>2]|0;if((s|0)==(c[C+16>>2]|0)){D=(Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{D=a[s]|0}if(D<<24>>24<0){o=y;m=52;break}if((b[(c[e>>2]|0)+(D<<24>>24<<1)>>1]&2048)==0){o=y;m=52;break}s=((Cc[c[(c[d>>2]|0)+36>>2]&63](g,D,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;E=r+12|0;F=c[E>>2]|0;if((F|0)==(c[r+16>>2]|0)){Ec[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=s;v=q;w=A;x=B;continue}else{c[E>>2]=F+1;u=s;v=q;w=A;x=B;continue}}if((m|0)==40){do{if((C|0)==0){G=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){G=C;break}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[k>>2]=0;G=0;break}else{G=c[k>>2]|0;break}}}while(0);d=(G|0)==0;b:do{if((B|0)==0){m=50}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if(!((Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){break}c[l>>2]=0;m=50;break b}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==50){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function Yk(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;Qh(n,f);r=n|0;n=c[r>>2]|0;if(!((c[7224]|0)==-1)){c[m>>2]=28896;c[m+4>>2]=14;c[m+8>>2]=0;qh(28896,m,102)}m=(c[7225]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;Yg(c[r>>2]|0)|0;c[g>>2]=0;v=d|0;a:do{if((j|0)==(k|0)){w=71}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;b:while(1){H=G;while(1){if((H|0)!=0){w=71;break a}I=c[v>>2]|0;do{if((I|0)==0){J=1;K=0}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Ec[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if(!((M|0)==-1)){J=0;K=I;break}c[v>>2]=0;J=1;K=0}}while(0);I=c[x>>2]|0;do{if((I|0)==0){w=23}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){N=Ec[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{N=c[L>>2]|0}if((N|0)==-1){c[x>>2]=0;w=23;break}else{if(J){O=I;break}else{w=25;break b}}}}while(0);if((w|0)==23){w=0;if(J){w=25;break b}else{O=0}}if((Cc[c[(c[y>>2]|0)+52>>2]&63](u,c[F>>2]|0,0)|0)<<24>>24==37){w=28;break}if(Cc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[F>>2]|0)|0){P=F;w=38;break}Q=K+12|0;I=c[Q>>2]|0;R=K+16|0;if((I|0)==(c[R>>2]|0)){S=Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{S=c[I>>2]|0}I=Bc[c[(c[A>>2]|0)+28>>2]&63](u,S)|0;if((I|0)==(Bc[c[(c[A>>2]|0)+28>>2]&63](u,c[F>>2]|0)|0)){w=66;break}c[g>>2]=4;H=4}c:do{if((w|0)==28){w=0;H=F+4|0;if((H|0)==(k|0)){w=29;break b}I=Cc[c[(c[y>>2]|0)+52>>2]&63](u,c[H>>2]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){L=F+8|0;if((L|0)==(k|0)){w=32;break b}T=I;U=Cc[c[(c[y>>2]|0)+52>>2]&63](u,c[L>>2]|0,0)|0;V=L}else{T=0;U=I;V=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=K;c[D>>2]=O;Jc[H&7](o,b,p,q,f,g,h,U,T);c[v>>2]=c[E>>2];W=V+4|0}else if((w|0)==38){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(Cc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[H>>2]|0)|0){P=H;w=38}else{X=H;break}}H=K;I=O;L=O;while(1){do{if((H|0)==0){Y=1;Z=0}else{_=c[H+12>>2]|0;if((_|0)==(c[H+16>>2]|0)){$=Ec[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{$=c[_>>2]|0}if(!(($|0)==-1)){Y=0;Z=H;break}c[v>>2]=0;Y=1;Z=0}}while(0);do{if((I|0)==0){aa=L;w=53}else{_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){ba=Ec[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{ba=c[_>>2]|0}if((ba|0)==-1){c[x>>2]=0;aa=0;w=53;break}else{if(Y^(L|0)==0){ca=L;da=L;break}else{W=X;break c}}}}while(0);if((w|0)==53){w=0;if(Y){W=X;break c}else{ca=0;da=aa}}_=Z+12|0;ea=c[_>>2]|0;fa=Z+16|0;if((ea|0)==(c[fa>>2]|0)){ga=Ec[c[(c[Z>>2]|0)+36>>2]&255](Z)|0}else{ga=c[ea>>2]|0}if(!(Cc[c[(c[z>>2]|0)+12>>2]&63](u,8192,ga)|0)){W=X;break c}ea=c[_>>2]|0;if((ea|0)==(c[fa>>2]|0)){Ec[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;H=Z;I=ca;L=da;continue}else{c[_>>2]=ea+4;H=Z;I=ca;L=da;continue}}}else if((w|0)==66){w=0;L=c[Q>>2]|0;if((L|0)==(c[R>>2]|0)){Ec[c[(c[K>>2]|0)+40>>2]&255](K)|0}else{c[Q>>2]=L+4}W=F+4|0}}while(0);if((W|0)==(k|0)){w=71;break a}F=W;G=c[g>>2]|0}if((w|0)==25){c[g>>2]=4;ha=K;break}else if((w|0)==29){c[g>>2]=4;ha=K;break}else if((w|0)==32){c[g>>2]=4;ha=K;break}}}while(0);if((w|0)==71){ha=c[v>>2]|0}u=d|0;do{if((ha|0)==0){ia=1;ja=0}else{t=c[ha+12>>2]|0;if((t|0)==(c[ha+16>>2]|0)){ka=Ec[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ka=c[t>>2]|0}if(!((ka|0)==-1)){ia=0;ja=ha;break}c[u>>2]=0;ia=1;ja=0}}while(0);u=e|0;v=c[u>>2]|0;do{if((v|0)==0){w=84}else{t=c[v+12>>2]|0;if((t|0)==(c[v+16>>2]|0)){la=Ec[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{la=c[t>>2]|0}if((la|0)==-1){c[u>>2]=0;w=84;break}if(!ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);do{if((w|0)==84){if(ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);l=oc(4)|0;zp(l);Fb(l|0,22832,140)}function Zk(a){a=a|0;Wg(a|0);bq(a);return}function _k(a){a=a|0;Wg(a|0);return}function $k(a){a=a|0;return 2}function al(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];Yk(a,b,k,l,f,g,h,16736,16768);i=j;return}function bl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=Ec[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+4|0;r=o+4|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}Yk(b,d,l,m,g,h,j,q,r+(p<<2)|0);i=k;return}function cl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7224]|0)==-1)){c[l>>2]=28896;c[l+4>>2]=14;c[l+8>>2]=0;qh(28896,l,102)}l=(c[7225]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Yg(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Ec[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(Kj(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function dl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7224]|0)==-1)){c[l>>2]=28896;c[l+4>>2]=14;c[l+8>>2]=0;qh(28896,l,102)}l=(c[7225]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}Yg(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=Ec[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(Kj(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function el(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;Qh(l,f);f=l|0;l=c[f>>2]|0;if(!((c[7224]|0)==-1)){c[k>>2]=28896;c[k+4>>2]=14;c[k+8>>2]=0;qh(28896,k,102)}k=(c[7225]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Yg(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=jl(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=oc(4)|0;zp(b);Fb(b|0,22832,140)}function fl(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;Qh(z,g);_=z|0;z=c[_>>2]|0;if(!((c[7224]|0)==-1)){c[y>>2]=28896;c[y+4>>2]=14;c[y+8>>2]=0;qh(28896,y,102)}y=(c[7225]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;Yg(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 37:{c[Z>>2]=c[f>>2];il(0,e,Z,h,ba);break};case 109:{c[r>>2]=c[f>>2];aa=(jl(e,r,h,ba,2)|0)-1|0;ca=c[h>>2]|0;if((ca&4|0)==0&(aa|0)<12){c[j+16>>2]=aa;break a}else{c[h>>2]=ca|4;break a}break};case 110:case 116:{c[J>>2]=c[f>>2];gl(0,e,J,h,ba);break};case 112:{c[K>>2]=c[f>>2];hl(d,j+8|0,e,K,h,ba);break};case 73:{ca=j+8|0;c[t>>2]=c[f>>2];aa=jl(e,t,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((aa-1|0)>>>0<12>>>0)){break}c[ca>>2]=aa;break a}}while(0);c[h>>2]=da|4;break};case 99:{aa=d+8|0;ca=Ec[c[(c[aa>>2]|0)+12>>2]&255](aa)|0;aa=e|0;c[B>>2]=c[aa>>2];c[C>>2]=c[f>>2];ea=a[ca]|0;if((ea&1)==0){fa=(ea&255)>>>1;ga=ca+4|0;ha=ca+4|0}else{ea=c[ca+8>>2]|0;fa=c[ca+4>>2]|0;ga=ea;ha=ea}Yk(A,d,B,C,g,h,j,ga,ha+(fa<<2)|0);c[aa>>2]=c[A>>2];break};case 106:{c[s>>2]=c[f>>2];aa=jl(e,s,h,ba,3)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break a}else{c[h>>2]=ea|4;break a}break};case 88:{ea=d+8|0;aa=Ec[c[(c[ea>>2]|0)+24>>2]&255](ea)|0;ea=e|0;c[X>>2]=c[ea>>2];c[Y>>2]=c[f>>2];ca=a[aa]|0;if((ca&1)==0){ia=(ca&255)>>>1;ja=aa+4|0;ka=aa+4|0}else{ca=c[aa+8>>2]|0;ia=c[aa+4>>2]|0;ja=ca;ka=ca}Yk(W,d,X,Y,g,h,j,ja,ka+(ia<<2)|0);c[ea>>2]=c[W>>2];break};case 77:{c[q>>2]=c[f>>2];ea=jl(e,q,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(ea|0)<60){c[j+4>>2]=ea;break a}else{c[h>>2]=ca|4;break a}break};case 70:{ca=e|0;c[H>>2]=c[ca>>2];c[I>>2]=c[f>>2];Yk(G,d,H,I,g,h,j,16568,16600);c[ca>>2]=c[G>>2];break};case 100:case 101:{ca=j+12|0;c[v>>2]=c[f>>2];ea=jl(e,v,h,ba,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if(!((ea-1|0)>>>0<31>>>0)){break}c[ca>>2]=ea;break a}}while(0);c[h>>2]=aa|4;break};case 83:{c[p>>2]=c[f>>2];ea=jl(e,p,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(ea|0)<61){c[j>>2]=ea;break a}else{c[h>>2]=ca|4;break a}break};case 97:case 65:{ca=c[f>>2]|0;ea=d+8|0;da=Ec[c[c[ea>>2]>>2]&255](ea)|0;c[x>>2]=ca;ca=(Kj(e,x,da,da+168|0,ba,h,0)|0)-da|0;if((ca|0)>=168){break a}c[j+24>>2]=((ca|0)/12|0|0)%7|0;break};case 114:{ca=e|0;c[M>>2]=c[ca>>2];c[N>>2]=c[f>>2];Yk(L,d,M,N,g,h,j,16656,16700);c[ca>>2]=c[L>>2];break};case 82:{ca=e|0;c[P>>2]=c[ca>>2];c[Q>>2]=c[f>>2];Yk(O,d,P,Q,g,h,j,16632,16652);c[ca>>2]=c[O>>2];break};case 98:case 66:case 104:{ca=c[f>>2]|0;da=d+8|0;ea=Ec[c[(c[da>>2]|0)+4>>2]&255](da)|0;c[w>>2]=ca;ca=(Kj(e,w,ea,ea+288|0,ba,h,0)|0)-ea|0;if((ca|0)>=288){break a}c[j+16>>2]=((ca|0)/12|0|0)%12|0;break};case 84:{ca=e|0;c[S>>2]=c[ca>>2];c[T>>2]=c[f>>2];Yk(R,d,S,T,g,h,j,16600,16632);c[ca>>2]=c[R>>2];break};case 120:{ca=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];yc[ca&127](b,d,U,V,g,h,j);i=l;return};case 72:{c[u>>2]=c[f>>2];ca=jl(e,u,h,ba,2)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(ca|0)<24){c[j+8>>2]=ca;break a}else{c[h>>2]=ea|4;break a}break};case 89:{c[m>>2]=c[f>>2];ea=jl(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ea-1900;break};case 121:{c[n>>2]=c[f>>2];ea=jl(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((ea|0)<69){la=ea+2e3|0}else{la=(ea-69|0)>>>0<31>>>0?ea+1900|0:ea}c[j+20>>2]=la-1900;break};case 68:{ea=e|0;c[E>>2]=c[ea>>2];c[F>>2]=c[f>>2];Yk(D,d,E,F,g,h,j,16704,16736);c[ea>>2]=c[D>>2];break};case 119:{c[o>>2]=c[f>>2];ea=jl(e,o,h,ba,1)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(ea|0)<7){c[j+24>>2]=ea;break a}else{c[h>>2]=ca|4;break a}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=oc(4)|0;zp(l);Fb(l|0,22832,140)}function gl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=Ec[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=Ec[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{if(j){o=h;break}else{p=h;break a}}}}while(0);if((m|0)==15){m=0;if(j){p=0;break}else{o=0}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){q=Ec[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{q=c[k>>2]|0}if(!(Cc[c[(c[d>>2]|0)+12>>2]&63](f,8192,q)|0)){p=o;break}k=c[g>>2]|0;h=k+12|0;r=c[h>>2]|0;if((r|0)==(c[k+16>>2]|0)){Ec[c[(c[k>>2]|0)+40>>2]&255](k)|0;continue}else{c[h>>2]=r+4;continue}}o=c[g>>2]|0;do{if((o|0)==0){s=1}else{q=c[o+12>>2]|0;if((q|0)==(c[o+16>>2]|0)){t=Ec[c[(c[o>>2]|0)+36>>2]&255](o)|0}else{t=c[q>>2]|0}if((t|0)==-1){c[g>>2]=0;s=1;break}else{s=(c[g>>2]|0)==0;break}}}while(0);do{if((p|0)==0){m=37}else{g=c[p+12>>2]|0;if((g|0)==(c[p+16>>2]|0)){u=Ec[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;m=37;break}if(!s){break}i=a;return}}while(0);do{if((m|0)==37){if(s){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function hl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=Ec[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=Kj(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function il(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=Ec[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{if(h){n=d;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){o=Ec[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{o=c[d>>2]|0}if(!((Cc[c[(c[f>>2]|0)+52>>2]&63](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){Ec[c[(c[o>>2]|0)+40>>2]&255](o)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){p=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){q=Ec[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{q=c[f>>2]|0}if((q|0)==-1){c[g>>2]=0;p=1;break}else{p=(c[g>>2]|0)==0;break}}}while(0);do{if((n|0)==0){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){r=Ec[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{r=c[g>>2]|0}if((r|0)==-1){c[k>>2]=0;l=38;break}if(!p){break}i=a;return}}while(0);do{if((l|0)==38){if(p){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function jl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=Ec[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=Ec[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=Ec[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(Cc[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(Cc[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){Ec[c[(c[q>>2]|0)+40>>2]&255](q)|0;r=n;s=f;t=o;u=o}else{c[a>>2]=k+4;r=n;s=f;t=o;u=o}while(1){v=r-48|0;o=s-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=1}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=Ec[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=1;break}else{w=(c[h>>2]|0)==0;break}}}while(0);do{if((t|0)==0){y=1;z=0;A=u}else{f=c[t+12>>2]|0;if((f|0)==(c[t+16>>2]|0)){B=Ec[c[(c[t>>2]|0)+36>>2]&255](t)|0}else{B=c[f>>2]|0}if((B|0)==-1){c[l>>2]=0;y=1;z=0;A=0;break}else{y=(u|0)==0;z=u;A=u;break}}}while(0);C=c[h>>2]|0;if(!((w^y)&(o|0)>0)){break}f=c[C+12>>2]|0;if((f|0)==(c[C+16>>2]|0)){D=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{D=c[f>>2]|0}if(!(Cc[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=63;break}f=((Cc[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){Ec[c[(c[n>>2]|0)+40>>2]&255](n)|0;r=f;s=o;t=z;u=A;continue}else{c[k>>2]=a+4;r=f;s=o;t=z;u=A;continue}}if((m|0)==63){i=g;return p|0}do{if((C|0)==0){E=1}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){F=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if((A|0)==0){m=60}else{h=c[A+12>>2]|0;if((h|0)==(c[A+16>>2]|0)){G=Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=60;break}if(E){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function kl(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((e|0)==(c[6868]|0)){f=b|0;Wg(f);g=b;bq(g);return}nb(c[d>>2]|0);f=b|0;Wg(f);g=b;bq(g);return}function ll(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((e|0)==(c[6868]|0)){f=b|0;Wg(f);return}nb(c[d>>2]|0);f=b|0;Wg(f);return}function ml(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=dc(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=m;t=l;u=l}while(1){l=a[s]|0;do{if((t|0)==0){v=0;w=u}else{m=t+24|0;j=c[m>>2]|0;if((j|0)==(c[t+28>>2]|0)){e=(Bc[c[(c[t>>2]|0)+52>>2]&63](t,l&255)|0)==-1;v=e?0:t;w=e?0:u;break}else{c[m>>2]=j+1;a[j]=l;v=t;w=u;break}}}while(0);l=s+1|0;if((l|0)==(d|0)){q=w;break}else{s=l;t=v;u=w}}r=b|0;c[r>>2]=q;i=g;return}function nl(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((e|0)==(c[6868]|0)){f=b|0;Wg(f);g=b;bq(g);return}nb(c[d>>2]|0);f=b|0;Wg(f);g=b;bq(g);return}function ol(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((e|0)==(c[6868]|0)){f=b|0;Wg(f);return}nb(c[d>>2]|0);f=b|0;Wg(f);return}function pl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;ql(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=l;p=k;q=k}while(1){k=c[o>>2]|0;if((p|0)==0){r=0;s=q}else{l=p+24|0;d=c[l>>2]|0;if((d|0)==(c[p+28>>2]|0)){t=Bc[c[(c[p>>2]|0)+52>>2]&63](p,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;t=k}k=(t|0)==-1;r=k?0:p;s=k?0:q}k=o+4|0;if((k|0)==(j|0)){m=s;break}else{o=k;p=r;q=s}}n=a|0;c[n>>2]=m;i=f;return}function ql(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b|0;dc(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=_b(c[g>>2]|0)|0;g=pp(d,m,n,l)|0;if((f|0)!=0){_b(f|0)|0}if((g|0)==-1){mm(5232)}else{c[e>>2]=d+(g<<2);i=j;return}}function rl(a){a=a|0;Wg(a|0);bq(a);return}function sl(a){a=a|0;Wg(a|0);return}function tl(a){a=a|0;return 127}function ul(a){a=a|0;return 127}function vl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function wl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function xl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function yl(a,b){a=a|0;b=b|0;uh(a,1,45);return}function zl(a){a=a|0;return 0}function Al(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Bl(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Cl(a){a=a|0;Wg(a|0);bq(a);return}function Dl(a){a=a|0;Wg(a|0);return}function El(a){a=a|0;return 127}function Fl(a){a=a|0;return 127}function Gl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Hl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Il(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Jl(a,b){a=a|0;b=b|0;uh(a,1,45);return}function Kl(a){a=a|0;return 0}function Ll(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Ml(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Nl(a){a=a|0;Wg(a|0);bq(a);return}function Ol(a){a=a|0;Wg(a|0);return}function Pl(a){a=a|0;return 2147483647}function Ql(a){a=a|0;return 2147483647}function Rl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Sl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Tl(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function Ul(a,b){a=a|0;b=b|0;Gh(a,1,45);return}function Vl(a){a=a|0;return 0}function Wl(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Xl(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Yl(a){a=a|0;Wg(a|0);bq(a);return}function Zl(a){a=a|0;Wg(a|0);return}function _l(a){a=a|0;return 2147483647}function $l(a){a=a|0;return 2147483647}function am(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function bm(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function cm(a,b){a=a|0;b=b|0;tq(a|0,0,12)|0;return}function dm(a,b){a=a|0;b=b|0;Gh(a,1,45);return}function em(a){a=a|0;return 0}function fm(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function gm(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function hm(a){a=a|0;Wg(a|0);bq(a);return}function im(a){a=a|0;Wg(a|0);return}function jm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=172;w=m+100|0;Qh(p,h);m=p|0;x=c[m>>2]|0;if(!((c[7226]|0)==-1)){c[l>>2]=28904;c[l+4>>2]=14;c[l+8>>2]=0;qh(28904,l,102)}l=(c[7227]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(lm(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Mc[c[(c[z>>2]|0)+32>>2]&15](A,16552,16562,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=Up(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}hq();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[16552+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ac(D|0,12648,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}Vp(J);break}M=oc(8)|0;ch(M,12144);Fb(M|0,22848,26)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if(!((Ec[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1)){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=45}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=47;break}}if((Ec[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;S=45;break}else{if(A){break}else{S=47;break}}}}while(0);if((S|0)==45){if(A){S=47}}if((S|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=R;Yg(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}zc[c[v>>2]&511](B);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function km(a){a=a|0;return}function lm(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0;q=i;i=i+520|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=q+440|0;x=q+456|0;y=q+472|0;z=q+488|0;A=q+504|0;B=q+512|0;C=r|0;D=v;tq(D|0,0,12)|0;E=w;tq(E|0,0,12)|0;F=x;tq(F|0,0,12)|0;G=y;tq(G|0,0,12)|0;H=z;tq(H|0,0,12)|0;pm(g,h,s,t,u,v,w,x,y,A);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=y+1|0;I=y+4|0;J=y+8|0;K=x+1|0;L=x+4|0;M=x+8|0;N=(j&512|0)!=0;j=w+1|0;O=w+8|0;P=w+4|0;Q=z;R=Q+1|0;S=z+8|0;T=z+4|0;U=s+3|0;V=v+4|0;W=n+4|0;n=p;p=172;X=C;Y=C;C=r+400|0;r=0;Z=0;a:while(1){_=c[g>>2]|0;do{if((_|0)==0){$=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){$=_;break}if((Ec[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;$=0;break}else{$=c[g>>2]|0;break}}}while(0);_=($|0)==0;aa=c[e>>2]|0;do{if((aa|0)==0){ba=15}else{if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0)){if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}if((Ec[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)==-1){c[e>>2]=0;ba=15;break}else{if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}}}while(0);if((ba|0)==15){ba=0;if(_){da=p;ea=X;fa=Y;ga=Z;ba=310;break}else{ca=0}}b:do{switch(a[s+r|0]|0){case 0:{ba=42;break};case 1:{if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}aa=c[g>>2]|0;ha=c[aa+12>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){ia=(Ec[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ia=a[ha]|0}if(ia<<24>>24<0){ba=41;break a}if((b[(c[f>>2]|0)+(ia<<24>>24<<1)>>1]&8192)==0){ba=41;break a}ha=c[g>>2]|0;aa=ha+12|0;ja=c[aa>>2]|0;if((ja|0)==(c[ha+16>>2]|0)){ka=(Ec[c[(c[ha>>2]|0)+40>>2]&255](ha)|0)&255}else{c[aa>>2]=ja+1;ka=a[ja]|0}Bh(z,ka);ba=42;break};case 3:{ja=a[F]|0;aa=(ja&1)==0;if(aa){la=(ja&255)>>>1}else{la=c[L>>2]|0}ha=a[G]|0;ma=(ha&1)==0;if(ma){na=(ha&255)>>>1}else{na=c[I>>2]|0}if((la|0)==(-na|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(aa){ua=(ja&255)>>>1}else{ua=c[L>>2]|0}do{if((ua|0)!=0){if(ma){va=(ha&255)>>>1}else{va=c[I>>2]|0}if((va|0)==0){break}wa=c[g>>2]|0;xa=c[wa+12>>2]|0;ya=c[wa+16>>2]|0;if((xa|0)==(ya|0)){za=(Ec[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255;Aa=c[g>>2]|0;Ba=za;Ca=a[F]|0;Da=Aa;Ea=c[Aa+12>>2]|0;Fa=c[Aa+16>>2]|0}else{Ba=a[xa]|0;Ca=ja;Da=wa;Ea=xa;Fa=ya}ya=Da+12|0;xa=(Ea|0)==(Fa|0);if(Ba<<24>>24==(a[(Ca&1)==0?K:c[M>>2]|0]|0)){if(xa){Ec[c[(c[Da>>2]|0)+40>>2]&255](Da)|0}else{c[ya>>2]=Ea+1}ya=a[F]|0;if((ya&1)==0){Ga=(ya&255)>>>1}else{Ga=c[L>>2]|0}oa=Ga>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(xa){Ha=(Ec[c[(c[Da>>2]|0)+36>>2]&255](Da)|0)&255}else{Ha=a[Ea]|0}if(!(Ha<<24>>24==(a[(a[G]&1)==0?m:c[J>>2]|0]|0))){ba=136;break a}xa=c[g>>2]|0;ya=xa+12|0;wa=c[ya>>2]|0;if((wa|0)==(c[xa+16>>2]|0)){Ec[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[ya>>2]=wa+1}a[l]=1;wa=a[G]|0;if((wa&1)==0){Ia=(wa&255)>>>1}else{Ia=c[I>>2]|0}oa=Ia>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}}while(0);if(aa){Ja=(ja&255)>>>1}else{Ja=c[L>>2]|0}ma=c[g>>2]|0;wa=c[ma+12>>2]|0;ya=(wa|0)==(c[ma+16>>2]|0);if((Ja|0)==0){if(ya){xa=(Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Ka=xa;La=a[G]|0}else{Ka=a[wa]|0;La=ha}if(!(Ka<<24>>24==(a[(La&1)==0?m:c[J>>2]|0]|0))){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}xa=c[g>>2]|0;Aa=xa+12|0;za=c[Aa>>2]|0;if((za|0)==(c[xa+16>>2]|0)){Ec[c[(c[xa>>2]|0)+40>>2]&255](xa)|0}else{c[Aa>>2]=za+1}a[l]=1;za=a[G]|0;if((za&1)==0){Ma=(za&255)>>>1}else{Ma=c[I>>2]|0}oa=Ma>>>0>1>>>0?y:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}if(ya){ya=(Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255;Na=ya;Oa=a[F]|0}else{Na=a[wa]|0;Oa=ja}if(!(Na<<24>>24==(a[(Oa&1)==0?K:c[M>>2]|0]|0))){a[l]=1;oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}wa=c[g>>2]|0;ya=wa+12|0;ma=c[ya>>2]|0;if((ma|0)==(c[wa+16>>2]|0)){Ec[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[ya>>2]=ma+1}ma=a[F]|0;if((ma&1)==0){Pa=(ma&255)>>>1}else{Pa=c[L>>2]|0}oa=Pa>>>0>1>>>0?x:Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break};case 2:{if(!((Z|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Qa=(a[U]|0)!=0}else{Qa=0}if(!(N|Qa)){oa=0;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}}ma=a[E]|0;ya=(ma&1)==0;wa=ya?j:c[O>>2]|0;c:do{if((r|0)==0){Ra=wa;Sa=ma;Ta=ca;Ua=ca}else{if(!((d[s+(r-1)|0]|0)>>>0<2>>>0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}za=wa+(ya?(ma&255)>>>1:c[P>>2]|0)|0;Aa=wa;while(1){if((Aa|0)==(za|0)){Va=za;break}xa=a[Aa]|0;if(xa<<24>>24<0){Va=Aa;break}if((b[(c[f>>2]|0)+(xa<<24>>24<<1)>>1]&8192)==0){Va=Aa;break}else{Aa=Aa+1|0}}Aa=Va-wa|0;za=a[H]|0;xa=(za&1)==0;if(xa){Wa=(za&255)>>>1}else{Wa=c[T>>2]|0}if(Aa>>>0>Wa>>>0){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break}if(xa){xa=(za&255)>>>1;Xa=xa;Ya=R;Za=xa-Aa+(Q+1)|0}else{xa=c[S>>2]|0;za=c[T>>2]|0;Xa=za;Ya=xa;Za=xa+(za-Aa)|0}Aa=Ya+Xa|0;if((Za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=Za;$a=wa}while(1){if((a[_a]|0)!=(a[$a]|0)){Ra=wa;Sa=ma;Ta=ca;Ua=ca;break c}za=_a+1|0;if((za|0)==(Aa|0)){Ra=Va;Sa=ma;Ta=ca;Ua=ca;break}else{_a=za;$a=$a+1|0}}}}while(0);d:while(1){if((Sa&1)==0){ab=(Sa&255)>>>1;bb=j}else{ab=c[P>>2]|0;bb=c[O>>2]|0}if((Ra|0)==(bb+ab|0)){break}ma=c[g>>2]|0;do{if((ma|0)==0){cb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){cb=ma;break}if((Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;cb=0;break}else{cb=c[g>>2]|0;break}}}while(0);ma=(cb|0)==0;do{if((Ta|0)==0){db=Ua;ba=173}else{if((c[Ta+12>>2]|0)!=(c[Ta+16>>2]|0)){if(ma){eb=Ta;fb=Ua;break}else{break d}}if((Ec[c[(c[Ta>>2]|0)+36>>2]&255](Ta)|0)==-1){c[e>>2]=0;db=0;ba=173;break}else{if(ma^(Ua|0)==0){eb=Ua;fb=Ua;break}else{break d}}}}while(0);if((ba|0)==173){ba=0;if(ma){break}else{eb=0;fb=db}}wa=c[g>>2]|0;ya=c[wa+12>>2]|0;if((ya|0)==(c[wa+16>>2]|0)){gb=(Ec[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255}else{gb=a[ya]|0}if(!(gb<<24>>24==(a[Ra]|0))){break}ya=c[g>>2]|0;wa=ya+12|0;ja=c[wa>>2]|0;if((ja|0)==(c[ya+16>>2]|0)){Ec[c[(c[ya>>2]|0)+40>>2]&255](ya)|0}else{c[wa>>2]=ja+1}Ra=Ra+1|0;Sa=a[E]|0;Ta=eb;Ua=fb}if(!N){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break b}ja=a[E]|0;if((ja&1)==0){hb=(ja&255)>>>1;ib=j}else{hb=c[P>>2]|0;ib=c[O>>2]|0}if((Ra|0)==(ib+hb|0)){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n}else{ba=189;break a}break};case 4:{ja=0;wa=C;ya=Y;ha=X;aa=p;Aa=n;e:while(1){za=c[g>>2]|0;do{if((za|0)==0){jb=0}else{if((c[za+12>>2]|0)!=(c[za+16>>2]|0)){jb=za;break}if((Ec[c[(c[za>>2]|0)+36>>2]&255](za)|0)==-1){c[g>>2]=0;jb=0;break}else{jb=c[g>>2]|0;break}}}while(0);za=(jb|0)==0;ma=c[e>>2]|0;do{if((ma|0)==0){ba=202}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){if(za){break}else{break e}}if((Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[e>>2]=0;ba=202;break}else{if(za){break}else{break e}}}}while(0);if((ba|0)==202){ba=0;if(za){break}}ma=c[g>>2]|0;xa=c[ma+12>>2]|0;if((xa|0)==(c[ma+16>>2]|0)){kb=(Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)&255}else{kb=a[xa]|0}do{if(kb<<24>>24<0){ba=221}else{if((b[(c[f>>2]|0)+(kb<<24>>24<<1)>>1]&2048)==0){ba=221;break}xa=c[o>>2]|0;if((xa|0)==(Aa|0)){ma=(c[W>>2]|0)!=172;lb=c[h>>2]|0;mb=Aa-lb|0;nb=mb>>>0<2147483647>>>0?mb<<1:-1;ob=Wp(ma?lb:0,nb)|0;if((ob|0)==0){hq()}do{if(ma){c[h>>2]=ob;pb=ob}else{lb=c[h>>2]|0;c[h>>2]=ob;if((lb|0)==0){pb=ob;break}zc[c[W>>2]&511](lb);pb=c[h>>2]|0}}while(0);c[W>>2]=84;ob=pb+mb|0;c[o>>2]=ob;qb=(c[h>>2]|0)+nb|0;rb=ob}else{qb=Aa;rb=xa}c[o>>2]=rb+1;a[rb]=kb;sb=ja+1|0;tb=wa;ub=ya;vb=ha;wb=aa;xb=qb}}while(0);if((ba|0)==221){ba=0;za=a[D]|0;if((za&1)==0){yb=(za&255)>>>1}else{yb=c[V>>2]|0}if((yb|0)==0|(ja|0)==0){break}if(!(kb<<24>>24==(a[u]|0))){break}if((ya|0)==(wa|0)){za=ya-ha|0;ob=za>>>0<2147483647>>>0?za<<1:-1;if((aa|0)==172){zb=0}else{zb=ha}ma=Wp(zb,ob)|0;lb=ma;if((ma|0)==0){hq()}Ab=lb+(ob>>>2<<2)|0;Bb=lb+(za>>2<<2)|0;Cb=lb;Db=84}else{Ab=wa;Bb=ya;Cb=ha;Db=aa}c[Bb>>2]=ja;sb=0;tb=Ab;ub=Bb+4|0;vb=Cb;wb=Db;xb=Aa}lb=c[g>>2]|0;za=lb+12|0;ob=c[za>>2]|0;if((ob|0)==(c[lb+16>>2]|0)){Ec[c[(c[lb>>2]|0)+40>>2]&255](lb)|0;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}else{c[za>>2]=ob+1;ja=sb;wa=tb;ya=ub;ha=vb;aa=wb;Aa=xb;continue}}if((ha|0)==(ya|0)|(ja|0)==0){Eb=wa;Fb=ya;Gb=ha;Hb=aa}else{if((ya|0)==(wa|0)){ob=ya-ha|0;za=ob>>>0<2147483647>>>0?ob<<1:-1;if((aa|0)==172){Ib=0}else{Ib=ha}lb=Wp(Ib,za)|0;ma=lb;if((lb|0)==0){hq()}Jb=ma+(za>>>2<<2)|0;Kb=ma+(ob>>2<<2)|0;Lb=ma;Mb=84}else{Jb=wa;Kb=ya;Lb=ha;Mb=aa}c[Kb>>2]=ja;Eb=Jb;Fb=Kb+4|0;Gb=Lb;Hb=Mb}if((c[A>>2]|0)>0){ma=c[g>>2]|0;do{if((ma|0)==0){Nb=0}else{if((c[ma+12>>2]|0)!=(c[ma+16>>2]|0)){Nb=ma;break}if((Ec[c[(c[ma>>2]|0)+36>>2]&255](ma)|0)==-1){c[g>>2]=0;Nb=0;break}else{Nb=c[g>>2]|0;break}}}while(0);ma=(Nb|0)==0;ja=c[e>>2]|0;do{if((ja|0)==0){ba=257}else{if((c[ja+12>>2]|0)!=(c[ja+16>>2]|0)){if(ma){Ob=ja;break}else{ba=264;break a}}if((Ec[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)==-1){c[e>>2]=0;ba=257;break}else{if(ma){Ob=ja;break}else{ba=264;break a}}}}while(0);if((ba|0)==257){ba=0;if(ma){ba=264;break a}else{Ob=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Pb=(Ec[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Pb=a[aa]|0}if(!(Pb<<24>>24==(a[t]|0))){ba=264;break a}aa=c[g>>2]|0;ja=aa+12|0;ha=c[ja>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){Ec[c[(c[aa>>2]|0)+40>>2]&255](aa)|0;Qb=Aa;Rb=Ob;Sb=Ob}else{c[ja>>2]=ha+1;Qb=Aa;Rb=Ob;Sb=Ob}while(1){ha=c[g>>2]|0;do{if((ha|0)==0){Tb=0}else{if((c[ha+12>>2]|0)!=(c[ha+16>>2]|0)){Tb=ha;break}if((Ec[c[(c[ha>>2]|0)+36>>2]&255](ha)|0)==-1){c[g>>2]=0;Tb=0;break}else{Tb=c[g>>2]|0;break}}}while(0);ha=(Tb|0)==0;do{if((Rb|0)==0){Ub=Sb;ba=280}else{if((c[Rb+12>>2]|0)!=(c[Rb+16>>2]|0)){if(ha){Vb=Sb;Wb=Rb;break}else{ba=288;break a}}if((Ec[c[(c[Rb>>2]|0)+36>>2]&255](Rb)|0)==-1){c[e>>2]=0;Ub=0;ba=280;break}else{if(ha^(Sb|0)==0){Vb=Sb;Wb=Sb;break}else{ba=288;break a}}}}while(0);if((ba|0)==280){ba=0;if(ha){ba=288;break a}else{Vb=Ub;Wb=0}}ja=c[g>>2]|0;aa=c[ja+12>>2]|0;if((aa|0)==(c[ja+16>>2]|0)){Xb=(Ec[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)&255}else{Xb=a[aa]|0}if(Xb<<24>>24<0){ba=288;break a}if((b[(c[f>>2]|0)+(Xb<<24>>24<<1)>>1]&2048)==0){ba=288;break a}aa=c[o>>2]|0;if((aa|0)==(Qb|0)){ja=(c[W>>2]|0)!=172;ya=c[h>>2]|0;wa=Qb-ya|0;ob=wa>>>0<2147483647>>>0?wa<<1:-1;za=Wp(ja?ya:0,ob)|0;if((za|0)==0){hq()}do{if(ja){c[h>>2]=za;Yb=za}else{ya=c[h>>2]|0;c[h>>2]=za;if((ya|0)==0){Yb=za;break}zc[c[W>>2]&511](ya);Yb=c[h>>2]|0}}while(0);c[W>>2]=84;za=Yb+wa|0;c[o>>2]=za;Zb=(c[h>>2]|0)+ob|0;_b=za}else{Zb=Qb;_b=aa}za=c[g>>2]|0;ja=c[za+12>>2]|0;if((ja|0)==(c[za+16>>2]|0)){ha=(Ec[c[(c[za>>2]|0)+36>>2]&255](za)|0)&255;$b=ha;ac=c[o>>2]|0}else{$b=a[ja]|0;ac=_b}c[o>>2]=ac+1;a[ac]=$b;ja=(c[A>>2]|0)-1|0;c[A>>2]=ja;ha=c[g>>2]|0;za=ha+12|0;ya=c[za>>2]|0;if((ya|0)==(c[ha+16>>2]|0)){Ec[c[(c[ha>>2]|0)+40>>2]&255](ha)|0}else{c[za>>2]=ya+1}if((ja|0)>0){Qb=Zb;Rb=Wb;Sb=Vb}else{bc=Zb;break}}}else{bc=Aa}if((c[o>>2]|0)==(c[h>>2]|0)){ba=308;break a}else{oa=Z;pa=Eb;qa=Fb;ra=Gb;sa=Hb;ta=bc}break};default:{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n}}}while(0);f:do{if((ba|0)==42){ba=0;if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}else{cc=ca;dc=ca}while(1){_=c[g>>2]|0;do{if((_|0)==0){ec=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){ec=_;break}if((Ec[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;ec=0;break}else{ec=c[g>>2]|0;break}}}while(0);_=(ec|0)==0;do{if((cc|0)==0){fc=dc;ba=55}else{if((c[cc+12>>2]|0)!=(c[cc+16>>2]|0)){if(_){gc=cc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}}if((Ec[c[(c[cc>>2]|0)+36>>2]&255](cc)|0)==-1){c[e>>2]=0;fc=0;ba=55;break}else{if(_^(dc|0)==0){gc=dc;hc=dc;break}else{oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}}}}while(0);if((ba|0)==55){ba=0;if(_){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}else{gc=0;hc=fc}}aa=c[g>>2]|0;ob=c[aa+12>>2]|0;if((ob|0)==(c[aa+16>>2]|0)){ic=(Ec[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{ic=a[ob]|0}if(ic<<24>>24<0){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}if((b[(c[f>>2]|0)+(ic<<24>>24<<1)>>1]&8192)==0){oa=Z;pa=C;qa=Y;ra=X;sa=p;ta=n;break f}ob=c[g>>2]|0;aa=ob+12|0;wa=c[aa>>2]|0;if((wa|0)==(c[ob+16>>2]|0)){jc=(Ec[c[(c[ob>>2]|0)+40>>2]&255](ob)|0)&255}else{c[aa>>2]=wa+1;jc=a[wa]|0}Bh(z,jc);cc=gc;dc=hc}}}while(0);Aa=r+1|0;if(Aa>>>0<4>>>0){n=ta;p=sa;X=ra;Y=qa;C=pa;r=Aa;Z=oa}else{da=sa;ea=ra;fa=qa;ga=oa;ba=310;break}}g:do{if((ba|0)==41){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==136){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==189){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==264){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==288){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==308){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==310){h:do{if((ga|0)!=0){oa=ga;qa=ga+1|0;ra=ga+8|0;sa=ga+4|0;Z=1;i:while(1){r=a[oa]|0;if((r&1)==0){nc=(r&255)>>>1}else{nc=c[sa>>2]|0}if(!(Z>>>0<nc>>>0)){break h}r=c[g>>2]|0;do{if((r|0)==0){oc=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){oc=r;break}if((Ec[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;oc=0;break}else{oc=c[g>>2]|0;break}}}while(0);r=(oc|0)==0;_=c[e>>2]|0;do{if((_|0)==0){ba=328}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){if(r){break}else{break i}}if((Ec[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[e>>2]=0;ba=328;break}else{if(r){break}else{break i}}}}while(0);if((ba|0)==328){ba=0;if(r){break}}_=c[g>>2]|0;pa=c[_+12>>2]|0;if((pa|0)==(c[_+16>>2]|0)){pc=(Ec[c[(c[_>>2]|0)+36>>2]&255](_)|0)&255}else{pc=a[pa]|0}if((a[oa]&1)==0){qc=qa}else{qc=c[ra>>2]|0}if(!(pc<<24>>24==(a[qc+Z|0]|0))){break}pa=Z+1|0;_=c[g>>2]|0;C=_+12|0;Y=c[C>>2]|0;if((Y|0)==(c[_+16>>2]|0)){Ec[c[(c[_>>2]|0)+40>>2]&255](_)|0;Z=pa;continue}else{c[C>>2]=Y+1;Z=pa;continue}}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da;break g}}while(0);if((ea|0)==(fa|0)){kc=1;lc=fa;mc=da;break}c[B>>2]=0;qm(v,ea,fa,B);if((c[B>>2]|0)==0){kc=1;lc=ea;mc=da;break}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da}}while(0);vh(z);vh(y);vh(x);vh(w);vh(v);if((lc|0)==0){i=q;return kc|0}zc[mc&511](lc);i=q;return kc|0}function mm(a){a=a|0;var b=0;b=oc(8)|0;ch(b,a);Fb(b|0,22848,26)}function nm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=172;u=m+100|0;Qh(p,h);m=p|0;v=c[m>>2]|0;if(!((c[7226]|0)==-1)){c[l>>2]=28904;c[l+4>>2]=14;c[l+8>>2]=0;qh(28904,l,102)}l=(c[7227]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(lm(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){Bh(k,Bc[c[(c[B>>2]|0)+28>>2]&63](y,45)|0)}x=Bc[c[(c[B>>2]|0)+28>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}om(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if(!((Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=35;break}}if((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;E=33;break}else{if(x^(A|0)==0){break}else{E=35;break}}}}while(0);if((E|0)==33){if(x){E=35}}if((E|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=D;Yg(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}zc[c[t>>2]&511](A);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function om(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=10;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g|0;if((e|0)==(d|0)){return b|0}if((i-k|0)>>>0<h>>>0){Eh(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=e+(k-g)|0;g=d;d=m+k|0;while(1){a[d]=a[g]|0;j=g+1|0;if((j|0)==(e|0)){break}else{g=j;d=d+1|0}}a[m+l|0]=0;l=k+h|0;if((a[f]&1)==0){a[f]=l<<1;return b|0}else{c[b+4>>2]=l;return b|0}return 0}function pm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[7344]|0)==-1)){c[p>>2]=29376;c[p+4>>2]=14;c[p+8>>2]=0;qh(29376,p,102)}p=(c[7345]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=oc(4)|0;D=C;zp(D);Fb(C|0,22832,140)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=oc(4)|0;D=C;zp(D);Fb(C|0,22832,140)}C=b;Ac[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;Ac[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;vh(r);Ac[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Ah(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;vh(s);s=b;a[f]=Ec[c[(c[s>>2]|0)+12>>2]&255](C)|0;a[g]=Ec[c[(c[s>>2]|0)+16>>2]&255](C)|0;Ac[c[(c[D>>2]|0)+20>>2]&127](t,C);s=h;if((a[s]&1)==0){a[h+1|0]=0;a[s]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Ah(h,0);p=t;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;vh(t);Ac[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){a[j+1|0]=0;a[D]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];tq(t|0,0,12)|0;vh(u);E=Ec[c[(c[b>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[7346]|0)==-1)){c[o>>2]=29384;c[o+4>>2]=14;c[o+8>>2]=0;qh(29384,o,102)}o=(c[7347]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=oc(4)|0;G=F;zp(G);Fb(F|0,22832,140)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=oc(4)|0;G=F;zp(G);Fb(F|0,22832,140)}F=C;Ac[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;Ac[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];tq(l|0,0,12)|0;vh(w);Ac[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Ah(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];tq(k|0,0,12)|0;vh(x);x=C;a[f]=Ec[c[(c[x>>2]|0)+12>>2]&255](F)|0;a[g]=Ec[c[(c[x>>2]|0)+16>>2]&255](F)|0;Ac[c[(c[G>>2]|0)+20>>2]&127](y,F);x=h;if((a[x]&1)==0){a[h+1|0]=0;a[x]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Ah(h,0);h=y;c[x>>2]=c[h>>2];c[x+4>>2]=c[h+4>>2];c[x+8>>2]=c[h+8>>2];tq(h|0,0,12)|0;vh(y);Ac[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){a[j+1|0]=0;a[G]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];tq(j|0,0,12)|0;vh(z);E=Ec[c[(c[C>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function qm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=b;h=a[g]|0;if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}if((i|0)==0){return}do{if((d|0)==(e|0)){j=h}else{i=e-4|0;if(i>>>0>d>>>0){k=d;l=i}else{j=h;break}do{i=c[k>>2]|0;c[k>>2]=c[l>>2];c[l>>2]=i;k=k+4|0;l=l-4|0;}while(k>>>0<l>>>0);j=a[g]|0}}while(0);if((j&1)==0){m=(j&255)>>>1;n=b+1|0}else{m=c[b+4>>2]|0;n=c[b+8>>2]|0}b=e-4|0;e=a[n]|0;j=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){g=n+m|0;l=n;k=d;h=e;i=j;while(1){if(!i){if((h<<24>>24|0)!=(c[k>>2]|0)){break}}o=(g-l|0)>1?l+1|0:l;p=k+4|0;q=a[o]|0;r=q<<24>>24<1|q<<24>>24==127;if(p>>>0<b>>>0){l=o;k=p;h=q;i=r}else{s=q;t=r;break a}}c[f>>2]=4;return}else{s=e;t=j}}while(0);if(t){return}t=c[b>>2]|0;if(!(s<<24>>24>>>0<t>>>0|(t|0)==0)){return}c[f>>2]=4;return}function rm(a){a=a|0;Wg(a|0);bq(a);return}function sm(a){a=a|0;Wg(a|0);return}function tm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=172;w=m+400|0;Qh(p,h);m=p|0;x=c[m>>2]|0;if(!((c[7224]|0)==-1)){c[l>>2]=28896;c[l+4>>2]=14;c[l+8>>2]=0;qh(28896,l,102)}l=(c[7225]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(um(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Mc[c[(c[z>>2]|0)+48>>2]&15](A,16536,16546,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=Up((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}hq();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[16536+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=ac(D|0,12648,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}Vp(J);break}M=oc(8)|0;ch(M,12144);Fb(M|0,22848,26)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=1}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=Ec[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{S=c[M>>2]|0}if((S|0)==-1){c[A>>2]=0;R=1;break}else{R=(c[A>>2]|0)==0;break}}}while(0);z=c[B>>2]|0;do{if((z|0)==0){T=47}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=Ec[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=47;break}else{if(R){break}else{T=49;break}}}}while(0);if((T|0)==47){if(R){T=49}}if((T|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[A>>2];Yg(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}zc[c[v>>2]&511](B);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function um(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0;p=i;i=i+528|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=p+448|0;x=p+464|0;y=p+480|0;z=p+496|0;A=p+512|0;B=p+520|0;c[q>>2]=o;o=r|0;C=v;tq(C|0,0,12)|0;D=w;tq(D|0,0,12)|0;E=x;tq(E|0,0,12)|0;F=y;tq(F|0,0,12)|0;G=z;tq(G|0,0,12)|0;xm(f,g,s,t,u,v,w,x,y,A);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=y+4|0;I=y+8|0;J=x+4|0;K=x+8|0;L=(h&512|0)!=0;h=w+4|0;M=w+8|0;N=z+4|0;O=z+8|0;P=s+3|0;Q=v+4|0;R=172;S=o;T=o;o=r+400|0;r=0;U=0;a:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W){$=V;break}else{aa=R;ba=S;ca=T;da=U;Z=302;break a}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ba=S;ca=T;da=U;Z=302;break}else{$=0}}b:do{switch(a[s+r|0]|0){case 1:{if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){ea=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{ea=c[X>>2]|0}if(!(Cc[c[(c[e>>2]|0)+12>>2]&63](l,8192,ea)|0)){Z=41;break a}X=c[f>>2]|0;V=X+12|0;fa=c[V>>2]|0;if((fa|0)==(c[X+16>>2]|0)){ga=Ec[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[V>>2]=fa+4;ga=c[fa>>2]|0}Lh(z,ga);Z=42;break};case 0:{Z=42;break};case 3:{fa=a[E]|0;V=(fa&1)==0;if(V){ha=(fa&255)>>>1}else{ha=c[J>>2]|0}X=a[F]|0;ia=(X&1)==0;if(ia){ja=(X&255)>>>1}else{ja=c[H>>2]|0}if((ha|0)==(-ja|0)){ka=U;la=o;ma=T;na=S;oa=R;break b}if(V){pa=(fa&255)>>>1}else{pa=c[J>>2]|0}do{if((pa|0)!=0){if(ia){qa=(X&255)>>>1}else{qa=c[H>>2]|0}if((qa|0)==0){break}ra=c[f>>2]|0;sa=c[ra+12>>2]|0;if((sa|0)==(c[ra+16>>2]|0)){ta=Ec[c[(c[ra>>2]|0)+36>>2]&255](ra)|0;ua=ta;va=a[E]|0}else{ua=c[sa>>2]|0;va=fa}sa=c[f>>2]|0;ta=sa+12|0;ra=c[ta>>2]|0;wa=(ra|0)==(c[sa+16>>2]|0);if((ua|0)==(c[((va&1)==0?J:c[K>>2]|0)>>2]|0)){if(wa){Ec[c[(c[sa>>2]|0)+40>>2]&255](sa)|0}else{c[ta>>2]=ra+4}ta=a[E]|0;if((ta&1)==0){xa=(ta&255)>>>1}else{xa=c[J>>2]|0}ka=xa>>>0>1>>>0?x:U;la=o;ma=T;na=S;oa=R;break b}if(wa){ya=Ec[c[(c[sa>>2]|0)+36>>2]&255](sa)|0}else{ya=c[ra>>2]|0}if((ya|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=134;break a}ra=c[f>>2]|0;sa=ra+12|0;wa=c[sa>>2]|0;if((wa|0)==(c[ra+16>>2]|0)){Ec[c[(c[ra>>2]|0)+40>>2]&255](ra)|0}else{c[sa>>2]=wa+4}a[k]=1;wa=a[F]|0;if((wa&1)==0){za=(wa&255)>>>1}else{za=c[H>>2]|0}ka=za>>>0>1>>>0?y:U;la=o;ma=T;na=S;oa=R;break b}}while(0);if(V){Aa=(fa&255)>>>1}else{Aa=c[J>>2]|0}ia=c[f>>2]|0;wa=c[ia+12>>2]|0;sa=(wa|0)==(c[ia+16>>2]|0);if((Aa|0)==0){if(sa){ra=Ec[c[(c[ia>>2]|0)+36>>2]&255](ia)|0;Ba=ra;Ca=a[F]|0}else{Ba=c[wa>>2]|0;Ca=X}if((Ba|0)!=(c[((Ca&1)==0?H:c[I>>2]|0)>>2]|0)){ka=U;la=o;ma=T;na=S;oa=R;break b}ra=c[f>>2]|0;ta=ra+12|0;Da=c[ta>>2]|0;if((Da|0)==(c[ra+16>>2]|0)){Ec[c[(c[ra>>2]|0)+40>>2]&255](ra)|0}else{c[ta>>2]=Da+4}a[k]=1;Da=a[F]|0;if((Da&1)==0){Ea=(Da&255)>>>1}else{Ea=c[H>>2]|0}ka=Ea>>>0>1>>>0?y:U;la=o;ma=T;na=S;oa=R;break b}if(sa){sa=Ec[c[(c[ia>>2]|0)+36>>2]&255](ia)|0;Fa=sa;Ga=a[E]|0}else{Fa=c[wa>>2]|0;Ga=fa}if((Fa|0)!=(c[((Ga&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ka=U;la=o;ma=T;na=S;oa=R;break b}wa=c[f>>2]|0;sa=wa+12|0;ia=c[sa>>2]|0;if((ia|0)==(c[wa+16>>2]|0)){Ec[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[sa>>2]=ia+4}ia=a[E]|0;if((ia&1)==0){Ha=(ia&255)>>>1}else{Ha=c[J>>2]|0}ka=Ha>>>0>1>>>0?x:U;la=o;ma=T;na=S;oa=R;break};case 2:{if(!((U|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Ia=(a[P]|0)!=0}else{Ia=0}if(!(L|Ia)){ka=0;la=o;ma=T;na=S;oa=R;break b}}ia=a[D]|0;sa=(ia&1)==0?h:c[M>>2]|0;c:do{if((r|0)==0){Ja=sa;Ka=ia;La=$;Ma=$}else{if((d[s+(r-1)|0]|0)>>>0<2>>>0){Na=sa;Oa=ia}else{Ja=sa;Ka=ia;La=$;Ma=$;break}while(1){if((Oa&1)==0){Pa=(Oa&255)>>>1;Qa=h}else{Pa=c[h>>2]|0;Qa=c[M>>2]|0}if((Na|0)==(Qa+(Pa<<2)|0)){Ra=Oa;break}if(!(Cc[c[(c[e>>2]|0)+12>>2]&63](l,8192,c[Na>>2]|0)|0)){Z=148;break}Na=Na+4|0;Oa=a[D]|0}if((Z|0)==148){Z=0;Ra=a[D]|0}wa=(Ra&1)==0;Da=Na-(wa?h:c[M>>2]|0)>>2;ta=a[G]|0;ra=(ta&1)==0;if(ra){Sa=(ta&255)>>>1}else{Sa=c[N>>2]|0}d:do{if(!(Da>>>0>Sa>>>0)){if(ra){Ta=(ta&255)>>>1;Ua=N;Va=N+(((ta&255)>>>1)-Da<<2)|0}else{Wa=c[O>>2]|0;Xa=c[N>>2]|0;Ta=Xa;Ua=Wa;Va=Wa+(Xa-Da<<2)|0}Xa=Ua+(Ta<<2)|0;if((Va|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}else{Ya=Va;Za=wa?h:c[M>>2]|0}while(1){if((c[Ya>>2]|0)!=(c[Za>>2]|0)){break d}Wa=Ya+4|0;if((Wa|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}Ya=Wa;Za=Za+4|0}}}while(0);Ja=wa?h:c[M>>2]|0;Ka=Ra;La=$;Ma=$}}while(0);e:while(1){if((Ka&1)==0){_a=(Ka&255)>>>1;$a=h}else{_a=c[h>>2]|0;$a=c[M>>2]|0}if((Ja|0)==($a+(_a<<2)|0)){break}ia=c[f>>2]|0;do{if((ia|0)==0){ab=1}else{sa=c[ia+12>>2]|0;if((sa|0)==(c[ia+16>>2]|0)){bb=Ec[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{bb=c[sa>>2]|0}if((bb|0)==-1){c[f>>2]=0;ab=1;break}else{ab=(c[f>>2]|0)==0;break}}}while(0);do{if((La|0)==0){cb=Ma;Z=178}else{ia=c[La+12>>2]|0;if((ia|0)==(c[La+16>>2]|0)){db=Ec[c[(c[La>>2]|0)+36>>2]&255](La)|0}else{db=c[ia>>2]|0}if((db|0)==-1){c[b>>2]=0;cb=0;Z=178;break}else{if(ab^(Ma|0)==0){eb=Ma;fb=Ma;break}else{break e}}}}while(0);if((Z|0)==178){Z=0;if(ab){break}else{eb=0;fb=cb}}ia=c[f>>2]|0;wa=c[ia+12>>2]|0;if((wa|0)==(c[ia+16>>2]|0)){gb=Ec[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{gb=c[wa>>2]|0}if((gb|0)!=(c[Ja>>2]|0)){break}wa=c[f>>2]|0;ia=wa+12|0;sa=c[ia>>2]|0;if((sa|0)==(c[wa+16>>2]|0)){Ec[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[ia>>2]=sa+4}Ja=Ja+4|0;Ka=a[D]|0;La=eb;Ma=fb}if(!L){ka=U;la=o;ma=T;na=S;oa=R;break b}sa=a[D]|0;if((sa&1)==0){hb=(sa&255)>>>1;ib=h}else{hb=c[h>>2]|0;ib=c[M>>2]|0}if((Ja|0)==(ib+(hb<<2)|0)){ka=U;la=o;ma=T;na=S;oa=R}else{Z=193;break a}break};case 4:{sa=0;ia=o;wa=T;fa=S;X=R;f:while(1){V=c[f>>2]|0;do{if((V|0)==0){jb=1}else{Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){kb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{kb=c[Da>>2]|0}if((kb|0)==-1){c[f>>2]=0;jb=1;break}else{jb=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=207}else{Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){lb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{lb=c[Da>>2]|0}if((lb|0)==-1){c[b>>2]=0;Z=207;break}else{if(jb){break}else{break f}}}}while(0);if((Z|0)==207){Z=0;if(jb){break}}V=c[f>>2]|0;Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){mb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{mb=c[Da>>2]|0}if(Cc[c[(c[e>>2]|0)+12>>2]&63](l,2048,mb)|0){Da=c[n>>2]|0;if((Da|0)==(c[q>>2]|0)){ym(m,n,q);nb=c[n>>2]|0}else{nb=Da}c[n>>2]=nb+4;c[nb>>2]=mb;ob=sa+1|0;pb=ia;qb=wa;rb=fa;sb=X}else{Da=a[C]|0;if((Da&1)==0){tb=(Da&255)>>>1}else{tb=c[Q>>2]|0}if((tb|0)==0|(sa|0)==0){break}if((mb|0)!=(c[u>>2]|0)){break}if((wa|0)==(ia|0)){Da=(X|0)!=172;V=wa-fa|0;ta=V>>>0<2147483647>>>0?V<<1:-1;if(Da){ub=fa}else{ub=0}Da=Wp(ub,ta)|0;ra=Da;if((Da|0)==0){hq()}vb=ra+(ta>>>2<<2)|0;wb=ra+(V>>2<<2)|0;xb=ra;yb=84}else{vb=ia;wb=wa;xb=fa;yb=X}c[wb>>2]=sa;ob=0;pb=vb;qb=wb+4|0;rb=xb;sb=yb}ra=c[f>>2]|0;V=ra+12|0;ta=c[V>>2]|0;if((ta|0)==(c[ra+16>>2]|0)){Ec[c[(c[ra>>2]|0)+40>>2]&255](ra)|0;sa=ob;ia=pb;wa=qb;fa=rb;X=sb;continue}else{c[V>>2]=ta+4;sa=ob;ia=pb;wa=qb;fa=rb;X=sb;continue}}if((fa|0)==(wa|0)|(sa|0)==0){zb=ia;Ab=wa;Bb=fa;Cb=X}else{if((wa|0)==(ia|0)){ta=(X|0)!=172;V=wa-fa|0;ra=V>>>0<2147483647>>>0?V<<1:-1;if(ta){Db=fa}else{Db=0}ta=Wp(Db,ra)|0;Da=ta;if((ta|0)==0){hq()}Eb=Da+(ra>>>2<<2)|0;Fb=Da+(V>>2<<2)|0;Gb=Da;Hb=84}else{Eb=ia;Fb=wa;Gb=fa;Hb=X}c[Fb>>2]=sa;zb=Eb;Ab=Fb+4|0;Bb=Gb;Cb=Hb}Da=c[A>>2]|0;if((Da|0)>0){V=c[f>>2]|0;do{if((V|0)==0){Ib=1}else{ra=c[V+12>>2]|0;if((ra|0)==(c[V+16>>2]|0)){Jb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Jb=c[ra>>2]|0}if((Jb|0)==-1){c[f>>2]=0;Ib=1;break}else{Ib=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=259}else{sa=c[V+12>>2]|0;if((sa|0)==(c[V+16>>2]|0)){Kb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Kb=c[sa>>2]|0}if((Kb|0)==-1){c[b>>2]=0;Z=259;break}else{if(Ib){Lb=V;break}else{Z=265;break a}}}}while(0);if((Z|0)==259){Z=0;if(Ib){Z=265;break a}else{Lb=0}}V=c[f>>2]|0;sa=c[V+12>>2]|0;if((sa|0)==(c[V+16>>2]|0)){Mb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Mb=c[sa>>2]|0}if((Mb|0)!=(c[t>>2]|0)){Z=265;break a}sa=c[f>>2]|0;V=sa+12|0;X=c[V>>2]|0;if((X|0)==(c[sa+16>>2]|0)){Ec[c[(c[sa>>2]|0)+40>>2]&255](sa)|0;Nb=Lb;Ob=Da;Pb=Lb}else{c[V>>2]=X+4;Nb=Lb;Ob=Da;Pb=Lb}while(1){X=c[f>>2]|0;do{if((X|0)==0){Qb=1}else{V=c[X+12>>2]|0;if((V|0)==(c[X+16>>2]|0)){Rb=Ec[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Rb=c[V>>2]|0}if((Rb|0)==-1){c[f>>2]=0;Qb=1;break}else{Qb=(c[f>>2]|0)==0;break}}}while(0);do{if((Nb|0)==0){Sb=Pb;Z=282}else{X=c[Nb+12>>2]|0;if((X|0)==(c[Nb+16>>2]|0)){Tb=Ec[c[(c[Nb>>2]|0)+36>>2]&255](Nb)|0}else{Tb=c[X>>2]|0}if((Tb|0)==-1){c[b>>2]=0;Sb=0;Z=282;break}else{if(Qb^(Pb|0)==0){Ub=Pb;Vb=Pb;break}else{Z=289;break a}}}}while(0);if((Z|0)==282){Z=0;if(Qb){Z=289;break a}else{Ub=Sb;Vb=0}}X=c[f>>2]|0;V=c[X+12>>2]|0;if((V|0)==(c[X+16>>2]|0)){Wb=Ec[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Wb=c[V>>2]|0}if(!(Cc[c[(c[e>>2]|0)+12>>2]&63](l,2048,Wb)|0)){Z=289;break a}if((c[n>>2]|0)==(c[q>>2]|0)){ym(m,n,q)}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Xb=Ec[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Xb=c[X>>2]|0}X=c[n>>2]|0;c[n>>2]=X+4;c[X>>2]=Xb;X=Ob-1|0;c[A>>2]=X;V=c[f>>2]|0;sa=V+12|0;fa=c[sa>>2]|0;if((fa|0)==(c[V+16>>2]|0)){Ec[c[(c[V>>2]|0)+40>>2]&255](V)|0}else{c[sa>>2]=fa+4}if((X|0)>0){Nb=Vb;Ob=X;Pb=Ub}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=300;break a}else{ka=U;la=zb;ma=Ab;na=Bb;oa=Cb}break};default:{ka=U;la=o;ma=T;na=S;oa=R}}}while(0);g:do{if((Z|0)==42){Z=0;if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}else{Yb=$;Zb=$}while(1){Da=c[f>>2]|0;do{if((Da|0)==0){_b=1}else{X=c[Da+12>>2]|0;if((X|0)==(c[Da+16>>2]|0)){$b=Ec[c[(c[Da>>2]|0)+36>>2]&255](Da)|0}else{$b=c[X>>2]|0}if(($b|0)==-1){c[f>>2]=0;_b=1;break}else{_b=(c[f>>2]|0)==0;break}}}while(0);do{if((Yb|0)==0){ac=Zb;Z=56}else{Da=c[Yb+12>>2]|0;if((Da|0)==(c[Yb+16>>2]|0)){bc=Ec[c[(c[Yb>>2]|0)+36>>2]&255](Yb)|0}else{bc=c[Da>>2]|0}if((bc|0)==-1){c[b>>2]=0;ac=0;Z=56;break}else{if(_b^(Zb|0)==0){cc=Zb;dc=Zb;break}else{ka=U;la=o;ma=T;na=S;oa=R;break g}}}}while(0);if((Z|0)==56){Z=0;if(_b){ka=U;la=o;ma=T;na=S;oa=R;break g}else{cc=0;dc=ac}}Da=c[f>>2]|0;X=c[Da+12>>2]|0;if((X|0)==(c[Da+16>>2]|0)){ec=Ec[c[(c[Da>>2]|0)+36>>2]&255](Da)|0}else{ec=c[X>>2]|0}if(!(Cc[c[(c[e>>2]|0)+12>>2]&63](l,8192,ec)|0)){ka=U;la=o;ma=T;na=S;oa=R;break g}X=c[f>>2]|0;Da=X+12|0;fa=c[Da>>2]|0;if((fa|0)==(c[X+16>>2]|0)){fc=Ec[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[Da>>2]=fa+4;fc=c[fa>>2]|0}Lh(z,fc);Yb=cc;Zb=dc}}}while(0);fa=r+1|0;if(fa>>>0<4>>>0){R=oa;S=na;T=ma;o=la;r=fa;U=ka}else{aa=oa;ba=na;ca=ma;da=ka;Z=302;break}}h:do{if((Z|0)==41){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==134){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==193){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==265){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==289){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==300){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==302){i:do{if((da|0)!=0){ka=da;ma=da+4|0;na=da+8|0;oa=1;j:while(1){U=a[ka]|0;if((U&1)==0){jc=(U&255)>>>1}else{jc=c[ma>>2]|0}if(!(oa>>>0<jc>>>0)){break i}U=c[f>>2]|0;do{if((U|0)==0){kc=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){lc=Ec[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{lc=c[r>>2]|0}if((lc|0)==-1){c[f>>2]=0;kc=1;break}else{kc=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=321}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){mc=Ec[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{mc=c[r>>2]|0}if((mc|0)==-1){c[b>>2]=0;Z=321;break}else{if(kc){break}else{break j}}}}while(0);if((Z|0)==321){Z=0;if(kc){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){nc=Ec[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{nc=c[r>>2]|0}if((a[ka]&1)==0){oc=ma}else{oc=c[na>>2]|0}if((nc|0)!=(c[oc+(oa<<2)>>2]|0)){break}r=oa+1|0;U=c[f>>2]|0;la=U+12|0;o=c[la>>2]|0;if((o|0)==(c[U+16>>2]|0)){Ec[c[(c[U>>2]|0)+40>>2]&255](U)|0;oa=r;continue}else{c[la>>2]=o+4;oa=r;continue}}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa;break h}}while(0);if((ba|0)==(ca|0)){gc=1;hc=ca;ic=aa;break}c[B>>2]=0;qm(v,ba,ca,B);if((c[B>>2]|0)==0){gc=1;hc=ba;ic=aa;break}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa}}while(0);Hh(z);Hh(y);Hh(x);Hh(w);vh(v);if((hc|0)==0){i=p;return gc|0}zc[ic&511](hc);i=p;return gc|0}function vm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=172;u=m+400|0;Qh(p,h);m=p|0;v=c[m>>2]|0;if(!((c[7224]|0)==-1)){c[l>>2]=28896;c[l+4>>2]=14;c[l+8>>2]=0;qh(28896,l,102)}l=(c[7225]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(um(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){Lh(k,Bc[c[(c[B>>2]|0)+44>>2]&63](y,45)|0)}x=Bc[c[(c[B>>2]|0)+44>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}wm(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=1}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{F=c[E>>2]|0}if((F|0)==-1){c[x>>2]=0;D=1;break}else{D=(c[x>>2]|0)==0;break}}}while(0);do{if((A|0)==0){G=35}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=35;break}else{if(D){break}else{G=37;break}}}}while(0);if((G|0)==35){if(D){G=37}}if((G|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[x>>2];Yg(c[m>>2]|0)|0;z=c[s>>2]|0;c[s>>2]=0;if((z|0)==0){i=d;return}zc[c[t>>2]&511](z);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=1;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g>>2;if((h|0)==0){return b|0}if((i-k|0)>>>0<h>>>0){Nh(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}l=m+(k<<2)|0;if((d|0)==(e|0)){n=l}else{j=k+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=l;while(1){c[d>>2]=c[g>>2];l=g+4|0;if((l|0)==(e|0)){break}else{g=l;d=d+4|0}}n=m+(j<<2)|0}c[n>>2]=0;n=k+h|0;if((a[f]&1)==0){a[f]=n<<1;return b|0}else{c[b+4>>2]=n;return b|0}return 0}



function bj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){rh(b)}if(g>>>0<11>>>0){a[b]=g<<1;h=b+1|0}else{i=g+16&-16;j=$p(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}else{l=h;m=e}while(1){a[l]=a[m]|0;e=m+1|0;if((e|0)==(f|0)){break}else{l=l+1|0;m=e}}k=h+(f+(-d|0))|0;a[k]=0;return}function cj(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function dj(a){a=a|0;Wg(a|0);bq(a);return}function ej(a){a=a|0;Wg(a|0);return}function fj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=7;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=7;break}if((l|0)<(k|0)){i=1;j=7;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break a}else{a=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function gj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){rh(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=$p(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=f-4+(-d|0)|0;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+((j>>>2)+1<<2)|0;c[k>>2]=0;return}function hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function ij(a){a=a|0;Wg(a|0);bq(a);return}function jj(a){a=a|0;Wg(a|0);return}function kj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];yc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}Qh(r,g);q=r|0;r=c[q>>2]|0;if(!((c[7226]|0)==-1)){c[m>>2]=28904;c[m+4>>2]=14;c[m+8>>2]=0;qh(28904,m,102)}m=(c[7227]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;Yg(c[q>>2]|0)|0;Qh(s,g);n=s|0;p=c[n>>2]|0;if(!((c[7130]|0)==-1)){c[l>>2]=28520;c[l+4>>2]=14;c[l+8>>2]=0;qh(28520,l,102)}d=(c[7131]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;Yg(c[n>>2]|0)|0;z=t|0;A=x;Ac[c[(c[A>>2]|0)+24>>2]&127](z,y);Ac[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(lj(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];vh(t+12|0);vh(t|0);i=k;return}}while(0);o=oc(4)|0;zp(o);Fb(o|0,22832,140)}}while(0);k=oc(4)|0;zp(k);Fb(k|0,22832,140)}function lj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=Up(l)|0;if((n|0)!=0){o=n;p=n;break}hq();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=0}else{if((c[q+12>>2]|0)!=(c[q+16>>2]|0)){y=q;break}if((Ec[c[(c[q>>2]|0)+36>>2]&255](q)|0)==-1){c[t>>2]=0;y=0;break}else{y=c[t>>2]|0;break}}}while(0);q=(y|0)==0;l=c[b>>2]|0;do{if((l|0)==0){z=0}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){z=l;break}if(!((Ec[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){z=l;break}c[b>>2]=0;z=0}}while(0);A=(z|0)==0;B=c[t>>2]|0;if(!((q^A)&(r|0)!=0)){break}l=c[B+12>>2]|0;if((l|0)==(c[B+16>>2]|0)){C=(Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[l]|0}if(j){D=C}else{D=Bc[c[(c[d>>2]|0)+12>>2]&63](g,C)|0}l=s+1|0;if(m){s=l;w=w;r=r;continue}b:do{if(j){x=r;n=w;v=o;u=0;E=e;while(1){do{if((a[v]|0)==1){F=a[E]|0;G=(F&1)==0;if(G){H=E+1|0}else{H=c[E+8>>2]|0}if(!(D<<24>>24==(a[H+s|0]|0))){a[v]=0;I=u;J=n;K=x-1|0;break}if(G){L=(F&255)>>>1}else{L=c[E+4>>2]|0}if((L|0)!=(l|0)){I=1;J=n;K=x;break}a[v]=2;I=1;J=n+1|0;K=x-1|0}else{I=u;J=n;K=x}}while(0);F=E+12|0;if((F|0)==(f|0)){M=K;N=J;O=I;break b}x=K;n=J;v=v+1|0;u=I;E=F}}else{E=r;u=w;v=o;n=0;x=e;while(1){do{if((a[v]|0)==1){F=x;if((a[F]&1)==0){P=x+1|0}else{P=c[x+8>>2]|0}if(!(D<<24>>24==(Bc[c[(c[d>>2]|0)+12>>2]&63](g,a[P+s|0]|0)|0)<<24>>24)){a[v]=0;Q=n;R=u;S=E-1|0;break}G=a[F]|0;if((G&1)==0){T=(G&255)>>>1}else{T=c[x+4>>2]|0}if((T|0)!=(l|0)){Q=1;R=u;S=E;break}a[v]=2;Q=1;R=u+1|0;S=E-1|0}else{Q=n;R=u;S=E}}while(0);G=x+12|0;if((G|0)==(f|0)){M=S;N=R;O=Q;break b}E=S;u=R;v=v+1|0;n=Q;x=G}}}while(0);if(!O){s=l;w=N;r=M;continue}q=c[t>>2]|0;x=q+12|0;n=c[x>>2]|0;if((n|0)==(c[q+16>>2]|0)){Ec[c[(c[q>>2]|0)+40>>2]&255](q)|0}else{c[x>>2]=n+1}if((M+N|0)>>>0<2>>>0){s=l;w=N;r=M;continue}else{U=N;V=o;W=e}while(1){do{if((a[V]|0)==2){n=a[W]|0;if((n&1)==0){X=(n&255)>>>1}else{X=c[W+4>>2]|0}if((X|0)==(l|0)){Y=U;break}a[V]=0;Y=U-1|0}else{Y=U}}while(0);n=W+12|0;if((n|0)==(f|0)){s=l;w=Y;r=M;continue a}else{U=Y;V=V+1|0;W=n}}}do{if((B|0)==0){Z=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){Z=B;break}if((Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[t>>2]=0;Z=0;break}else{Z=c[t>>2]|0;break}}}while(0);t=(Z|0)==0;do{if(A){_=91}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(t){break}else{_=93;break}}if((Ec[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[b>>2]=0;_=91;break}else{if(t){break}else{_=93;break}}}}while(0);if((_|0)==91){if(t){_=93}}if((_|0)==93){c[h>>2]=c[h>>2]|2}c:do{if(m){_=98}else{t=o;b=e;while(1){if((a[t]|0)==2){$=b;break c}z=b+12|0;if((z|0)==(f|0)){_=98;break c}t=t+1|0;b=z}}}while(0);if((_|0)==98){c[h>>2]=c[h>>2]|4;$=f}if((p|0)==0){i=k;return $|0}Vp(p);i=k;return $|0}function mj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];nj(a,0,j,k,f,g,h);i=b;return}function nj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;dk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}yh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}yh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Fj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Ec[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=bp(F,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}if((Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}function oj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];pj(a,0,j,k,f,g,h);i=b;return}function pj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;dk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}yh(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}yh(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Fj(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Ec[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=ap(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;qm(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}if((Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}function qj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];rj(a,0,j,k,f,g,h);i=b;return}function rj(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+256|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==64){u=8}else if((t|0)==0){u=0}else{u=10}t=l|0;dk(n,h,t,m);h=o;tq(h|0,0,12)|0;yh(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=0}else{if((c[v+12>>2]|0)!=(c[v+16>>2]|0)){B=v;break}if(!((Ec[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){B=v;break}c[y>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;break}else{G=m;H=D;break a}}if((Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=21;break}else{if(C){F=D;break}else{G=m;H=D;break a}}}}while(0);if((E|0)==21){E=0;if(C){G=m;H=0;break}else{F=0}}D=a[h]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[z>>2]|0;K=D;L=D}yh(o,K<<1,0);if((a[h]&1)==0){M=10}else{M=(c[g>>2]&-2)-1|0}yh(o,M,0);if((a[h]&1)==0){N=w}else{N=c[x>>2]|0}c[p>>2]=N+L;O=N}else{O=m}D=B+12|0;I=c[D>>2]|0;P=B+16|0;if((I|0)==(c[P>>2]|0)){Q=(Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{Q=a[I]|0}if((Fj(Q,u,O,p,s,A,n,l,r,t)|0)!=0){G=O;H=F;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;m=O;v=B;continue}else{c[D>>2]=I+1;m=O;v=B;continue}}v=a[n]|0;if((v&1)==0){R=(v&255)>>>1}else{R=c[n+4>>2]|0}do{if((R|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}O=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=O}}while(0);b[k>>1]=$o(G,c[p>>2]|0,j,u)|0;qm(n,l,c[r>>2]|0,j);do{if((B|0)==0){S=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){S=B;break}if(!((Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){S=B;break}c[y>>2]=0;S=0}}while(0);y=(S|0)==0;do{if((H|0)==0){E=66}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){if(!y){break}T=d|0;c[T>>2]=S;vh(o);vh(n);i=e;return}if((Ec[c[(c[H>>2]|0)+36>>2]&255](H)|0)==-1){c[f>>2]=0;E=66;break}if(!(y^(H|0)==0)){break}T=d|0;c[T>>2]=S;vh(o);vh(n);i=e;return}}while(0);do{if((E|0)==66){if(y){break}T=d|0;c[T>>2]=S;vh(o);vh(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;T=d|0;c[T>>2]=S;vh(o);vh(n);i=e;return}function sj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];tj(a,0,j,k,f,g,h);i=b;return}function tj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;dk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}yh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}yh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Fj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Ec[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=_o(F,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}if((Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}function uj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];vj(a,0,j,k,f,g,h);i=b;return}function vj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;dk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}yh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}yh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Fj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){Ec[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=Zo(F,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}if((Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;vh(n);vh(m);i=d;return}function wj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];xj(a,0,j,k,f,g,h);i=b;return}function xj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;dk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}yh(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}yh(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Fj(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){Ec[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=Yo(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;qm(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}if((Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;vh(n);vh(m);i=d;return}function yj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];zj(a,0,j,k,f,g,h);i=b;return}function zj(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;ek(n,h,v,l,m);h=o;tq(h|0,0,12)|0;yh(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[h]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}yh(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}yh(o,O,0);if((a[h]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((fk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ec[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);g[k>>2]=+Xo(I,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}if((Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}function Aj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Bj(a,0,j,k,f,g,h);i=b;return}function Bj(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;ek(n,g,v,l,m);g=o;tq(g|0,0,12)|0;yh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}yh(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}yh(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((fk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ec[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+Wo(I,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}if((Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}function Cj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Dj(a,0,j,k,f,g,h);i=b;return}function Dj(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;ek(n,g,v,l,m);g=o;tq(g|0,0,12)|0;yh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}yh(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}yh(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((fk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){Ec[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+Vo(I,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}if((Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;vh(o);vh(n);i=d;return}function Ej(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+272|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+48|0;n=d+64|0;o=d+72|0;p=d+88|0;q=d+96|0;r=d+256|0;s=d+264|0;tq(m|0,0,12)|0;Qh(n,g);g=n|0;n=c[g>>2]|0;if(!((c[7226]|0)==-1)){c[k>>2]=28904;c[k+4>>2]=14;c[k+8>>2]=0;qh(28904,k,102)}k=(c[7227]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Mc[c[(c[u>>2]|0)+32>>2]&15](u,24448,24474,v)|0;Yg(c[g>>2]|0)|0;u=o;tq(u|0,0,12)|0;yh(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){G=F;break}if(!((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){G=F;break}c[A>>2]=0;G=0}}while(0);H=(G|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=25}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){break}else{K=E;break a}}if((Ec[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[B>>2]=0;J=25;break}else{if(H){break}else{K=E;break a}}}}while(0);if((J|0)==25){J=0;if(H){K=E;break}}I=a[u]|0;L=(I&1)==0;if(L){M=(I&255)>>>1}else{M=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(M|0)){if(L){N=(I&255)>>>1;O=(I&255)>>>1}else{I=c[D>>2]|0;N=I;O=I}yh(o,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[C>>2]&-2)-1|0}yh(o,P,0);if((a[u]&1)==0){Q=y}else{Q=c[z>>2]|0}c[p>>2]=Q+O;R=Q}else{R=E}I=G+12|0;L=c[I>>2]|0;S=G+16|0;if((L|0)==(c[S>>2]|0)){T=(Ec[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{T=a[L]|0}if((Fj(T,16,R,p,s,0,m,w,r,v)|0)!=0){K=R;break}L=c[I>>2]|0;if((L|0)==(c[S>>2]|0)){Ec[c[(c[G>>2]|0)+40>>2]&255](G)|0;E=R;F=G;continue}else{c[I>>2]=L+1;E=R;F=G;continue}}a[K+3|0]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);F=Gj(K,c[6868]|0,5976,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){U=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){U=F;break}if(!((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){U=F;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;F=c[B>>2]|0;do{if((F|0)==0){J=73}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;vh(o);vh(m);i=d;return}if((Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[B>>2]=0;J=73;break}if(!(A^(F|0)==0)){break}V=b|0;c[V>>2]=U;vh(o);vh(m);i=d;return}}while(0);do{if((J|0)==73){if(A){break}V=b|0;c[V>>2]=U;vh(o);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;V=b|0;c[V>>2]=U;vh(o);vh(m);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Fj(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(a[l+24|0]|0)==b<<24>>24;if(!o){if(!((a[l+25|0]|0)==b<<24>>24)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&b<<24>>24==h<<24>>24){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+26|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((a[h]|0)==b<<24>>24){r=h;break}else{h=h+1|0}}h=r-l|0;if((h|0)>23){p=-1;return p|0}do{if((d|0)==16){if((h|0)<22){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;l=a[24448+h|0]|0;c[f>>2]=m+1;a[m]=l;p=0;return p|0}else if((d|0)==8|(d|0)==10){if((h|0)<(d|0)){break}else{p=-1}return p|0}}while(0);d=a[24448+h|0]|0;c[f>>2]=m+1;a[m]=d;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function Gj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=_b(b|0)|0;b=_a(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}_b(h|0)|0;i=f;return b|0}function Hj(a){a=a|0;Wg(a|0);bq(a);return}function Ij(a){a=a|0;Wg(a|0);return}function Jj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];yc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}Qh(r,g);q=r|0;r=c[q>>2]|0;if(!((c[7224]|0)==-1)){c[m>>2]=28896;c[m+4>>2]=14;c[m+8>>2]=0;qh(28896,m,102)}m=(c[7225]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;Yg(c[q>>2]|0)|0;Qh(s,g);n=s|0;p=c[n>>2]|0;if(!((c[7128]|0)==-1)){c[l>>2]=28512;c[l+4>>2]=14;c[l+8>>2]=0;qh(28512,l,102)}d=(c[7129]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;Yg(c[n>>2]|0)|0;z=t|0;A=x;Ac[c[(c[A>>2]|0)+24>>2]&127](z,y);Ac[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(Kj(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Hh(t+12|0);Hh(t|0);i=k;return}}while(0);o=oc(4)|0;zp(o);Fb(o|0,22832,140)}}while(0);k=oc(4)|0;zp(k);Fb(k|0,22832,140)}function Kj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=Up(l)|0;if((n|0)!=0){o=n;p=n;break}hq();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=1}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){z=Ec[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{z=c[l>>2]|0}if((z|0)==-1){c[t>>2]=0;y=1;break}else{y=(c[t>>2]|0)==0;break}}}while(0);q=c[b>>2]|0;do{if((q|0)==0){A=1;B=0}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){C=Ec[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{C=c[l>>2]|0}if(!((C|0)==-1)){A=0;B=q;break}c[b>>2]=0;A=1;B=0}}while(0);D=c[t>>2]|0;if(!((y^A)&(r|0)!=0)){break}q=c[D+12>>2]|0;if((q|0)==(c[D+16>>2]|0)){E=Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{E=c[q>>2]|0}if(j){F=E}else{F=Bc[c[(c[d>>2]|0)+28>>2]&63](g,E)|0}q=s+1|0;if(m){s=q;w=w;r=r;continue}b:do{if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){G=a[u]|0;H=(G&1)==0;if(H){I=u+4|0}else{I=c[u+8>>2]|0}if((F|0)!=(c[I+(s<<2)>>2]|0)){a[n]=0;J=v;K=x;L=l-1|0;break}if(H){M=(G&255)>>>1}else{M=c[u+4>>2]|0}if((M|0)!=(q|0)){J=1;K=x;L=l;break}a[n]=2;J=1;K=x+1|0;L=l-1|0}else{J=v;K=x;L=l}}while(0);G=u+12|0;if((G|0)==(f|0)){N=L;O=K;P=J;break b}l=L;x=K;n=n+1|0;v=J;u=G}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){G=l;if((a[G]&1)==0){Q=l+4|0}else{Q=c[l+8>>2]|0}if((F|0)!=(Bc[c[(c[d>>2]|0)+28>>2]&63](g,c[Q+(s<<2)>>2]|0)|0)){a[n]=0;R=x;S=v;T=u-1|0;break}H=a[G]|0;if((H&1)==0){U=(H&255)>>>1}else{U=c[l+4>>2]|0}if((U|0)!=(q|0)){R=1;S=v;T=u;break}a[n]=2;R=1;S=v+1|0;T=u-1|0}else{R=x;S=v;T=u}}while(0);H=l+12|0;if((H|0)==(f|0)){N=T;O=S;P=R;break b}u=T;v=S;n=n+1|0;x=R;l=H}}}while(0);if(!P){s=q;w=O;r=N;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){Ec[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+4}if((N+O|0)>>>0<2>>>0){s=q;w=O;r=N;continue}else{V=O;W=o;X=e}while(1){do{if((a[W]|0)==2){n=a[X]|0;if((n&1)==0){Y=(n&255)>>>1}else{Y=c[X+4>>2]|0}if((Y|0)==(q|0)){Z=V;break}a[W]=0;Z=V-1|0}else{Z=V}}while(0);n=X+12|0;if((n|0)==(f|0)){s=q;w=Z;r=N;continue a}else{V=Z;W=W+1|0;X=n}}}do{if((D|0)==0){_=1}else{X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){$=Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{$=c[X>>2]|0}if(($|0)==-1){c[t>>2]=0;_=1;break}else{_=(c[t>>2]|0)==0;break}}}while(0);do{if((B|0)==0){aa=93}else{t=c[B+12>>2]|0;if((t|0)==(c[B+16>>2]|0)){ba=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{ba=c[t>>2]|0}if((ba|0)==-1){c[b>>2]=0;aa=93;break}else{if(_){break}else{aa=95;break}}}}while(0);if((aa|0)==93){if(_){aa=95}}if((aa|0)==95){c[h>>2]=c[h>>2]|2}c:do{if(m){aa=100}else{_=o;b=e;while(1){if((a[_]|0)==2){ca=b;break c}ba=b+12|0;if((ba|0)==(f|0)){aa=100;break c}_=_+1|0;b=ba}}}while(0);if((aa|0)==100){c[h>>2]=c[h>>2]|4;ca=f}if((p|0)==0){i=k;return ca|0}Vp(p);i=k;return ca|0}function Lj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Mj(a,0,j,k,f,g,h);i=b;return}function Mj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;gk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}yh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}yh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((ck(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=bp(I,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}function Nj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Oj(a,0,j,k,f,g,h);i=b;return}function Oj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;gk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}yh(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}yh(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((ck(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=ap(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;qm(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}function Pj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Qj(a,0,j,k,f,g,h);i=b;return}function Qj(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+328|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==0){u=0}else if((t|0)==64){u=8}else{u=10}t=l|0;gk(n,h,t,m);h=o;tq(h|0,0,12)|0;yh(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=1;C=0}else{D=c[v+12>>2]|0;if((D|0)==(c[v+16>>2]|0)){E=Ec[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{E=c[D>>2]|0}if(!((E|0)==-1)){B=0;C=v;break}c[y>>2]=0;B=1;C=0}}while(0);D=c[f>>2]|0;do{if((D|0)==0){F=22}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){H=Ec[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{if(B){I=D;break}else{J=m;K=D;break a}}}}while(0);if((F|0)==22){F=0;if(B){J=m;K=0;break}else{I=0}}D=a[h]|0;G=(D&1)==0;if(G){L=(D&255)>>>1}else{L=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(G){M=(D&255)>>>1;N=(D&255)>>>1}else{D=c[z>>2]|0;M=D;N=D}yh(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}yh(o,O,0);if((a[h]&1)==0){P=w}else{P=c[x>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}D=C+12|0;G=c[D>>2]|0;R=C+16|0;if((G|0)==(c[R>>2]|0)){S=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{S=c[G>>2]|0}if((ck(S,u,Q,p,s,A,n,l,r,t)|0)!=0){J=Q;K=I;break}G=c[D>>2]|0;if((G|0)==(c[R>>2]|0)){Ec[c[(c[C>>2]|0)+40>>2]&255](C)|0;m=Q;v=C;continue}else{c[D>>2]=G+4;m=Q;v=C;continue}}v=a[n]|0;if((v&1)==0){T=(v&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=Q}}while(0);b[k>>1]=$o(J,c[p>>2]|0,j,u)|0;qm(n,l,c[r>>2]|0,j);do{if((C|0)==0){U=1;V=0}else{r=c[C+12>>2]|0;if((r|0)==(c[C+16>>2]|0)){W=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{W=c[r>>2]|0}if(!((W|0)==-1)){U=0;V=C;break}c[y>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){F=67}else{y=c[K+12>>2]|0;if((y|0)==(c[K+16>>2]|0)){X=Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[y>>2]|0}if((X|0)==-1){c[f>>2]=0;F=67;break}if(!U){break}Y=d|0;c[Y>>2]=V;vh(o);vh(n);i=e;return}}while(0);do{if((F|0)==67){if(U){break}Y=d|0;c[Y>>2]=V;vh(o);vh(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=d|0;c[Y>>2]=V;vh(o);vh(n);i=e;return}function Rj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Sj(a,0,j,k,f,g,h);i=b;return}function Sj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;gk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}yh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}yh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((ck(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=_o(I,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}function Tj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Uj(a,0,j,k,f,g,h);i=b;return}function Uj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;gk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}yh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}yh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((ck(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=Zo(I,c[o>>2]|0,h,t)|0;qm(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=Ec[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;vh(n);vh(m);i=d;return}function Vj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Wj(a,0,j,k,f,g,h);i=b;return}function Wj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;gk(m,g,s,l);g=n;tq(g|0,0,12)|0;yh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=Ec[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=Ec[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}yh(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}yh(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((ck(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){Ec[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=Yo(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;qm(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=Ec[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=Ec[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;vh(n);vh(m);i=d;return}function Xj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Yj(a,0,j,k,f,g,h);i=b;return}function Yj(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;hk(n,h,v,l,m);h=o;tq(h|0,0,12)|0;yh(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[h]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}yh(o,O<<1,0);if((a[h]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}yh(o,Q,0);if((a[h]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((ik(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Ec[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);g[k>>2]=+Xo(L,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Ec[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}function Zj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];_j(a,0,j,k,f,g,h);i=b;return}function _j(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;hk(n,g,v,l,m);g=o;tq(g|0,0,12)|0;yh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}yh(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}yh(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((ik(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Ec[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+Wo(L,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Ec[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}function $j(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ak(a,0,j,k,f,g,h);i=b;return}function ak(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;hk(n,g,v,l,m);g=o;tq(g|0,0,12)|0;yh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=Ec[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}yh(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}yh(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((ik(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){Ec[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+Vo(L,c[p>>2]|0,j);qm(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=Ec[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=Ec[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;vh(o);vh(n);i=d;return}function bk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+344|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+120|0;n=d+136|0;o=d+144|0;p=d+160|0;q=d+168|0;r=d+328|0;s=d+336|0;tq(m|0,0,12)|0;Qh(n,g);g=n|0;n=c[g>>2]|0;if(!((c[7224]|0)==-1)){c[k>>2]=28896;c[k+4>>2]=14;c[k+8>>2]=0;qh(28896,k,102)}k=(c[7225]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Mc[c[(c[u>>2]|0)+48>>2]&15](u,24448,24474,v)|0;Yg(c[g>>2]|0)|0;u=o;tq(u|0,0,12)|0;yh(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=1;H=0}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if(!((J|0)==-1)){G=0;H=F;break}c[A>>2]=0;G=1;H=0}}while(0);I=c[B>>2]|0;do{if((I|0)==0){K=26}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=Ec[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if((M|0)==-1){c[B>>2]=0;K=26;break}else{if(G){break}else{N=E;break a}}}}while(0);if((K|0)==26){K=0;if(G){N=E;break}}I=a[u]|0;L=(I&1)==0;if(L){O=(I&255)>>>1}else{O=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(O|0)){if(L){P=(I&255)>>>1;Q=(I&255)>>>1}else{I=c[D>>2]|0;P=I;Q=I}yh(o,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[C>>2]&-2)-1|0}yh(o,R,0);if((a[u]&1)==0){S=y}else{S=c[z>>2]|0}c[p>>2]=S+Q;T=S}else{T=E}I=H+12|0;L=c[I>>2]|0;U=H+16|0;if((L|0)==(c[U>>2]|0)){V=Ec[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[L>>2]|0}if((ck(V,16,T,p,s,0,m,w,r,v)|0)!=0){N=T;break}L=c[I>>2]|0;if((L|0)==(c[U>>2]|0)){Ec[c[(c[H>>2]|0)+40>>2]&255](H)|0;E=T;F=H;continue}else{c[I>>2]=L+4;E=T;F=H;continue}}a[N+3|0]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);F=Gj(N,c[6868]|0,5976,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){W=1;X=0}else{E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0)){Y=Ec[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{Y=c[E>>2]|0}if(!((Y|0)==-1)){W=0;X=F;break}c[A>>2]=0;W=1;X=0}}while(0);A=c[B>>2]|0;do{if((A|0)==0){K=74}else{F=c[A+12>>2]|0;if((F|0)==(c[A+16>>2]|0)){Z=Ec[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{Z=c[F>>2]|0}if((Z|0)==-1){c[B>>2]=0;K=74;break}if(!W){break}_=b|0;c[_>>2]=X;vh(o);vh(m);i=d;return}}while(0);do{if((K|0)==74){if(W){break}_=b|0;c[_>>2]=X;vh(o);vh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;_=b|0;c[_>>2]=X;vh(o);vh(m);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function ck(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(c[l+96>>2]|0)==(b|0);if(!o){if((c[l+100>>2]|0)!=(b|0)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&(b|0)==(h|0)){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+104|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((c[h>>2]|0)==(b|0)){r=h;break}else{h=h+4|0}}h=r-l|0;l=h>>2;if((h|0)>92){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((l|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<88){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;r=a[24448+l|0]|0;c[f>>2]=m+1;a[m]=r;p=0;return p|0}}while(0);e=a[24448+l|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function dk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;Qh(k,d);d=k|0;k=c[d>>2]|0;if(!((c[7226]|0)==-1)){c[j>>2]=28904;c[j+4>>2]=14;c[j+8>>2]=0;qh(28904,j,102)}j=(c[7227]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Mc[c[(c[m>>2]|0)+32>>2]&15](m,24448,24474,e)|0;m=c[d>>2]|0;if(!((c[7130]|0)==-1)){c[h>>2]=28520;c[h+4>>2]=14;c[h+8>>2]=0;qh(28520,h,102)}n=(c[7131]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=Ec[c[(c[p>>2]|0)+16>>2]&255](q)|0;Ac[c[(c[p>>2]|0)+20>>2]&127](b,q);Yg(c[d>>2]|0)|0;i=g;return}}while(0);n=oc(4)|0;zp(n);Fb(n|0,22832,140)}}while(0);g=oc(4)|0;zp(g);Fb(g|0,22832,140)}function ek(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;Qh(l,d);d=l|0;l=c[d>>2]|0;if(!((c[7226]|0)==-1)){c[k>>2]=28904;c[k+4>>2]=14;c[k+8>>2]=0;qh(28904,k,102)}k=(c[7227]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Mc[c[(c[n>>2]|0)+32>>2]&15](n,24448,24480,e)|0;n=c[d>>2]|0;if(!((c[7130]|0)==-1)){c[j>>2]=28520;c[j+4>>2]=14;c[j+8>>2]=0;qh(28520,j,102)}o=(c[7131]|0)-1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=Ec[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=Ec[c[(c[s>>2]|0)+16>>2]&255](r)|0;Ac[c[(c[q>>2]|0)+20>>2]&127](b,r);Yg(c[d>>2]|0)|0;i=h;return}}while(0);o=oc(4)|0;zp(o);Fb(o|0,22832,140)}}while(0);h=oc(4)|0;zp(h);Fb(h|0,22832,140)}function fk(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if(b<<24>>24==i<<24>>24){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+32|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((a[i]|0)==b<<24>>24){r=i;break}else{i=i+1|0}}i=r-n|0;if((i|0)>31){o=-1;return o|0}n=a[24448+i|0]|0;if((i|0)==22|(i|0)==23){a[e]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r]=n;o=0;return o|0}else if((i|0)==25|(i|0)==24){r=c[g>>2]|0;do{if((r|0)!=(f|0)){if((a[r-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=r+1;a[r]=n;o=0;return o|0}else{r=a[e]|0;do{if((n&95|0)==(r<<24>>24|0)){a[e]=r|-128;if((a[d]|0)==0){break}a[d]=0;f=a[j]|0;if((f&1)==0){s=(f&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}f=c[l>>2]|0;if((f-k|0)>=160){break}b=c[m>>2]|0;c[l>>2]=f+4;c[f>>2]=b}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=n;if((i|0)>21){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}return 0}function gk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;Qh(j,b);b=j|0;j=c[b>>2]|0;if(!((c[7224]|0)==-1)){c[h>>2]=28896;c[h+4>>2]=14;c[h+8>>2]=0;qh(28896,h,102)}h=(c[7225]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}Mc[c[(c[l>>2]|0)+48>>2]&15](l,24448,24474,d)|0;l=c[b>>2]|0;if(!((c[7128]|0)==-1)){c[g>>2]=28512;c[g+4>>2]=14;c[g+8>>2]=0;qh(28512,g,102)}m=(c[7129]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>m>>>0){o=c[n+(m<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=Ec[c[(c[o>>2]|0)+16>>2]&255](p)|0;Ac[c[(c[o>>2]|0)+20>>2]&127](a,p);Yg(c[b>>2]|0)|0;i=f;return}}while(0);m=oc(4)|0;zp(m);Fb(m|0,22832,140)}}while(0);f=oc(4)|0;zp(f);Fb(f|0,22832,140)}function hk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;Qh(k,b);b=k|0;k=c[b>>2]|0;if(!((c[7224]|0)==-1)){c[j>>2]=28896;c[j+4>>2]=14;c[j+8>>2]=0;qh(28896,j,102)}j=(c[7225]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Mc[c[(c[m>>2]|0)+48>>2]&15](m,24448,24480,d)|0;m=c[b>>2]|0;if(!((c[7128]|0)==-1)){c[h>>2]=28512;c[h+4>>2]=14;c[h+8>>2]=0;qh(28512,h,102)}n=(c[7129]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=Ec[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=Ec[c[(c[r>>2]|0)+16>>2]&255](q)|0;Ac[c[(c[p>>2]|0)+20>>2]&127](a,q);Yg(c[b>>2]|0)|0;i=g;return}}while(0);n=oc(4)|0;zp(n);Fb(n|0,22832,140)}}while(0);g=oc(4)|0;zp(g);Fb(g|0,22832,140)}function ik(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((b|0)==(h|0)){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if((b|0)==(i|0)){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+128|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((c[i>>2]|0)==(b|0)){r=i;break}else{i=i+4|0}}i=r-n|0;n=i>>2;if((i|0)>124){o=-1;return o|0}r=a[24448+n|0]|0;do{if((n|0)==22|(n|0)==23){a[e]=80}else if((n|0)==25|(n|0)==24){b=c[g>>2]|0;do{if((b|0)!=(f|0)){if((a[b-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=b+1;a[b]=r;o=0;return o|0}else{q=a[e]|0;if((r&95|0)!=(q<<24>>24|0)){break}a[e]=q|-128;if((a[d]|0)==0){break}a[d]=0;q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}q=c[l>>2]|0;if((q-k|0)>=160){break}p=c[m>>2]|0;c[l>>2]=q+4;c[q>>2]=p}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=r;if((i|0)>84){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}function jk(a){a=a|0;Wg(a|0);bq(a);return}function kk(a){a=a|0;Wg(a|0);return}function lk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Lc[o&63](b,d,l,f,g,h&1);i=j;return}Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7130]|0)==-1)){c[k>>2]=28520;c[k+4>>2]=14;c[k+8>>2]=0;qh(28520,k,102)}k=(c[7131]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;Yg(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Ac[c[o+24>>2]&127](n,d)}else{Ac[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+1|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+1|0;r=l}l=e|0;s=n+4|0;t=p;u=o;while(1){if((u&1)==0){v=(u&255)>>>1;w=q}else{v=c[s>>2]|0;w=c[r>>2]|0}if((t|0)==(w+v|0)){break}o=a[t]|0;x=c[l>>2]|0;do{if((x|0)!=0){y=x+24|0;z=c[y>>2]|0;if((z|0)!=(c[x+28>>2]|0)){c[y>>2]=z+1;a[z]=o;break}if(!((Bc[c[(c[x>>2]|0)+52>>2]&63](x,o&255)|0)==-1)){break}c[l>>2]=0}}while(0);t=t+1|0;u=a[d]|0}c[b>>2]=c[l>>2];vh(n);i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function mk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[16824]|0;a[q+1|0]=a[16825]|0;a[q+2|0]=a[16826]|0;a[q+3|0]=a[16827]|0;a[q+4|0]=a[16828]|0;a[q+5|0]=a[16829]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,12,c[6868]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;Qh(o,f);ok(u,w,q,x,m,n,o);Yg(c[o>>2]|0)|0;c[p>>2]=c[e>>2];hd(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function nk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=_b(d|0)|0;d=$b(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}_b(j|0)|0;i=g;return d|0}function ok(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7226]|0)==-1)){c[m>>2]=28904;c[m+4>>2]=14;c[m+8>>2]=0;qh(28904,m,102)}m=(c[7227]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}q=j;r=c[o>>2]|0;if(!((c[7130]|0)==-1)){c[l>>2]=28520;c[l+4>>2]=14;c[l+8>>2]=0;qh(28520,l,102)}l=(c[7131]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}s=r;Ac[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Mc[c[(c[j>>2]|0)+32>>2]&15](q,b,e,f)|0;c[h>>2]=f+(e-b)}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Bc[c[(c[j>>2]|0)+28>>2]&63](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;v=b+1|0}else{v=b}do{if((e-v|0)>1){if((a[v]|0)!=48){w=v;break}o=v+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){w=v;break}l=j;m=Bc[c[(c[l>>2]|0)+28>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=Bc[c[(c[l>>2]|0)+28>>2]&63](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o]=m;w=v+2|0}else{w=v}}while(0);do{if((w|0)!=(e|0)){m=e-1|0;if(m>>>0>w>>>0){x=w;y=m}else{break}do{m=a[x]|0;a[x]=a[y]|0;a[y]=m;x=x+1|0;y=y-1|0;}while(x>>>0<y>>>0)}}while(0);m=Ec[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;z=n+8|0;A=0;B=0;C=w;while(1){D=(a[t]&1)==0;do{if((a[(D?o:c[z>>2]|0)+B|0]|0)==0){E=B;F=A}else{if((A|0)!=(a[(D?o:c[z>>2]|0)+B|0]|0)){E=B;F=A;break}G=c[h>>2]|0;c[h>>2]=G+1;a[G]=m;G=a[t]|0;if((G&1)==0){H=(G&255)>>>1}else{H=c[p>>2]|0}E=(B>>>0<(H-1|0)>>>0)+B|0;F=0}}while(0);D=Bc[c[(c[l>>2]|0)+28>>2]&63](q,a[C]|0)|0;G=c[h>>2]|0;c[h>>2]=G+1;a[G]=D;D=C+1|0;if(D>>>0<e>>>0){A=F+1|0;B=E;C=D}else{break}}}C=f+(w-b)|0;B=c[h>>2]|0;if((C|0)==(B|0)){break}A=B-1|0;if(A>>>0>C>>>0){I=C;J=A}else{break}do{A=a[I]|0;a[I]=a[J]|0;a[J]=A;I=I+1|0;J=J-1|0;}while(I>>>0<J>>>0)}}while(0);if((d|0)==(e|0)){K=c[h>>2]|0;c[g>>2]=K;vh(n);i=k;return}else{K=f+(d-b)|0;c[g>>2]=K;vh(n);i=k;return}}function pk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,22,c[6868]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;Qh(p,f);ok(u,w,r,x,n,o,p);Yg(c[p>>2]|0)|0;c[q>>2]=c[e>>2];hd(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function qk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[16824]|0;a[q+1|0]=a[16825]|0;a[q+2|0]=a[16826]|0;a[q+3|0]=a[16827]|0;a[q+4|0]=a[16828]|0;a[q+5|0]=a[16829]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,12,c[6868]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;Qh(o,f);ok(u,w,q,x,m,n,o);Yg(c[o>>2]|0)|0;c[p>>2]=c[e>>2];hd(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function rk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);t=nk(u,23,c[6868]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else if((j|0)==32){w=r}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;Qh(p,f);ok(u,w,r,x,n,o,p);Yg(c[p>>2]|0)|0;c[q>>2]=c[e>>2];hd(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function sk(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=c[6868]|0;if(y){w=nk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=nk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[29464]|0)==0;if(y){do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);w=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}hq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=Up(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}hq();H=0;I=0;J=c[m>>2]|0}}while(0);Qh(q,f);uk(J,F,A,H,o,p,q);Yg(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];hd(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Vp(I)}if((D|0)==0){i=d;return}Vp(D);i=d;return}function tk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=_b(b|0)|0;b=pc(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}_b(h|0)|0;i=f;return b|0}function uk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[7226]|0)==-1)){c[m>>2]=28904;c[m+4>>2]=14;c[m+8>>2]=0;qh(28904,m,102)}m=(c[7227]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=oc(4)|0;r=q;zp(r);Fb(q|0,22832,140)}q=j;r=c[o>>2]|0;if(!((c[7130]|0)==-1)){c[l>>2]=28520;c[l+4>>2]=14;c[l+8>>2]=0;qh(28520,l,102)}l=(c[7131]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=oc(4)|0;t=s;zp(t);Fb(s|0,22832,140)}s=r;Ac[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Bc[c[(c[j>>2]|0)+28>>2]&63](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Bc[c[(c[o>>2]|0)+28>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=u+2|0;p=Bc[c[(c[o>>2]|0)+28>>2]&63](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((Qa(t<<24>>24|0,c[6868]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((fb(p<<24>>24|0,c[6868]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Mc[c[(c[j>>2]|0)+32>>2]&15](q,x,y,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(y-x)}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){A=x;B=v}else{break}do{v=a[A]|0;a[A]=a[B]|0;a[B]=v;A=A+1|0;B=B-1|0;}while(A>>>0<B>>>0)}}while(0);p=Ec[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;C=0;D=x;while(1){E=(a[w]&1)==0;do{if((a[(E?v:c[t>>2]|0)+C|0]|0)>0){if((o|0)!=(a[(E?v:c[t>>2]|0)+C|0]|0)){F=C;G=o;break}H=c[h>>2]|0;c[h>>2]=H+1;a[H]=p;H=a[w]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[u>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}else{F=C;G=o}}while(0);E=Bc[c[(c[m>>2]|0)+28>>2]&63](q,a[D]|0)|0;H=c[h>>2]|0;c[h>>2]=H+1;a[H]=E;E=D+1|0;if(E>>>0<y>>>0){o=G+1|0;C=F;D=E}else{break}}}D=f+(x-b)|0;C=c[h>>2]|0;if((D|0)==(C|0)){break}o=C-1|0;if(o>>>0>D>>>0){J=D;K=o}else{break}do{o=a[J]|0;a[J]=a[K]|0;a[K]=o;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);c:do{if(y>>>0<e>>>0){K=j;J=y;while(1){x=a[J]|0;if(x<<24>>24==46){break}F=Bc[c[(c[K>>2]|0)+28>>2]&63](q,x)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x]=F;F=J+1|0;if(F>>>0<e>>>0){J=F}else{L=F;break c}}K=Ec[c[(c[r>>2]|0)+12>>2]&255](s)|0;F=c[h>>2]|0;c[h>>2]=F+1;a[F]=K;L=J+1|0}else{L=y}}while(0);Mc[c[(c[j>>2]|0)+32>>2]&15](q,L,e,c[h>>2]|0)|0;q=(c[h>>2]|0)+(l-L)|0;c[h>>2]=q;if((d|0)==(e|0)){M=q;c[g>>2]=M;vh(n);i=k;return}M=f+(d-b)|0;c[g>>2]=M;vh(n);i=k;return}function vk(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=c[6868]|0;if(y){w=nk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=nk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[29464]|0)==0;if(y){do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=tk(m,c[6868]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);w=tk(m,c[6868]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}hq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=Up(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}hq();H=0;I=0;J=c[m>>2]|0}}while(0);Qh(q,f);uk(J,F,A,H,o,p,q);Yg(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];hd(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){Vp(I)}if((D|0)==0){i=d;return}Vp(D);i=d;return}function wk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[16832]|0;a[o+1|0]=a[16833]|0;a[o+2|0]=a[16834]|0;a[o+3|0]=a[16835]|0;a[o+4|0]=a[16836]|0;a[o+5|0]=a[16837]|0;p=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);q=nk(p,20,c[6868]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==32){r=o}else if((h|0)==16){s=a[p]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){r=k+1|0;break}if(!((q|0)>1&s<<24>>24==48)){t=12;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){t=12;break}r=k+2|0}else{t=12}}while(0);if((t|0)==12){r=p}Qh(m,f);t=m|0;m=c[t>>2]|0;if(!((c[7226]|0)==-1)){c[j>>2]=28904;c[j+4>>2]=14;c[j+8>>2]=0;qh(28904,j,102)}j=(c[7227]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){s=c[h+(j<<2)>>2]|0;if((s|0)==0){break}Yg(c[t>>2]|0)|0;u=l|0;Mc[c[(c[s>>2]|0)+32>>2]&15](s,p,o,u)|0;s=l+q|0;if((r|0)==(o|0)){v=s;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;hd(b,n,u,v,s,f,g);i=d;return}v=l+(r-k)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;hd(b,n,u,v,s,f,g);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function xk(a){a=a|0;Wg(a|0);bq(a);return}function yk(a){a=a|0;Wg(a|0);return}function zk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Lc[o&63](b,d,l,f,g,h&1);i=j;return}Qh(m,f);f=m|0;m=c[f>>2]|0;if(!((c[7128]|0)==-1)){c[k>>2]=28512;c[k+4>>2]=14;c[k+8>>2]=0;qh(28512,k,102)}k=(c[7129]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;Yg(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){Ac[c[o+24>>2]&127](n,d)}else{Ac[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=(t&255)>>>1;v=q}else{u=c[q>>2]|0;v=c[r>>2]|0}if((s|0)==(v+(u<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=Bc[c[(c[w>>2]|0)+52>>2]&63](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if(!((z|0)==-1)){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];Hh(n);i=j;return}}while(0);j=oc(4)|0;zp(j);Fb(j|0,22832,140)}function Ak(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[16824]|0;a[q+1|0]=a[16825]|0;a[q+2|0]=a[16826]|0;a[q+3|0]=a[16827]|0;a[q+4|0]=a[16828]|0;a[q+5|0]=a[16829]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);v=nk(u,12,c[6868]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;Qh(o,f);Bk(u,w,q,x,m,n,o);Yg(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Ck(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}



function Pc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Qc(){return i|0}function Rc(a){a=a|0;i=a}function Sc(a,b){a=a|0;b=b|0;if((w|0)==0){w=a;x=b}}function Tc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Uc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Vc(a){a=a|0;J=a}function Wc(a){a=a|0;K=a}function Xc(a){a=a|0;L=a}function Yc(a){a=a|0;M=a}function Zc(a){a=a|0;N=a}function _c(a){a=a|0;O=a}function $c(a){a=a|0;P=a}function ad(a){a=a|0;Q=a}function bd(a){a=a|0;R=a}function cd(a){a=a|0;S=a}function dd(){c[5700]=p+8;c[5702]=p+8;c[5704]=q+8;c[5708]=q+8;c[5712]=q+8;c[5716]=q+8;c[5720]=q+8;c[5724]=p+8;c[5758]=q+8;c[5762]=q+8;c[5826]=q+8;c[5830]=q+8;c[5850]=p+8;c[5852]=q+8;c[5888]=q+8;c[5892]=q+8;c[5928]=q+8;c[5932]=q+8;c[5952]=p+8;c[5954]=p+8;c[5956]=q+8;c[5960]=q+8;c[5964]=q+8;c[5968]=q+8;c[5972]=q+8;c[5976]=p+8;c[5978]=p+8;c[5980]=p+8;c[5982]=p+8;c[5984]=p+8;c[5986]=p+8;c[5988]=p+8;c[6014]=q+8;c[6018]=p+8;c[6020]=q+8;c[6024]=q+8;c[6028]=q+8;c[6032]=p+8;c[6034]=p+8;c[6036]=p+8;c[6038]=p+8;c[6072]=p+8;c[6074]=p+8;c[6076]=p+8;c[6078]=q+8;c[6082]=q+8;c[6086]=q+8;c[6090]=q+8;c[6094]=q+8;c[6098]=q+8}function ed(b,d,e,f,g,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0;o=i;i=i+120|0;p=o|0;q=o+8|0;r=o+16|0;s=o+24|0;t=o+32|0;u=o+40|0;v=o+48|0;w=o+56|0;x=o+64|0;y=o+72|0;z=o+80|0;A=o+96|0;B=o+104|0;C=B|0;D=i;i=i+8|0;E=i;i=i+8|0;F=i;i=i+12|0;i=i+7&-8;G=F|0;H=i;i=i+8|0;I=i;i=i+8|0;J=i;i=i+256|0;K=i;i=i+8|0;L=i;i=i+8|0;M=i;i=i+32|0;N=i;i=i+24|0;if(!((f|0)==3&(k|0)==2&(n|0)==3)){Lb(184)|0;O=-1;i=o;return O|0}n=d;c[z>>2]=n;c[z+4>>2]=e;if(!((d|0)==0|(e|0)>-1)){bc(12272,11608,148,15568);return 0}Bd(y,z);z=Li(29e3,d)|0;Qh(s,z+(c[(c[z>>2]|0)-12>>2]|0)|0);d=en(s,28904)|0;e=Bc[c[(c[d>>2]|0)+28>>2]&63](d,10)|0;cn(s);Mi(z,e)|0;xi(z)|0;z=Ji(29e3,c[n>>2]|0)|0;Qh(r,z+(c[(c[z>>2]|0)-12>>2]|0)|0);n=en(r,28904)|0;e=Bc[c[(c[n>>2]|0)+28>>2]&63](n,10)|0;cn(r);Mi(z,e)|0;xi(z)|0;c[C>>2]=g;z=B+4|0;c[z>>2]=j;e=(j|0)>-1;if(!((g|0)==0|e)){bc(12272,11608,148,15568);return 0}g=A|0;if(j<<1>>>0>536870911>>>0){id();return 0}r=j<<4;if((Zp(x,16,r)|0)==0){P=c[x>>2]|0}else{c[x>>2]=0;P=0}if(!((P|0)!=0|(r|0)==0)){id();return 0}c[g>>2]=P;P=A+4|0;c[P>>2]=j;Ad(A|0,B);B=c[P>>2]|0;if((B|0)!=(c[z>>2]|0)){bc(2104,1552,498,15464);return 0}z=B<<1;if((z|0)>0){P=c[C>>2]|0;C=c[g>>2]|0;A=0;do{h[C+(A<<3)>>3]=+h[P+(A<<3)>>3];A=A+1|0;}while((A|0)<(z|0))}z=D|0;if(j>>>0>268435455>>>0){id();return 0}A=j<<4;if((Zp(w,16,A)|0)==0){Q=c[w>>2]|0}else{c[w>>2]=0;Q=0}if(!((Q|0)!=0|(A|0)==0)){id();return 0}A=Q;c[z>>2]=A;c[D+4>>2]=j;if(!e){bc(10928,10704,138,15616);return 0}e=c[g>>2]|0;g=(B|0)>-1;if(!((e|0)==0|g)){bc(12272,11608,148,15568);return 0}if((B|0)!=(j|0)){bc(2104,1552,498,15464);return 0}B=(j|0)>0;do{if(B){h[Q>>3]=+h[e>>3];if((j|0)>1){R=1}else{break}do{h[A+(R<<4)>>3]=+h[e+(R<<3)>>3];R=R+1|0;}while((R|0)<(j|0))}}while(0);R=e+(j<<3)|0;if(!((R|0)==0|g)){bc(12272,11608,148,15568);return 0}do{if(B){h[Q+8>>3]=+h[R>>3];if((j|0)>1){g=1;do{h[A+(g<<4)+8>>3]=+h[e+(g+j<<3)>>3];g=g+1|0;}while((g|0)<(j|0));if(!B){break}}g=fd(29e3,A)|0;Qh(q,g+(c[(c[g>>2]|0)-12>>2]|0)|0);w=en(q,28904)|0;P=Bc[c[(c[w>>2]|0)+28>>2]&63](w,10)|0;cn(q);Mi(g,P)|0;xi(g)|0;c[G>>2]=l;c[F+4>>2]=m;if(!((l|0)==0|(m|0)>-1)){bc(12272,11608,148,15568);return 0}jd(E,F);g=c[E+4>>2]|0;if((g*3|0|0)<=0){bc(5200,3952,394,15760);return 0}P=c[E>>2]|0;w=Ki(29e3,+h[P>>3])|0;Qh(p,w+(c[(c[w>>2]|0)-12>>2]|0)|0);C=en(p,28904)|0;r=Bc[c[(c[C>>2]|0)+28>>2]&63](C,10)|0;cn(p);Mi(w,r)|0;xi(w)|0;w=(g|0)>-1;if(!((P|0)==0|w)){bc(12272,11608,148,15568);return 0}r=H|0;if(g>>>0>1073741823>>>0){id();return 0}C=g<<2;if((Zp(v,16,C)|0)==0){S=c[v>>2]|0}else{c[v>>2]=0;S=0}if(!((S|0)!=0|(C|0)==0)){id();return 0}C=S;c[r>>2]=C;x=H+4|0;c[x>>2]=g;if(!w){bc(14040,15240,241,15672);return 0}c[x>>2]=g;x=(g|0)>0;do{if(x){w=0;do{c[C+(w<<2)>>2]=~~+h[P+(w<<3)>>3];w=w+1|0;}while((w|0)<(g|0));if(!(g>>>0>268435455>>>0)){T=I|0;break}id();return 0}else{T=I|0}}while(0);C=g<<4;if((Zp(u,16,C)|0)==0){U=c[u>>2]|0}else{c[u>>2]=0;U=0}if(!((U|0)!=0|(C|0)==0)){id();return 0}C=U;c[T>>2]=C;c[I+4>>2]=g;do{if(x){h[U>>3]=+h[P+(g<<3)>>3];if((g|0)>1){V=1}else{h[U+8>>3]=+h[P+(g<<1<<3)>>3];break}do{h[C+(V<<4)>>3]=+h[P+(V+g<<3)>>3];V=V+1|0;}while((V|0)<(g|0));w=g<<1;if(!x){break}h[U+8>>3]=+h[P+(w<<3)>>3];if((g|0)>1){W=1}else{break}do{h[C+(W<<4)+8>>3]=+h[P+(W+w<<3)>>3];W=W+1|0;}while((W|0)<(g|0))}}while(0);Ed(J,y,D,2);g=K|0;c[g>>2]=0;C=K+4|0;c[C>>2]=0;x=L|0;c[x>>2]=0;c[L+4>>2]=0;h[M>>3]=1.0;h[M+8>>3]=1.0;h[M+16>>3]=1.0;a[M+24|0]=0;h[N>>3]=.001;h[N+8>>3]=.95;h[N+16>>3]=100.0;X=+(gb()|0);w=gd(29e3,15288)|0;Qh(t,w+(c[(c[w>>2]|0)-12>>2]|0)|0);n=en(t,28904)|0;s=Bc[c[(c[n>>2]|0)+28>>2]&63](n,10)|0;cn(t);Mi(w,s)|0;xi(w)|0;w=be(K,L,J,H,I,M,N)|0;a:do{if((w|0)==0){Y=(+(gb()|0)-X)/1.0e6;Gb(7240,(s=i,i=i+8|0,h[s>>3]=Y,s)|0)|0;i=s;s=b;n=c[C>>2]|0;d=c[g>>2]|0;k=0;while(1){if((n|0)<=(k|0)){break}h[s+(k<<3)>>3]=+h[d+(k<<4)>>3];h[s+(k+j<<3)>>3]=+h[d+(k<<4)+8>>3];f=k+1|0;if((f|0)<(j|0)){k=f}else{Z=0;break a}}bc(5200,3952,378,15792);return 0}else{Lb(136)|0;Z=w}}while(0);Vp(c[x>>2]|0);Vp(c[g>>2]|0);Dd(J);Vp(c[T>>2]|0);Vp(c[r>>2]|0);Vp(P);Vp(c[z>>2]|0);Vp(e);Vp(c[y>>2]|0);O=Z;i=o;return O|0}}while(0);bc(5200,3952,394,15760);return 0}function fd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+200|0;f=e|0;g=e+8|0;j=e+16|0;k=e+32|0;l=e+168|0;m=e+176|0;n=e+184|0;o=k|0;p=k+4|0;c[o>>2]=24420;q=k+56|0;c[q>>2]=24440;r=k+56|0;Sh(r,p);c[k+128>>2]=0;c[k+132>>2]=-1;c[o>>2]=18444;c[k+56>>2]=18464;s=j;t=p|0;c[t>>2]=18792;u=k+8|0;an(u);tq(k+12|0,0,24)|0;c[t>>2]=18648;t=k+36|0;tq(t|0,0,16)|0;c[k+52>>2]=16;tq(s|0,0,12)|0;zd(p,j);if(!((a[s]&1)==0)){bq(c[j+8>>2]|0)}j=k;s=k;v=b;w=(c[v>>2]|0)-12|0;x=b;c[s+((c[(c[j>>2]|0)-12>>2]|0)+4)>>2]=c[x+((c[w>>2]|0)+4)>>2];y=c[(c[j>>2]|0)-12>>2]|0;Qh(m,x+(c[w>>2]|0)|0);w=s+y|0;Qh(l,w);Rh(f,w,m);cn(f);f=c[s+(y+24)>>2]|0;if((f|0)!=0){Ac[c[(c[f>>2]|0)+8>>2]&127](f,m);y=f+4|0;bn(g,y);dn(y,m)|0;cn(g)}cn(l);cn(m);c[s+((c[(c[j>>2]|0)-12>>2]|0)+8)>>2]=c[x+((c[(c[v>>2]|0)-12>>2]|0)+8)>>2];v=ld(k,40)|0;x=ld(Ki(v,+h[d>>3])|0,44)|0;ld(Ki(x,+h[d+8>>3])|0,41)|0;yd(n,p);p=md(b,n)|0;if(!((a[n]&1)==0)){bq(c[n+8>>2]|0)}c[o>>2]=18444;c[q>>2]=18464;q=k+4|0;c[q>>2]=18648;if(!((a[t]&1)==0)){bq(c[k+44>>2]|0)}c[q>>2]=18792;cn(u);Ph(r);i=e;return p|0}function gd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)==0){p=m}else{xi(o)|0;p=c[(c[l>>2]|0)-12>>2]|0}a[k]=1;o=rq(d|0)|0;c[h>>2]=c[n+(p+24)>>2];if((c[n+(p+4)>>2]&176|0)==32){q=d+o|0}else{q=d}r=n+p|0;s=n+(p+76)|0;t=c[s>>2]|0;if((t|0)==-1){u=r;Qh(f,u);v=en(f,28904)|0;w=Bc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;cn(f);c[s>>2]=w<<24>>24;x=w;y=u}else{x=t&255;y=r}hd(j,h,d,q,d+o|0,y,x);if((c[j>>2]|0)!=0){break}o=c[(c[l>>2]|0)-12>>2]|0;Oh(n+o|0,c[n+(o+16)>>2]|5)}}while(0);Ii(g);i=e;return b|0}function hd(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){if(q>>>0<11>>>0){h=q<<1&255;e=l;a[e]=h;r=l+1|0;s=h;t=e}else{e=q+16&-16;h=$p(e)|0;c[l+8>>2]=h;g=e|1;c[l>>2]=g;c[l+4>>2]=q;r=h;s=g&255;t=l}tq(r|0,j|0,q|0)|0;a[r+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,u,q)|0)==(q|0)){if((a[t]&1)==0){break}bq(c[l+8>>2]|0);break}c[m>>2]=0;c[b>>2]=0;if((a[t]&1)==0){i=k;return}bq(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((Cc[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function id(){var a=0;a=oc(4)|0;dq(a);Fb(a|0,22816,132)}function jd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;g=a|0;if((f*3|0)>>>0>536870911>>>0){id()}j=f*24|0;if((Zp(e,16,j)|0)==0){k=c[e>>2]|0}else{c[e>>2]=0;k=0}if(!((k|0)!=0|(j|0)==0)){id()}c[g>>2]=k;k=a+4|0;c[k>>2]=f;f=b+4|0;j=c[f>>2]|0;if((j|0)>715827882){id()}kd(a|0,j,3);j=c[k>>2]|0;if((j|0)!=(c[f>>2]|0)){bc(2104,1552,498,15464)}f=j*3|0;if((f|0)<=0){i=d;return}j=c[b>>2]|0;b=c[g>>2]|0;g=0;do{h[b+(g<<3)>>3]=+h[j+(g<<3)>>3];g=g+1|0;}while((g|0)<(f|0));i=d;return}function kd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==3&(b|0)>-1&(d|0)>-1)){bc(14040,15240,241,15672)}if((b|0)>715827882){id()}d=b*3|0;g=a+4|0;if(((c[g>>2]|0)*3|0|0)==(d|0)){c[g>>2]=b;i=e;return}h=a|0;Vp(c[h>>2]|0);if((d|0)==0){c[h>>2]=0;c[g>>2]=b;i=e;return}if(d>>>0>536870911>>>0){id()}d=b*24|0;if((Zp(f,16,d)|0)==0){j=c[f>>2]|0}else{c[f>>2]=0;j=0}if(!((j|0)!=0|(d|0)==0)){id()}c[h>>2]=j;c[g>>2]=b;i=e;return}function ld(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;a[g]=d;d=h|0;a[d]=0;c[h+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)==0){p=m}else{xi(o)|0;p=c[(c[l>>2]|0)-12>>2]|0}a[d]=1;c[j>>2]=c[n+(p+24)>>2];o=n+p|0;q=c[n+(p+4)>>2]|0;r=g+1|0;s=n+(p+76)|0;t=c[s>>2]|0;if((t|0)==-1){Qh(f,o);u=en(f,28904)|0;v=Bc[c[(c[u>>2]|0)+28>>2]&63](u,32)|0;cn(f);c[s>>2]=v<<24>>24;w=v}else{w=t&255}hd(k,j,g,(q&176|0)==32?r:g,r,o,w);if((c[k>>2]|0)!=0){break}o=c[(c[l>>2]|0)-12>>2]|0;Oh(n+o|0,c[n+(o+16)>>2]|5)}}while(0);Ii(h);i=e;return b|0}function md(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){xi(o)|0}a[k]=1;o=a[d]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[d+4>>2]|0}o=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(o+24)>>2];if(p){p=d;if((c[n+(o+4)>>2]&176|0)==32){r=p+1+q|0}else{r=p+1|0}s=d+1|0;t=d+1|0;u=r}else{p=c[d+8>>2]|0;if((c[n+(o+4)>>2]&176|0)==32){v=p+q|0}else{v=p}s=c[d+8>>2]|0;t=c[d+8>>2]|0;u=v}p=n+o|0;w=n+(o+76)|0;o=c[w>>2]|0;if((o|0)==-1){x=p;Qh(f,x);y=en(f,28904)|0;z=Bc[c[(c[y>>2]|0)+28>>2]&63](y,32)|0;cn(f);c[w>>2]=z<<24>>24;A=z;B=x}else{A=o&255;B=p}hd(j,h,t,u,s+q|0,B,A);if((c[j>>2]|0)!=0){break}p=c[(c[l>>2]|0)-12>>2]|0;Oh(n+p|0,c[n+(p+16)>>2]|5)}}while(0);Ii(g);i=e;return b|0}function nd(b){b=b|0;var d=0;c[b>>2]=18444;c[b+56>>2]=18464;d=b+4|0;c[d>>2]=18648;if(!((a[b+36|0]&1)==0)){bq(c[b+44>>2]|0)}c[d>>2]=18792;cn(b+8|0);Ph(b+56|0);return}function od(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=18444;b=d+(e+56)|0;c[b>>2]=18464;f=d+(e+4)|0;c[f>>2]=18648;if(!((a[d+(e+36)|0]&1)==0)){bq(c[d+(e+44)>>2]|0)}c[f>>2]=18792;cn(d+(e+8)|0);Ph(b);return}function pd(b){b=b|0;var d=0;c[b>>2]=18444;c[b+56>>2]=18464;d=b+4|0;c[d>>2]=18648;if(!((a[b+36|0]&1)==0)){bq(c[b+44>>2]|0)}c[d>>2]=18792;cn(b+8|0);Ph(b+56|0);bq(b);return}function qd(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=18444;f=d+(e+56)|0;c[f>>2]=18464;g=d+(e+4)|0;c[g>>2]=18648;if(!((a[d+(e+36)|0]&1)==0)){bq(c[d+(e+44)>>2]|0)}c[g>>2]=18792;cn(d+(e+8)|0);Ph(f);bq(b);return}function rd(b){b=b|0;var d=0;d=b|0;c[d>>2]=18648;if(!((a[b+32|0]&1)==0)){bq(c[b+40>>2]|0)}c[d>>2]=18792;cn(b+4|0);return}function sd(b){b=b|0;var d=0;d=b|0;c[d>>2]=18648;if(!((a[b+32|0]&1)==0)){bq(c[b+40>>2]|0)}c[d>>2]=18792;cn(b+4|0);bq(b);return}function td(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;do{if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else if((j|0)==24){if((g|0)==2){n=11;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=15;break}i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else{if((g|0)==2){n=11;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=15;break}if((h&8|0)==0){i=l-(c[d+20>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}}}while(0);if((n|0)==15){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}if((n|0)==11){n=d+32|0;if((a[n]&1)==0){q=n+1|0}else{q=c[d+40>>2]|0}n=m-q|0;o=(n|0)<0|0?-1:0;p=n}n=vq(p,o,e,f)|0;f=J;e=0;do{if(!((f|0)<(e|0)|(f|0)==(e|0)&n>>>0<0>>>0)){o=d+32|0;if((a[o]&1)==0){r=o+1|0}else{r=c[d+40>>2]|0}o=m-r|0;p=(o|0)<0|0?-1:0;if((p|0)<(f|0)|(p|0)==(f|0)&o>>>0<n>>>0){break}o=h&8;do{if(!((n|0)==0&(f|0)==0)){do{if((o|0)!=0){if((c[d+12>>2]|0)!=0){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if(!((h&16|0)!=0&(l|0)==0)){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if((o|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+n;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+n}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=n;c[p+4>>2]=f;return}}while(0);f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function ud(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;Lc[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function vd(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(!(b>>>0<i>>>0)){h=-1;return h|0}h=d[b]|0;return h|0}function wd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(!(g>>>0<i>>>0)){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}do{if((c[b+48>>2]&16|0)==0){k=d&255;l=i-1|0;if(k<<24>>24==(a[l]|0)){m=l;n=k;break}else{j=-1}return j|0}else{m=i-1|0;n=d&255}}while(0);c[f>>2]=g;c[e>>2]=m;c[b+16>>2]=h;a[m]=n;j=d;return j|0}function xd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;t=p;u=a[t]|0;v=(u&1)!=0;if(v){w=c[b+36>>2]|0;x=(c[p>>2]&-2)-1|0}else{w=(u&255)>>>1;x=10}if((w|0)==(x|0)){Eh(p,x,1,x,x,0,0);if((a[t]&1)==0){y=12}else{y=13}}else{if(v){y=13}else{y=12}}if((y|0)==12){a[t]=(w<<1)+2;z=p+1|0;A=w+1|0}else if((y|0)==13){y=c[b+40>>2]|0;v=w+1|0;c[b+36>>2]=v;z=y;A=v}a[z+w|0]=0;a[z+A|0]=0;A=a[t]|0;if((A&1)==0){B=10;C=A}else{A=c[p>>2]|0;B=(A&-2)-1|0;C=A&255}A=(C&1)==0;if(A){D=(C&255)>>>1}else{D=c[b+36>>2]|0}do{if(D>>>0<B>>>0){zh(p,B-D|0,0)|0}else{if(A){a[p+1+B|0]=0;a[t]=B<<1;break}else{a[(c[b+40>>2]|0)+B|0]=0;c[b+36>>2]=B;break}}}while(0);B=a[t]|0;if((B&1)==0){E=(B&255)>>>1;F=p+1|0}else{E=c[b+36>>2]|0;F=c[b+40>>2]|0}p=F+E|0;c[o>>2]=F;c[l>>2]=p;l=F+q|0;c[j>>2]=l;q=F+s|0;c[r>>2]=q;G=l;H=p;I=q;J=n}else{G=k;H=m;I=c[b+44>>2]|0;J=b+48|0}m=G+1|0;k=m>>>0<I>>>0?I:m;c[b+44>>2]=k;if((c[J>>2]&8|0)!=0){J=b+32|0;if((a[J]&1)==0){K=J+1|0}else{K=c[b+40>>2]|0}c[h>>2]=K;c[g>>2]=K+i;c[b+16>>2]=k}if((G|0)==(H|0)){e=Bc[c[(c[b>>2]|0)+52>>2]&63](f,d&255)|0;return e|0}else{c[j>>2]=m;a[G]=d;e=d&255;return e|0}return 0}function yd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[d+48>>2]|0;if((e&16|0)!=0){f=d+44|0;g=c[f>>2]|0;h=c[d+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;i=h}else{i=g}g=c[d+20>>2]|0;h=g;f=i-h|0;if(f>>>0>4294967279>>>0){rh(0)}if(f>>>0<11>>>0){a[b]=f<<1;j=b+1|0}else{k=f+16&-16;l=$p(k)|0;c[b+8>>2]=l;c[b>>2]=k|1;c[b+4>>2]=f;j=l}if((g|0)==(i|0)){m=j}else{l=j;f=g;while(1){a[l]=a[f]|0;g=f+1|0;if((g|0)==(i|0)){break}else{l=l+1|0;f=g}}m=j+(i+(-h|0))|0}a[m]=0;return}if((e&8|0)==0){tq(b|0,0,12)|0;return}e=c[d+8>>2]|0;m=c[d+16>>2]|0;d=e;h=m-d|0;if(h>>>0>4294967279>>>0){rh(0)}if(h>>>0<11>>>0){a[b]=h<<1;n=b+1|0}else{i=h+16&-16;j=$p(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=h;n=j}if((e|0)==(m|0)){o=n}else{j=n;h=e;while(1){a[j]=a[h]|0;e=h+1|0;if((e|0)==(m|0)){break}else{j=j+1|0;h=e}}o=n+(m+(-d|0))|0}a[o]=0;return}function zd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b+32|0;wh(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if((g&8|0)!=0){h=a[e]|0;if((h&1)==0){i=((h&255)>>>1)+(e+1)|0;c[d>>2]=i;j=e+1|0;k=i;l=e+1|0}else{i=(c[b+40>>2]|0)+(c[b+36>>2]|0)|0;c[d>>2]=i;h=c[b+40>>2]|0;j=h;k=i;l=h}c[b+8>>2]=l;c[b+12>>2]=j;c[b+16>>2]=k}if((g&16|0)==0){return}g=e;k=a[g]|0;if((k&1)==0){j=(k&255)>>>1;c[d>>2]=e+1+j;m=10;n=k;o=j}else{j=c[b+36>>2]|0;c[d>>2]=(c[b+40>>2]|0)+j;d=c[e>>2]|0;m=(d&-2)-1|0;n=d&255;o=j}j=(n&1)==0;if(j){p=(n&255)>>>1}else{p=c[b+36>>2]|0}do{if(p>>>0<m>>>0){zh(e,m-p|0,0)|0}else{if(j){a[e+1+m|0]=0;a[g]=m<<1;break}else{a[(c[b+40>>2]|0)+m|0]=0;c[b+36>>2]=m;break}}}while(0);m=a[g]|0;if((m&1)==0){q=(m&255)>>>1;r=e+1|0;s=e+1|0}else{e=c[b+40>>2]|0;q=c[b+36>>2]|0;r=e;s=e}e=b+24|0;c[e>>2]=r;c[b+20>>2]=r;c[b+28>>2]=s+q;if((c[f>>2]&3|0)==0){return}c[e>>2]=r+o;return}function Ad(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;do{if((f|0)==0){g=0}else{if((f|0)>1073741823){id()}if((f|0)>-1){g=f;break}bc(14040,15240,241,15672)}}while(0);f=g<<1;b=a+4|0;if((c[b>>2]<<1|0)==(f|0)){c[b>>2]=g;i=d;return}h=a|0;Vp(c[h>>2]|0);if((f|0)==0){c[h>>2]=0;c[b>>2]=g;i=d;return}if(f>>>0>536870911>>>0){id()}f=g<<4;if((Zp(e,16,f)|0)==0){j=c[e>>2]|0}else{c[e>>2]=0;j=0}if(!((j|0)!=0|(f|0)==0)){id()}c[h>>2]=j;c[b>>2]=g;i=d;return}function Bd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;g=a|0;if((f*3|0)>>>0>1073741823>>>0){id()}h=f*12|0;if((Zp(e,16,h)|0)==0){j=c[e>>2]|0}else{c[e>>2]=0;j=0}if(!((j|0)!=0|(h|0)==0)){id()}c[g>>2]=j;j=a+4|0;c[j>>2]=f;f=b+4|0;h=c[f>>2]|0;if((h|0)>715827882){id()}Cd(a|0,h,3);h=c[j>>2]|0;if((h|0)!=(c[f>>2]|0)){bc(2104,1552,498,15464)}f=h*3|0;if((f|0)<=0){i=d;return}h=c[b>>2]|0;b=c[g>>2]|0;g=0;do{c[b+(g<<2)>>2]=c[h+(g<<2)>>2];g=g+1|0;}while((g|0)<(f|0));i=d;return}function Cd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==3&(b|0)>-1&(d|0)>-1)){bc(14040,15240,241,15672)}if((b|0)>715827882){id()}d=b*3|0;g=a+4|0;if(((c[g>>2]|0)*3|0|0)==(d|0)){c[g>>2]=b;i=e;return}h=a|0;Vp(c[h>>2]|0);if((d|0)==0){c[h>>2]=0;c[g>>2]=b;i=e;return}if(d>>>0>1073741823>>>0){id()}d=b*12|0;if((Zp(f,16,d)|0)==0){j=c[f>>2]|0}else{c[f>>2]=0;j=0}if(!((j|0)!=0|(d|0)==0)){id()}c[h>>2]=j;c[g>>2]=b;i=e;return}function Dd(a){a=a|0;var b=0;Vp(c[a+232>>2]|0);Vp(c[a+236>>2]|0);b=c[a+240>>2]|0;if((b|0)!=0){cq(b)}b=c[a+244>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+196>>2]|0);Vp(c[a+200>>2]|0);b=c[a+204>>2]|0;if((b|0)!=0){cq(b)}b=c[a+208>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+160>>2]|0);Vp(c[a+164>>2]|0);b=c[a+168>>2]|0;if((b|0)!=0){cq(b)}b=c[a+172>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+124>>2]|0);Vp(c[a+128>>2]|0);b=c[a+132>>2]|0;if((b|0)!=0){cq(b)}b=c[a+136>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+88>>2]|0);Vp(c[a+92>>2]|0);b=c[a+96>>2]|0;if((b|0)!=0){cq(b)}b=c[a+100>>2]|0;if((b|0)!=0){cq(b)}Vp(c[a+60>>2]|0);Vp(c[a+48>>2]|0);Vp(c[a+36>>2]|0);Vp(c[a+24>>2]|0);Vp(c[a+12>>2]|0);Vp(c[a>>2]|0);return}function Ed(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=b|0;c[g>>2]=0;i=b+4|0;c[i>>2]=0;j=b+12|0;k=j|0;c[k>>2]=0;l=b+16|0;c[l>>2]=0;m=b+24|0;n=m|0;c[n>>2]=0;o=b+28|0;c[o>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;c[b+60>>2]=0;c[b+64>>2]=0;a[b+76|0]=0;p=b+80|0;c[p>>2]=-1;tq(b+84|0,0,28)|0;q=Up(4)|0;c[b+88>>2]=q;if((q|0)==0){id()}c[p>>2]=0;c[q>>2]=0;a[b+112|0]=0;q=b+116|0;c[q>>2]=-1;tq(b+120|0,0,28)|0;p=Up(4)|0;r=p;c[b+124>>2]=r;if((p|0)==0){id()}c[q>>2]=0;c[r>>2]=0;a[b+148|0]=0;r=b+152|0;c[r>>2]=-1;tq(b+156|0,0,28)|0;q=Up(4)|0;p=q;c[b+160>>2]=p;if((q|0)==0){id()}c[r>>2]=0;c[p>>2]=0;a[b+184|0]=0;p=b+188|0;c[p>>2]=-1;tq(b+192|0,0,28)|0;r=Up(4)|0;q=r;c[b+196>>2]=q;if((r|0)==0){id()}c[p>>2]=0;c[q>>2]=0;a[b+220|0]=0;q=b+224|0;c[q>>2]=-1;tq(b+228|0,0,28)|0;p=Up(4)|0;r=p;c[b+232>>2]=r;if((p|0)==0){id()}c[q>>2]=0;c[r>>2]=0;r=d+4|0;q=c[r>>2]|0;if((q|0)>715827882){id()}Cd(b|0,q,3);q=c[i>>2]|0;if((q|0)!=(c[r>>2]|0)){bc(2104,1552,498,15464)}r=q*3|0;if((r|0)>0){p=c[d>>2]|0;d=c[g>>2]|0;g=0;do{c[d+(g<<2)>>2]=c[p+(g<<2)>>2];g=g+1|0;}while((g|0)<(r|0));s=c[i>>2]|0}else{s=q}c[b+8>>2]=s;s=e;q=e+4|0;kd(j|0,c[q>>2]|0,3);j=c[l>>2]|0;i=c[k>>2]|0;k=(j|0)>-1;if(!((i|0)==0|k)){bc(12272,11608,148,15568)}if((j|0)!=(c[q>>2]|0)){bc(2104,1552,498,15464)}r=(j|0)>0;do{if(r){g=c[e>>2]|0;h[i>>3]=+h[g>>3];if((j|0)>1){t=1}else{break}do{h[i+(t<<3)>>3]=+h[g+(t<<4)>>3];t=t+1|0;}while((t|0)<(j|0))}}while(0);t=i+(j<<3)|0;if(!((t|0)==0|k)){bc(12272,11608,148,15568)}do{if(r){g=c[e>>2]|0;h[t>>3]=+h[g+8>>3];if((j|0)>1){u=1}else{break}do{h[i+(u+j<<3)>>3]=+h[g+(u<<4)+8>>3];u=u+1|0;}while((u|0)<(j|0))}}while(0);u=i+(j<<1<<3)|0;if(!((u|0)==0|k)){bc(12272,11608,148,15568)}if(!k){bc(9952,9552,63,15824)}if(r){tq(u|0,0,j<<3|0)|0;v=c[l>>2]|0}else{v=0}c[b+20>>2]=v;Vd(m|0,s);s=c[o>>2]|0;if((s|0)!=(c[q>>2]|0)){bc(2104,1552,498,15464)}if((s|0)>0){o=e|0;e=0;do{m=(c[n>>2]|0)+(e<<4)|0;v=(c[o>>2]|0)+(e<<4)|0;c[m>>2]=c[v>>2];c[m+4>>2]=c[v+4>>2];c[m+8>>2]=c[v+8>>2];c[m+12>>2]=c[v+12>>2];e=e+1|0;}while((e|0)<(s|0));w=c[q>>2]|0}else{w=s}c[b+32>>2]=w;c[b+72>>2]=f;Fd(b);Wd(b);return}function Fd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+144|0;e=d|0;f=d+16|0;g=d+32|0;h=d+48|0;j=d+64|0;k=d+72|0;l=d+80|0;m=d+96|0;n=d+136|0;o=e|0;c[o>>2]=0;p=e+4|0;c[p>>2]=0;q=e+8|0;c[q>>2]=0;r=b+8|0;s=c[r>>2]|0;t=s*3|0;if((t|0)!=0){u=$p(s*36|0)|0;c[o>>2]=u;c[p>>2]=u;c[q>>2]=u+(t*12|0)}a:do{if((s|0)>0){t=b+4|0;u=b|0;v=f|0;w=f+4|0;x=f+8|0;y=g|0;z=g+4|0;A=g+8|0;B=h|0;C=h+4|0;D=h+8|0;E=h;F=g;G=f;H=0;while(1){I=c[t>>2]|0;if((I|0)<=(H|0)){break}J=c[u>>2]|0;K=c[J+(H<<2)>>2]|0;L=c[J+(I+H<<2)>>2]|0;M=c[J+((I<<1)+H<<2)>>2]|0;c[v>>2]=L;c[w>>2]=K;c[x>>2]=1;I=c[p>>2]|0;if((I|0)==(c[q>>2]|0)){Ud(e,f);N=c[p>>2]|0}else{if((I|0)==0){O=0}else{J=I;c[J>>2]=c[G>>2];c[J+4>>2]=c[G+4>>2];c[J+8>>2]=c[G+8>>2];O=c[p>>2]|0}J=O+12|0;c[p>>2]=J;N=J}c[y>>2]=M;c[z>>2]=L;c[A>>2]=1;if((N|0)==(c[q>>2]|0)){Ud(e,g);P=c[p>>2]|0}else{if((N|0)==0){Q=0}else{L=N;c[L>>2]=c[F>>2];c[L+4>>2]=c[F+4>>2];c[L+8>>2]=c[F+8>>2];Q=c[p>>2]|0}L=Q+12|0;c[p>>2]=L;P=L}c[B>>2]=K;c[C>>2]=M;c[D>>2]=1;if((P|0)==(c[q>>2]|0)){Ud(e,h)}else{if((P|0)==0){R=0}else{M=P;c[M>>2]=c[E>>2];c[M+4>>2]=c[E+4>>2];c[M+8>>2]=c[E+8>>2];R=c[p>>2]|0}c[p>>2]=R+12}H=H+1|0;if((H|0)>=(c[r>>2]|0)){break a}}bc(5368,3952,337,15760)}}while(0);r=b+112|0;R=c[b+20>>2]|0;c[b+120>>2]=R;P=b+140|0;c[P>>2]=0;h=b+116|0;e=c[h>>2]|0;do{if((e|0)!=(R|0)|(e|0)==0){q=b+124|0;Vp(c[q>>2]|0);Q=Up((R<<2)+4|0)|0;c[q>>2]=Q;if((Q|0)!=0){c[h>>2]=R;break}id()}}while(0);e=b+128|0;Q=c[e>>2]|0;if((Q|0)==0){S=R}else{Vp(Q);c[e>>2]=0;S=c[h>>2]|0}Q=b+124|0;tq(c[Q>>2]|0,0,(S<<2)+4|0)|0;c[j>>2]=c[o>>2];c[k>>2]=c[p>>2];Qd(j,k,r,0);do{if((c[e>>2]|0)==0){k=c[P>>2]|0;j=c[h>>2]|0;S=j;while(1){if(!((S|0)>-1)){break}if((c[(c[Q>>2]|0)+(S<<2)>>2]|0)==0){S=S-1|0}else{break}}R=S+1|0;if((R|0)>(j|0)){break}q=c[Q>>2]|0;N=R;do{c[q+(N<<2)>>2]=k;N=N+1|0;}while((N|0)<=(c[h>>2]|0))}}while(0);Gd(r);h=b+76|0;b=r|0;a[n|0]=0;c[n+4>>2]=r;a[m|0]=0;tq(m+4|0,0,32)|0;Id(m,n|0)|0;n=m|0;a[l|0]=0;c[l+4>>2]=r;c[l+8>>2]=m;do{if((c[b+8>>2]|0)==(c[n+8>>2]|0)){if((c[b+4>>2]|0)!=(c[n+4>>2]|0)){break}Hd(h,l|0)|0;Vp(c[m+12>>2]|0);Vp(c[m+16>>2]|0);r=c[m+20>>2]|0;if((r|0)!=0){cq(r)}r=c[m+24>>2]|0;if((r|0)!=0){cq(r)}Gd(h);r=c[o>>2]|0;if((r|0)==0){i=d;return}Q=c[p>>2]|0;if((Q|0)!=(r|0)){c[p>>2]=Q+(~(((Q-12+(-r|0)|0)>>>0)/12|0)*12|0)}bq(r);i=d;return}}while(0);bc(8392,8160,131,15904)}function Gd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=a+16|0;d=c[b>>2]|0;if((d|0)==0){return}e=a+12|0;f=c[e>>2]|0;g=f+4|0;h=c[g>>2]|0;i=c[d>>2]|0;c[g>>2]=i;g=a+4|0;if((c[g>>2]|0)>1){j=a+24|0;k=a+20|0;l=1;m=h;h=i;while(1){i=l+1|0;n=f+(i<<2)|0;o=c[n>>2]|0;p=f+(l<<2)|0;q=d+(l<<2)|0;do{if((m-h|0)>0){if((c[q>>2]|0)<=0){r=h;break}s=c[j>>2]|0;t=c[k>>2]|0;u=0;v=h;while(1){w=u+m|0;c[s+(v+u<<2)>>2]=c[s+(w<<2)>>2];c[t+((c[p>>2]|0)+u<<2)>>2]=c[t+(w<<2)>>2];w=u+1|0;x=c[p>>2]|0;if((w|0)<(c[q>>2]|0)){u=w;v=x}else{r=x;break}}}else{r=h}}while(0);p=(c[q>>2]|0)+r|0;c[n>>2]=p;if((i|0)<(c[g>>2]|0)){l=i;m=o;h=p}else{break}}}Vp(d);c[b>>2]=0;b=a+20|0;Jd(b,c[(c[e>>2]|0)+(c[g>>2]<<2)>>2]|0,0.0);g=a+32|0;e=c[a+28>>2]|0;if(!((c[g>>2]|0)>>>0>e>>>0)){return}d=Na(e|0,4)|0;h=J?-1:d;d=aq(h)|0;m=aq(h)|0;h=b|0;b=c[h>>2]|0;l=b;r=e<<2;sq(d|0,l|0,r)|0;k=a+24|0;a=c[k>>2]|0;sq(m|0,a|0,r)|0;if((b|0)==0){y=a}else{cq(l);y=c[k>>2]|0}if((y|0)!=0){cq(y)}c[h>>2]=d;c[k>>2]=m;c[g>>2]=e;return}function Hd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;do{if((a[d|0]|0)!=0){e=c[d+8>>2]|0;f=c[e+4>>2]|0;c[b+8>>2]=c[e+8>>2];c[b+28>>2]=0;e=b+4|0;g=c[e>>2]|0;do{if((g|0)!=(f|0)|(g|0)==0){h=b+12|0;Vp(c[h>>2]|0);i=Up((f<<2)+4|0)|0;c[h>>2]=i;if((i|0)==0){id();return 0}else{c[e>>2]=f;break}}}while(0);g=b+16|0;i=c[g>>2]|0;if((i|0)==0){j=f}else{Vp(i);c[g>>2]=0;j=c[e>>2]|0}tq(c[b+12>>2]|0,0,(j<<2)+4|0)|0;i=c[g>>2]|0;if((i|0)==0){break}Vp(i);c[g>>2]=0}}while(0);return Kd(b|0,d)|0}function Id(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;g=c[b+4>>2]|0;b=c[g+4>>2]|0;h=c[g+8>>2]|0;g=h<<2;j=g+4|0;k=Up(j)|0;l=k;if((k|0)==0){id();return 0}tq(k|0,0,j|0)|0;if(!((h|0)>-1)){bc(9184,11608,138,15568);return 0}j=(h|0)>0;if(j){tq(k|0,0,g|0)|0}k=f+4|0;m=c[k>>2]|0;if((m|0)>0){n=c[f+24>>2]|0;o=c[f+12>>2]|0;p=c[f+16>>2]|0;if((p|0)==0){q=0;r=m;while(1){s=c[o+(q<<2)>>2]|0;t=c[o+(q+1<<2)>>2]|0;if((s|0)<(t|0)){u=s;do{s=l+(c[n+(u<<2)>>2]<<2)|0;c[s>>2]=(c[s>>2]|0)+1;u=u+1|0;}while((u|0)<(t|0));v=c[k>>2]|0}else{v=r}t=q+1|0;if((t|0)<(v|0)){q=t;r=v}else{break}}}else{v=0;r=m;while(1){m=c[o+(v<<2)>>2]|0;q=c[p+(v<<2)>>2]|0;t=q+m|0;if((q|0)>0){q=m;do{m=l+(c[n+(q<<2)>>2]<<2)|0;c[m>>2]=(c[m>>2]|0)+1;q=q+1|0;}while((q|0)<(t|0));w=c[k>>2]|0}else{w=r}t=v+1|0;if((t|0)<(w|0)){v=t;r=w}else{break}}}}if(h>>>0>1073741823>>>0){id();return 0}if((Zp(e,16,g)|0)==0){x=c[e>>2]|0}else{c[e>>2]=0;x=0}if(!((x|0)!=0|(g|0)==0)){id();return 0}g=x;do{if(j){e=0;w=0;do{r=l+(w<<2)|0;v=c[r>>2]|0;c[r>>2]=e;c[g+(w<<2)>>2]=e;e=v+e|0;w=w+1|0;}while((w|0)<(h|0));c[l+(h<<2)>>2]=e;if((e|0)==0){y=0;z=0;A=0;B=0;break}w=~~(+(e>>>0>>>0)*0.0)+e|0;v=Na(w|0,4)|0;r=J?-1:v;v=aq(r)|0;y=v;z=aq(r)|0;A=w;B=e}else{c[l+(h<<2)>>2]=0;y=0;z=0;A=0;B=0}}while(0);j=c[k>>2]|0;a:do{if((j|0)>0){w=c[f+20>>2]|0;r=c[f+24>>2]|0;v=c[f+12>>2]|0;n=c[f+16>>2]|0;p=(n|0)==0;o=0;t=j;b:while(1){q=c[v+(o<<2)>>2]|0;if(p){C=c[v+(o+1<<2)>>2]|0}else{C=(c[n+(o<<2)>>2]|0)+q|0}if((q|0)<(C|0)){m=q;do{q=c[r+(m<<2)>>2]|0;if(!((q|0)>-1&(h|0)>(q|0))){break b}u=g+(q<<2)|0;q=c[u>>2]|0;c[u>>2]=q+1;c[z+(q<<2)>>2]=o;c[y+(q<<2)>>2]=c[w+(m<<2)>>2];m=m+1|0;}while((m|0)<(C|0));D=c[k>>2]|0}else{D=t}m=o+1|0;if((m|0)<(D|0)){o=m;t=D}else{break a}}bc(5200,3952,378,15792);return 0}}while(0);D=a+12|0;k=c[D>>2]|0;c[D>>2]=l;c[a+8>>2]=b;c[a+4>>2]=h;h=a+16|0;b=c[h>>2]|0;c[h>>2]=0;h=a+20|0;l=c[h>>2]|0;c[h>>2]=y;y=a+24|0;h=c[y>>2]|0;c[y>>2]=z;c[a+28>>2]=B;c[a+32>>2]=A;Vp(x);Vp(k);Vp(b);if((l|0)!=0){cq(l)}if((h|0)==0){i=d;return a|0}cq(h);i=d;return a|0}function Jd(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=a+12|0;if(!((c[e>>2]|0)>>>0<b>>>0)){f=a+8|0;c[f>>2]=b;return}g=~~(+(b>>>0>>>0)*d)+b|0;h=Na(g|0,4)|0;i=J?-1:h;h=aq(i)|0;j=aq(i)|0;i=a+8|0;k=c[i>>2]|0;l=a|0;m=c[l>>2]|0;n=m;o=(k>>>0<g>>>0?k:g)<<2;sq(h|0,n|0,o)|0;k=a+4|0;a=c[k>>2]|0;sq(j|0,a|0,o)|0;if((m|0)==0){p=a}else{cq(n);p=c[k>>2]|0}if((p|0)!=0){cq(p)}c[l>>2]=h;c[k>>2]=j;c[e>>2]=g;f=i;c[f>>2]=b;return}function Kd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=c[d+8>>2]|0;f=c[e+4>>2]|0;if((a[d|0]|0)==0){Md(b,d);g=b;return g|0}h=b;i=b+8|0;c[i>>2]=c[e+8>>2];e=b+28|0;c[e>>2]=0;j=b+4|0;k=c[j>>2]|0;do{if((k|0)!=(f|0)|(k|0)==0){l=b+12|0;Vp(c[l>>2]|0);m=Up((f<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id();return 0}else{c[j>>2]=f;break}}}while(0);k=b+16|0;m=c[k>>2]|0;if((m|0)==0){n=f}else{Vp(m);c[k>>2]=0;n=c[j>>2]|0}m=b+12|0;tq(c[m>>2]|0,0,(n<<2)+4|0)|0;c[e>>2]=0;tq(c[m>>2]|0,0,(c[j>>2]<<2)+4|0)|0;n=c[k>>2]|0;if((n|0)!=0){tq(n|0,0,c[j>>2]<<2|0)|0}n=c[i>>2]|0;i=c[j>>2]|0;Ld(h,((n|0)<(i|0)?i:n)<<1);a:do{if((f|0)>0){n=d|0;i=n+4|0;l=n+8|0;n=b+20|0;o=n;p=b+24|0;q=n;n=0;b:while(1){r=c[m>>2]|0;s=c[r+(n<<2)>>2]|0;if((s|0)!=(c[e>>2]|0)){t=14;break}u=n+1|0;v=r+(u<<2)|0;if((c[v>>2]|0)!=0){t=16;break}c[v>>2]=s;s=c[i>>2]|0;v=c[s+20>>2]|0;r=c[s+24>>2]|0;w=c[s+12>>2]|0;x=c[w+(n<<2)>>2]|0;y=c[s+16>>2]|0;if((y|0)==0){z=c[w+(u<<2)>>2]|0}else{z=(c[y+(n<<2)>>2]|0)+x|0}y=c[l>>2]|0;w=c[y+20>>2]|0;s=c[y+24>>2]|0;A=c[y+12>>2]|0;B=c[A+(n<<2)>>2]|0;C=c[y+16>>2]|0;if((C|0)==0){D=c[A+(u<<2)>>2]|0}else{D=(c[C+(n<<2)>>2]|0)+B|0}C=(x|0)<(z|0);c:do{if(C){A=c[r+(x<<2)>>2]|0;do{if((B|0)<(D|0)){y=c[s+(B<<2)>>2]|0;if((A|0)==(y|0)){E=x+1|0;F=B+1|0;G=(c[w+(B<<2)>>2]|0)+(c[v+(x<<2)>>2]|0)|0;H=A;t=34;break c}else{if((A|0)<(y|0)){break}else{t=29;break c}}}}while(0);E=x+1|0;F=B;G=c[v+(x<<2)>>2]|0;H=A;t=34}else{t=29}}while(0);do{if((t|0)==29){t=0;if((B|0)>=(D|0)){break}if(C){y=c[s+(B<<2)>>2]|0;if((c[r+(x<<2)>>2]|0)>(y|0)){I=y}else{break}}else{I=c[s+(B<<2)>>2]|0}E=x;F=B+1|0;G=c[w+(B<<2)>>2]|0;H=I;t=34}}while(0);d:do{if((t|0)==34){t=0;if((H|0)>-1){J=H;K=G;L=F;M=E}else{break}while(1){B=(L|0)<(D|0);x=s+(L<<2)|0;C=J;y=K;N=M;while(1){O=(N|0)<(z|0);P=r+(N<<2)|0;Q=c[m>>2]|0;R=Q+(u<<2)|0;S=c[R>>2]|0;if((S|0)!=(c[e>>2]|0)){t=37;break b}if((S|0)!=(c[Q+(n<<2)>>2]|0)){if((c[(c[p>>2]|0)+(S-1<<2)>>2]|0)>=(C|0)){t=40;break b}}c[R>>2]=S+1;R=c[e>>2]|0;Jd(o,R+1|0,1.0);Q=c[q>>2]|0;c[Q+(R<<2)>>2]=0;c[(c[p>>2]|0)+(R<<2)>>2]=C;c[Q+(S<<2)>>2]=y;if(!O){T=0;t=49;break}U=c[P>>2]|0;if(B){O=c[x>>2]|0;if((U|0)==(O|0)){t=44;break}if((U|0)>=(O|0)){T=1;t=49;break}}if(!((U|0)>-1)){break d}C=U;y=c[v+(N<<2)>>2]|0;N=N+1|0}if((t|0)==44){t=0;V=N+1|0;W=(c[w+(L<<2)>>2]|0)+(c[v+(N<<2)>>2]|0)|0;X=U}else if((t|0)==49){t=0;if(!B){break d}if(T){y=c[x>>2]|0;if((c[P>>2]|0)>(y|0)){Y=y}else{break d}}else{Y=c[x>>2]|0}V=N;W=c[w+(L<<2)>>2]|0;X=Y}if((X|0)>-1){J=X;K=W;L=L+1|0;M=V}else{break}}}}while(0);if((u|0)<(f|0)){n=u}else{break a}}if((t|0)==14){bc(7128,7632,405,15976);return 0}else if((t|0)==16){bc(6888,7632,406,15976);return 0}else if((t|0)==37){bc(7816,7632,383,16032);return 0}else if((t|0)==40){bc(7296,7632,384,16032);return 0}}}while(0);if((c[k>>2]|0)!=0){g=h;return g|0}k=c[e>>2]|0;e=c[j>>2]|0;t=e;while(1){if(!((t|0)>-1)){break}if((c[(c[m>>2]|0)+(t<<2)>>2]|0)==0){t=t-1|0}else{break}}f=t+1|0;if((f|0)>(e|0)){g=h;return g|0}e=c[m>>2]|0;m=f;while(1){c[e+(m<<2)>>2]=k;f=m+1|0;if((f|0)>(c[j>>2]|0)){g=h;break}else{m=f}}return g|0}function Ld(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((c[a+16>>2]|0)!=0){bc(6640,7632,258,16e3)}d=c[a+28>>2]|0;e=d+b|0;b=a+32|0;if(!(e>>>0>(c[b>>2]|0)>>>0)){return}f=Na(e|0,4)|0;g=J?-1:f;f=aq(g)|0;h=aq(g)|0;g=a+20|0;i=c[g>>2]|0;j=i;k=(d>>>0<e>>>0?d:e)<<2;sq(f|0,j|0,k)|0;d=a+24|0;a=c[d>>2]|0;sq(h|0,a|0,k)|0;if((i|0)==0){l=a}else{cq(j);l=c[d>>2]|0}if((l|0)!=0){cq(l)}c[g>>2]=f;c[d>>2]=h;c[b>>2]=e;return}function Md(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;e=i;i=i+40|0;f=e|0;g=c[d+8>>2]|0;h=c[g+4>>2]|0;j=c[g+8>>2]|0;g=f|0;a[g]=0;k=f+4|0;tq(k|0,0,32)|0;c[f+8>>2]=j;j=f+28|0;c[j>>2]=0;l=f+12|0;m=Up((h<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id()}c[k>>2]=h;n=f+16|0;tq(m|0,0,(h<<2)+4|0)|0;m=c[b+8>>2]|0;o=c[b+4>>2]|0;if((c[n>>2]|0)!=0){bc(6640,7632,258,16e3)}p=c[j>>2]|0;q=p+(((m|0)<(o|0)?o:m)<<1)|0;m=f+32|0;if(q>>>0>(c[m>>2]|0)>>>0){o=Na(q|0,4)|0;r=J?-1:o;o=aq(r)|0;s=aq(r)|0;r=f+20|0;t=c[r>>2]|0;u=t;v=(p>>>0<q>>>0?p:q)<<2;sq(o|0,u|0,v)|0;p=f+24|0;w=c[p>>2]|0;sq(s|0,w|0,v)|0;if((t|0)==0){x=w}else{cq(u);x=c[p>>2]|0}if((x|0)!=0){cq(x)}c[r>>2]=o;c[p>>2]=s;c[m>>2]=q}a:do{if((h|0)>0){q=d|0;s=q+4|0;p=q+8|0;q=f+24|0;o=f+20|0;r=0;b:while(1){x=c[l>>2]|0;u=c[x+(r<<2)>>2]|0;if((u|0)!=(c[j>>2]|0)){y=24;break}w=r+1|0;t=x+(w<<2)|0;if((c[t>>2]|0)!=0){y=27;break}c[t>>2]=u;u=c[s>>2]|0;t=c[u+20>>2]|0;x=c[u+24>>2]|0;v=c[u+12>>2]|0;z=c[v+(r<<2)>>2]|0;A=c[u+16>>2]|0;if((A|0)==0){B=c[v+(w<<2)>>2]|0}else{B=(c[A+(r<<2)>>2]|0)+z|0}A=c[p>>2]|0;v=c[A+20>>2]|0;u=c[A+24>>2]|0;C=c[A+12>>2]|0;D=c[C+(r<<2)>>2]|0;E=c[A+16>>2]|0;if((E|0)==0){F=c[C+(w<<2)>>2]|0}else{F=(c[E+(r<<2)>>2]|0)+D|0}E=(z|0)<(B|0);c:do{if(E){C=c[x+(z<<2)>>2]|0;do{if((D|0)<(F|0)){A=c[u+(D<<2)>>2]|0;if((C|0)==(A|0)){G=z+1|0;H=D+1|0;I=(c[v+(D<<2)>>2]|0)+(c[t+(z<<2)>>2]|0)|0;K=C;y=46;break c}else{if((C|0)<(A|0)){break}else{y=41;break c}}}}while(0);G=z+1|0;H=D;I=c[t+(z<<2)>>2]|0;K=C;y=46}else{y=41}}while(0);do{if((y|0)==41){y=0;if((D|0)>=(F|0)){break}if(E){A=c[u+(D<<2)>>2]|0;if((c[x+(z<<2)>>2]|0)>(A|0)){L=A}else{break}}else{L=c[u+(D<<2)>>2]|0}G=z;H=D+1|0;I=c[v+(D<<2)>>2]|0;K=L;y=46}}while(0);d:do{if((y|0)==46){y=0;if((K|0)>-1){M=K;N=I;O=H;P=G}else{break}while(1){D=(O|0)<(F|0);z=u+(O<<2)|0;E=M;A=N;Q=P;while(1){R=(Q|0)<(B|0);S=x+(Q<<2)|0;T=c[l>>2]|0;U=T+(w<<2)|0;V=c[U>>2]|0;if((V|0)!=(c[j>>2]|0)){y=49;break b}if((V|0)!=(c[T+(r<<2)>>2]|0)){if((c[(c[q>>2]|0)+(V-1<<2)>>2]|0)>=(E|0)){y=53;break b}}c[U>>2]=V+1;U=c[j>>2]|0;T=U+1|0;if((c[m>>2]|0)>>>0<T>>>0){W=~~+(T>>>0>>>0)+T|0;X=Na(W|0,4)|0;Y=J?-1:X;X=aq(Y)|0;Z=X;_=aq(Y)|0;Y=_;$=c[o>>2]|0;aa=$;ba=(U>>>0<W>>>0?U:W)<<2;sq(X|0,aa|0,ba)|0;X=c[q>>2]|0;sq(_|0,X|0,ba)|0;if(($|0)==0){ca=X}else{cq(aa);ca=c[q>>2]|0}if((ca|0)!=0){cq(ca)}c[o>>2]=Z;c[q>>2]=Y;c[m>>2]=W;da=Z;ea=Y}else{da=c[o>>2]|0;ea=c[q>>2]|0}c[j>>2]=T;c[da+(U<<2)>>2]=0;c[ea+(U<<2)>>2]=E;c[da+(V<<2)>>2]=A;if(!R){fa=0;y=72;break}ga=c[S>>2]|0;if(D){R=c[z>>2]|0;if((ga|0)==(R|0)){y=67;break}if((ga|0)>=(R|0)){fa=1;y=72;break}}if(!((ga|0)>-1)){break d}E=ga;A=c[t+(Q<<2)>>2]|0;Q=Q+1|0}if((y|0)==67){y=0;ha=Q+1|0;ia=(c[v+(O<<2)>>2]|0)+(c[t+(Q<<2)>>2]|0)|0;ja=ga}else if((y|0)==72){y=0;if(!D){break d}if(fa){A=c[z>>2]|0;if((c[S>>2]|0)>(A|0)){ka=A}else{break d}}else{ka=c[z>>2]|0}ha=Q;ia=c[v+(O<<2)>>2]|0;ja=ka}if((ja|0)>-1){M=ja;N=ia;O=O+1|0;P=ha}else{break}}}}while(0);if((w|0)<(h|0)){r=w}else{break a}}if((y|0)==24){bc(7128,7632,405,15976)}else if((y|0)==27){bc(6888,7632,406,15976)}else if((y|0)==49){bc(7816,7632,383,16032)}else if((y|0)==53){bc(7296,7632,384,16032)}}}while(0);do{if((c[n>>2]|0)==0){y=c[j>>2]|0;h=c[k>>2]|0;ha=c[l>>2]|0;P=h;while(1){if(!((P|0)>-1)){break}if((c[ha+(P<<2)>>2]|0)==0){P=P-1|0}else{break}}O=P+1|0;if((O|0)>(h|0)){break}else{la=O}do{c[ha+(la<<2)>>2]=y;la=la+1|0;}while((la|0)<=(c[k>>2]|0))}}while(0);a[g]=1;Nd(b,f)|0;Vp(c[l>>2]|0);Vp(c[n>>2]|0);n=c[f+20>>2]|0;if((n|0)!=0){cq(n)}n=c[f+24>>2]|0;if((n|0)==0){i=e;return}cq(n);i=e;return}function Nd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((a[d|0]|0)!=0){e=b+12|0;f=d+12|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+8|0;f=d+8|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+4|0;f=d+4|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+16|0;f=d+16|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+20|0;f=d+20|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+24|0;f=d+24|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+28|0;f=d+28|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+32|0;f=d+32|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;return b|0}if((b|0)==(d|0)){return b|0}e=c[d+4>>2]|0;c[b+8>>2]=c[d+8>>2];f=b+28|0;c[f>>2]=0;g=b+4|0;h=c[g>>2]|0;do{if((h|0)!=(e|0)|(h|0)==0){i=b+12|0;Vp(c[i>>2]|0);j=Up((e<<2)+4|0)|0;c[i>>2]=j;if((j|0)==0){id();return 0}else{c[g>>2]=e;break}}}while(0);h=b+16|0;j=c[h>>2]|0;if((j|0)==0){k=e}else{Vp(j);c[h>>2]=0;k=c[g>>2]|0}j=b+12|0;tq(c[j>>2]|0,0,(k<<2)+4|0)|0;k=c[h>>2]|0;if((k|0)!=0){Vp(k);c[h>>2]=0}if((c[d+16>>2]|0)==0){sq(c[j>>2]|0,c[d+12>>2]|0,(c[g>>2]<<2)+4|0)|0;g=b+20|0;Jd(g,c[d+28>>2]|0,0.0);sq(c[g>>2]|0,c[d+20>>2]|0,c[f>>2]<<2)|0;sq(c[b+24>>2]|0,c[d+24>>2]|0,c[f>>2]<<2)|0;return b|0}else{Od(b|0,d)|0;return b|0}return 0}function Od(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=c[d+4>>2]|0;if((a[d|0]|0)==0){Pd(b,d);f=b;return f|0}g=b;h=b+8|0;c[h>>2]=c[d+8>>2];i=b+28|0;c[i>>2]=0;j=b+4|0;k=c[j>>2]|0;do{if((k|0)!=(e|0)|(k|0)==0){l=b+12|0;Vp(c[l>>2]|0);m=Up((e<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id();return 0}else{c[j>>2]=e;break}}}while(0);k=b+16|0;m=c[k>>2]|0;if((m|0)==0){n=e}else{Vp(m);c[k>>2]=0;n=c[j>>2]|0}m=b+12|0;tq(c[m>>2]|0,0,(n<<2)+4|0)|0;c[i>>2]=0;tq(c[m>>2]|0,0,(c[j>>2]<<2)+4|0)|0;n=c[k>>2]|0;if((n|0)!=0){tq(n|0,0,c[j>>2]<<2|0)|0}n=c[h>>2]|0;h=c[j>>2]|0;Ld(g,((n|0)<(h|0)?h:n)<<1);a:do{if((e|0)>0){n=d+20|0;h=d+24|0;l=d+12|0;o=d+16|0;p=b+20|0;q=p;r=b+24|0;s=p;p=0;b:while(1){t=c[m>>2]|0;u=c[t+(p<<2)>>2]|0;if((u|0)!=(c[i>>2]|0)){v=14;break}w=p+1|0;x=t+(w<<2)|0;if((c[x>>2]|0)!=0){v=16;break}c[x>>2]=u;x=c[n>>2]|0;y=c[h>>2]|0;z=c[l>>2]|0;A=c[z+(p<<2)>>2]|0;B=c[o>>2]|0;if((B|0)==0){C=c[z+(w<<2)>>2]|0}else{C=(c[B+(p<<2)>>2]|0)+A|0}c:do{if((A|0)<(C|0)){B=A;z=t;D=u;while(1){E=c[x+(B<<2)>>2]|0;F=c[y+(B<<2)>>2]|0;G=z+(w<<2)|0;if((D|0)!=(c[i>>2]|0)){v=22;break b}if((D|0)!=(c[z+(p<<2)>>2]|0)){if((c[(c[r>>2]|0)+(D-1<<2)>>2]|0)>=(F|0)){v=25;break b}}c[G>>2]=D+1;G=c[i>>2]|0;Jd(q,G+1|0,1.0);H=c[s>>2]|0;c[H+(G<<2)>>2]=0;c[(c[r>>2]|0)+(G<<2)>>2]=F;c[H+(D<<2)>>2]=E;E=B+1|0;if((E|0)>=(C|0)){break c}H=c[m>>2]|0;B=E;z=H;D=c[H+(w<<2)>>2]|0}}}while(0);if((w|0)<(e|0)){p=w}else{break a}}if((v|0)==14){bc(7128,7632,405,15976);return 0}else if((v|0)==16){bc(6888,7632,406,15976);return 0}else if((v|0)==22){bc(7816,7632,383,16032);return 0}else if((v|0)==25){bc(7296,7632,384,16032);return 0}}}while(0);if((c[k>>2]|0)!=0){f=g;return f|0}k=c[i>>2]|0;i=c[j>>2]|0;v=i;while(1){if(!((v|0)>-1)){break}if((c[(c[m>>2]|0)+(v<<2)>>2]|0)==0){v=v-1|0}else{break}}e=v+1|0;if((e|0)>(i|0)){f=g;return f|0}i=c[m>>2]|0;m=e;while(1){c[i+(m<<2)>>2]=k;e=m+1|0;if((e|0)>(c[j>>2]|0)){f=g;break}else{m=e}}return f|0}function Pd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;e=i;i=i+40|0;f=e|0;g=c[d+4>>2]|0;h=c[d+8>>2]|0;j=f|0;a[j]=0;k=f+4|0;tq(k|0,0,32)|0;c[f+8>>2]=h;h=f+28|0;c[h>>2]=0;l=f+12|0;m=Up((g<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id()}c[k>>2]=g;n=f+16|0;tq(m|0,0,(g<<2)+4|0)|0;m=c[b+8>>2]|0;o=c[b+4>>2]|0;if((c[n>>2]|0)!=0){bc(6640,7632,258,16e3)}p=c[h>>2]|0;q=p+(((m|0)<(o|0)?o:m)<<1)|0;m=f+32|0;if(q>>>0>(c[m>>2]|0)>>>0){o=Na(q|0,4)|0;r=J?-1:o;o=aq(r)|0;s=aq(r)|0;r=f+20|0;t=c[r>>2]|0;u=t;v=(p>>>0<q>>>0?p:q)<<2;sq(o|0,u|0,v)|0;p=f+24|0;w=c[p>>2]|0;sq(s|0,w|0,v)|0;if((t|0)==0){x=w}else{cq(u);x=c[p>>2]|0}if((x|0)!=0){cq(x)}c[r>>2]=o;c[p>>2]=s;c[m>>2]=q}a:do{if((g|0)>0){q=d+20|0;s=d+24|0;p=d+12|0;o=d+16|0;r=f+24|0;x=f+20|0;u=0;b:while(1){w=c[l>>2]|0;t=c[w+(u<<2)>>2]|0;if((t|0)!=(c[h>>2]|0)){y=24;break}v=u+1|0;z=w+(v<<2)|0;if((c[z>>2]|0)!=0){y=27;break}c[z>>2]=t;z=c[q>>2]|0;A=c[s>>2]|0;B=c[p>>2]|0;C=c[B+(u<<2)>>2]|0;D=c[o>>2]|0;if((D|0)==0){E=c[B+(v<<2)>>2]|0}else{E=(c[D+(u<<2)>>2]|0)+C|0}c:do{if((C|0)<(E|0)){D=C;B=w;F=t;while(1){G=c[z+(D<<2)>>2]|0;H=c[A+(D<<2)>>2]|0;I=B+(v<<2)|0;if((F|0)!=(c[h>>2]|0)){y=34;break b}if((F|0)!=(c[B+(u<<2)>>2]|0)){if((c[(c[r>>2]|0)+(F-1<<2)>>2]|0)>=(H|0)){y=38;break b}}c[I>>2]=F+1;I=c[h>>2]|0;K=I+1|0;if((c[m>>2]|0)>>>0<K>>>0){L=~~+(K>>>0>>>0)+K|0;M=Na(L|0,4)|0;N=J?-1:M;M=aq(N)|0;O=M;P=aq(N)|0;N=P;Q=c[x>>2]|0;R=Q;S=(I>>>0<L>>>0?I:L)<<2;sq(M|0,R|0,S)|0;M=c[r>>2]|0;sq(P|0,M|0,S)|0;if((Q|0)==0){T=M}else{cq(R);T=c[r>>2]|0}if((T|0)!=0){cq(T)}c[x>>2]=O;c[r>>2]=N;c[m>>2]=L;U=O;V=N}else{U=c[x>>2]|0;V=c[r>>2]|0}c[h>>2]=K;c[U+(I<<2)>>2]=0;c[V+(I<<2)>>2]=H;c[U+(F<<2)>>2]=G;G=D+1|0;if((G|0)>=(E|0)){break c}H=c[l>>2]|0;D=G;B=H;F=c[H+(v<<2)>>2]|0}}}while(0);if((v|0)<(g|0)){u=v}else{break a}}if((y|0)==24){bc(7128,7632,405,15976)}else if((y|0)==27){bc(6888,7632,406,15976)}else if((y|0)==34){bc(7816,7632,383,16032)}else if((y|0)==38){bc(7296,7632,384,16032)}}}while(0);do{if((c[n>>2]|0)==0){y=c[h>>2]|0;g=c[k>>2]|0;E=c[l>>2]|0;U=g;while(1){if(!((U|0)>-1)){break}if((c[E+(U<<2)>>2]|0)==0){U=U-1|0}else{break}}V=U+1|0;if((V|0)>(g|0)){break}else{W=V}do{c[E+(W<<2)>>2]=y;W=W+1|0;}while((W|0)<=(c[k>>2]|0))}}while(0);a[j]=1;Nd(b,f)|0;Vp(c[l>>2]|0);Vp(c[n>>2]|0);n=c[f+20>>2]|0;if((n|0)!=0){cq(n)}n=c[f+24>>2]|0;if((n|0)==0){i=e;return}cq(n);i=e;return}function Qd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+56|0;g=f|0;h=f+8|0;j=f+48|0;k=e+8|0;l=c[k>>2]|0;m=e+4|0;n=c[m>>2]|0;a[h|0]=0;o=h+4|0;tq(o|0,0,32)|0;c[h+8>>2]=n;c[h+28>>2]=0;n=Up((l<<2)+4|0)|0;c[h+12>>2]=n;if((n|0)==0){id()}c[o>>2]=l;o=h+16|0;p=h+12|0;tq(n|0,0,(l<<2)+4|0)|0;n=b|0;b=d|0;if((c[n>>2]|0)!=(c[b>>2]|0)){d=j|0;if(l>>>0>1073741823>>>0){id()}q=l<<2;if((Zp(g,16,q)|0)==0){r=c[g>>2]|0}else{c[g>>2]=0;r=0}if(!((r|0)!=0|(q|0)==0)){id()}q=r;c[d>>2]=q;g=j+4|0;c[g>>2]=l;if(!((l|0)>-1)){bc(10928,10424,225,15592)}c[g>>2]=l;if((l|0)>0){tq(r|0,0,l<<2|0)|0}r=c[n>>2]|0;g=c[b>>2]|0;a:do{if((r|0)!=(g|0)){s=r;while(1){t=c[s>>2]|0;if(!((t|0)>-1)){u=25;break}if((t|0)>=(c[k>>2]|0)){u=25;break}v=c[s+4>>2]|0;if(!((v|0)>-1)){u=25;break}if((v|0)>=(c[m>>2]|0)){u=25;break}if((l|0)<=(t|0)){u=31;break}v=q+(t<<2)|0;c[v>>2]=(c[v>>2]|0)+1;s=s+12|0;if((s|0)==(g|0)){break a}}if((u|0)==25){bc(6288,7632,952,15480)}else if((u|0)==31){bc(5200,3952,394,15760)}}}while(0);Td(h,j);j=c[n>>2]|0;n=c[b>>2]|0;b:do{if((j|0)!=(n|0)){b=c[o>>2]|0;u=c[p>>2]|0;g=c[h+24>>2]|0;q=c[h+20>>2]|0;if((b|0)==0){bc(5984,7632,842,15920)}else{w=j}while(1){l=c[w>>2]|0;m=b+(l<<2)|0;k=c[m>>2]|0;r=c[u+(l<<2)>>2]|0;if((k|0)>((c[u+(l+1<<2)>>2]|0)-r|0)){break}l=c[w+4>>2]|0;s=c[w+8>>2]|0;c[m>>2]=k+1;m=r+k|0;c[g+(m<<2)>>2]=l;c[q+(m<<2)>>2]=s;w=w+12|0;if((w|0)==(n|0)){break b}}bc(5744,7632,843,15920)}}while(0);Rd(h);Vp(c[d>>2]|0)}Sd(e,h|0)|0;Vp(c[p>>2]|0);Vp(c[o>>2]|0);o=c[h+20>>2]|0;if((o|0)!=0){cq(o)}o=c[h+24>>2]|0;if((o|0)==0){i=f;return}cq(o);i=f;return}function Rd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+8|0;d=b|0;e=a+16|0;if((c[e>>2]|0)==0){bc(5984,7632,1020,15944)}f=c[a+8>>2]|0;if(f>>>0>1073741823>>>0){id()}g=f<<2;if((Zp(d,16,g)|0)==0){h=c[d>>2]|0}else{c[d>>2]=0;h=0}if(!((h|0)!=0|(g|0)==0)){id()}g=h;if(!((f|0)>-1)){bc(10928,10424,225,15592)}if((f|0)>0){tq(h|0,-1|0,f<<2|0)|0}d=a+4|0;j=c[d>>2]|0;k=a+12|0;l=c[k>>2]|0;m=c[e>>2]|0;a:do{if((j|0)>0){n=a+24|0;o=a+20|0;p=0;q=0;b:while(1){r=l+(p<<2)|0;s=c[r>>2]|0;t=c[m+(p<<2)>>2]|0;u=t+s|0;if((t|0)>0){t=c[n>>2]|0;v=s;s=q;while(1){w=t+(v<<2)|0;x=c[w>>2]|0;if(!((x|0)>-1&(f|0)>(x|0))){break b}y=g+(x<<2)|0;x=c[y>>2]|0;z=c[o>>2]|0;A=c[z+(v<<2)>>2]|0;if((x|0)<(q|0)){c[z+(s<<2)>>2]=A;c[t+(s<<2)>>2]=c[w>>2];c[y>>2]=s;B=s+1|0}else{y=z+(x<<2)|0;c[y>>2]=(c[y>>2]|0)+A;B=s}A=v+1|0;if((A|0)<(u|0)){v=A;s=B}else{C=B;break}}}else{C=q}c[r>>2]=q;s=p+1|0;v=c[d>>2]|0;if((s|0)<(v|0)){p=s;q=C}else{D=C;E=v;break a}}bc(5200,3952,394,15760)}else{D=0;E=j}}while(0);c[l+(E<<2)>>2]=D;Vp(m);c[e>>2]=0;Jd(a+20|0,c[(c[k>>2]|0)+(c[d>>2]<<2)>>2]|0,0.0);Vp(h);i=b;return}function Sd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;i=i+8|0;e=d|0;f=b+4|0;g=c[f>>2]|0;h=c[b+8>>2]|0;j=h<<2;k=j+4|0;l=Up(k)|0;m=l;if((l|0)==0){id();return 0}tq(l|0,0,k|0)|0;if(!((h|0)>-1)){bc(9184,11608,138,15568);return 0}k=(h|0)>0;if(k){tq(l|0,0,j|0)|0}if((g|0)>0){l=c[b+24>>2]|0;n=c[b+12>>2]|0;o=c[b+16>>2]|0;if((o|0)==0){p=0;do{q=c[n+(p<<2)>>2]|0;r=c[n+(p+1<<2)>>2]|0;if((q|0)<(r|0)){s=q;do{q=m+(c[l+(s<<2)>>2]<<2)|0;c[q>>2]=(c[q>>2]|0)+1;s=s+1|0;}while((s|0)<(r|0))}p=p+1|0;}while((p|0)<(g|0))}else{p=0;do{r=c[n+(p<<2)>>2]|0;s=c[o+(p<<2)>>2]|0;q=s+r|0;if((s|0)>0){s=r;do{r=m+(c[l+(s<<2)>>2]<<2)|0;c[r>>2]=(c[r>>2]|0)+1;s=s+1|0;}while((s|0)<(q|0))}p=p+1|0;}while((p|0)<(g|0))}}if(h>>>0>1073741823>>>0){id();return 0}if((Zp(e,16,j)|0)==0){t=c[e>>2]|0}else{c[e>>2]=0;t=0}if(!((t|0)!=0|(j|0)==0)){id();return 0}j=t;do{if(k){e=0;p=0;do{l=m+(p<<2)|0;o=c[l>>2]|0;c[l>>2]=e;c[j+(p<<2)>>2]=e;e=o+e|0;p=p+1|0;}while((p|0)<(h|0));c[m+(h<<2)>>2]=e;if((e|0)==0){u=0;v=0;w=0;x=0;break}p=~~(+(e>>>0>>>0)*0.0)+e|0;o=Na(p|0,4)|0;l=J?-1:o;o=aq(l)|0;u=o;v=aq(l)|0;w=p;x=e}else{c[m+(h<<2)>>2]=0;u=0;v=0;w=0;x=0}}while(0);k=c[f>>2]|0;a:do{if((k|0)>0){p=c[b+20>>2]|0;l=c[b+24>>2]|0;o=c[b+12>>2]|0;n=c[b+16>>2]|0;b:do{if((n|0)==0){q=0;s=k;while(1){r=c[o+(q<<2)>>2]|0;y=c[o+(q+1<<2)>>2]|0;if((r|0)<(y|0)){z=r;do{r=c[l+(z<<2)>>2]|0;if(!((r|0)>-1&(h|0)>(r|0))){break b}A=j+(r<<2)|0;r=c[A>>2]|0;c[A>>2]=r+1;c[v+(r<<2)>>2]=q;c[u+(r<<2)>>2]=c[p+(z<<2)>>2];z=z+1|0;}while((z|0)<(y|0));B=c[f>>2]|0}else{B=s}y=q+1|0;if((y|0)<(B|0)){q=y;s=B}else{break a}}}else{s=0;q=k;while(1){y=c[o+(s<<2)>>2]|0;z=c[n+(s<<2)>>2]|0;r=z+y|0;if((z|0)>0){z=y;do{y=c[l+(z<<2)>>2]|0;if(!((y|0)>-1&(h|0)>(y|0))){break b}A=j+(y<<2)|0;y=c[A>>2]|0;c[A>>2]=y+1;c[v+(y<<2)>>2]=s;c[u+(y<<2)>>2]=c[p+(z<<2)>>2];z=z+1|0;}while((z|0)<(r|0));C=c[f>>2]|0}else{C=q}r=s+1|0;if((r|0)<(C|0)){s=r;q=C}else{break a}}}}while(0);bc(5200,3952,378,15792);return 0}}while(0);C=a+12|0;f=c[C>>2]|0;c[C>>2]=m;c[a+8>>2]=g;c[a+4>>2]=h;h=a+16|0;g=c[h>>2]|0;c[h>>2]=0;h=a+20|0;m=c[h>>2]|0;c[h>>2]=u;u=a+24|0;h=c[u>>2]|0;c[u>>2]=v;c[a+28>>2]=x;c[a+32>>2]=w;Vp(t);Vp(f);Vp(g);if((m|0)!=0){cq(m)}if((h|0)==0){i=d;return a|0}cq(h);i=d;return a|0}function Td(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=a+16|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;h=g<<2;if((e|0)!=0){i=Up(h+4|0)|0;j=i;if((i|0)==0){id()}a:do{if((g|0)>0){i=c[a+12>>2]|0;k=b+4|0;l=b|0;m=0;n=0;while(1){c[j+(n<<2)>>2]=m;o=n+1|0;p=c[e+(n<<2)>>2]|0;q=(c[i+(o<<2)>>2]|0)-(c[i+(n<<2)>>2]|0)-p|0;if((c[k>>2]|0)<=(n|0)){break}r=c[(c[l>>2]|0)+(n<<2)>>2]|0;s=p+m+((r|0)<(q|0)?q:r)|0;if((o|0)<(g|0)){m=s;n=o}else{t=s;break a}}bc(5200,3952,156,15792)}else{t=0}}while(0);c[j+(g<<2)>>2]=t;e=a+20|0;Jd(e,t,0.0);t=c[f>>2]|0;n=c[a+12>>2]|0;if((t|0)>0){m=a+24|0;l=e|0;e=t;do{e=e-1|0;t=j+(e<<2)|0;k=c[t>>2]|0;i=n+(e<<2)|0;s=c[i>>2]|0;b:do{if((k-s|0)>0){o=c[(c[d>>2]|0)+(e<<2)>>2]|0;if((o|0)<=0){break}r=c[m>>2]|0;q=c[l>>2]|0;p=o;o=k;u=s;while(1){v=p-1|0;c[r+(o+v<<2)>>2]=c[r+(u+v<<2)>>2];c[q+((c[t>>2]|0)+v<<2)>>2]=c[q+((c[i>>2]|0)+v<<2)>>2];if((v|0)<=0){break b}p=v;o=c[t>>2]|0;u=c[i>>2]|0}}}while(0);}while((e|0)>0)}c[a+12>>2]=j;Vp(n);return}n=Up(h)|0;h=n;c[d>>2]=h;if((n|0)==0){id()}c:do{if((g|0)>0){n=b+4|0;j=b|0;e=a+12|0;l=0;m=0;i=0;while(1){c[h+(l<<2)>>2]=m;if((c[n>>2]|0)<=(l|0)){break}t=c[(c[j>>2]|0)+(l<<2)>>2]|0;s=l+1|0;k=c[e>>2]|0;u=t+m-(c[k+(l<<2)>>2]|0)+(c[k+(s<<2)>>2]|0)|0;k=t+i|0;if((s|0)<(g|0)){l=s;m=u;i=k}else{w=k;break c}}bc(5200,3952,156,15792)}else{w=0}}while(0);i=a+20|0;m=c[a+28>>2]|0;l=m+w|0;w=a+32|0;if(l>>>0>(c[w>>2]|0)>>>0){e=Na(l|0,4)|0;j=J?-1:e;e=aq(j)|0;n=aq(j)|0;j=i|0;k=c[j>>2]|0;u=k;s=(m>>>0<l>>>0?m:l)<<2;sq(e|0,u|0,s)|0;m=a+24|0;t=c[m>>2]|0;sq(n|0,t|0,s)|0;if((k|0)==0){x=t}else{cq(u);x=c[m>>2]|0}if((x|0)!=0){cq(x)}c[j>>2]=e;c[m>>2]=n;c[w>>2]=l;y=c[f>>2]|0}else{y=g}g=c[a+12>>2]|0;if((y|0)>0){l=c[d>>2]|0;w=a+24|0;a=i|0;n=c[g+(y<<2)>>2]|0;m=y;while(1){e=m-1|0;j=g+(e<<2)|0;x=c[j>>2]|0;u=n-x|0;if((u|0)>0){t=c[w>>2]|0;k=h+(e<<2)|0;s=c[a>>2]|0;o=u;p=x;while(1){q=o-1|0;c[t+((c[k>>2]|0)+q<<2)>>2]=c[t+(p+q<<2)>>2];c[s+((c[k>>2]|0)+q<<2)>>2]=c[s+((c[j>>2]|0)+q<<2)>>2];r=c[j>>2]|0;if((q|0)>0){o=q;p=r}else{z=r;A=k;break}}}else{z=x;A=h+(e<<2)|0}c[j>>2]=c[A>>2];c[l+(e<<2)>>2]=u;if((e|0)>0){n=z;m=e}else{break}}B=c[f>>2]|0;C=l}else{B=y;C=c[d>>2]|0}d=B-1|0;y=(c[C+(d<<2)>>2]|0)+(c[g+(d<<2)>>2]|0)|0;if((B|0)<=0){bc(5200,3952,156,15792)}if((c[b+4>>2]|0)<=(d|0)){bc(5200,3952,156,15792)}c[g+(B<<2)>>2]=y+(c[(c[b>>2]|0)+(d<<2)>>2]|0);Jd(i,c[g+(c[f>>2]<<2)>>2]|0,0.0);return}function Ud(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=(h|0)/12|0;j=i+1|0;if(j>>>0>357913941>>>0){Wm(0)}k=a+8|0;a=((c[k>>2]|0)-g|0)/12|0;if(a>>>0<178956970>>>0){g=a<<1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=357913941;o=5}if((o|0)==5){l=$p(n*12|0)|0;m=n}n=l+(i*12|0)|0;if((n|0)!=0){o=n;n=b;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2]}n=l+((((h|0)/-12|0)+i|0)*12|0)|0;i=f;sq(n|0,i|0,h)|0;c[e>>2]=n;c[d>>2]=l+(j*12|0);c[k>>2]=l+(m*12|0);if((f|0)==0){return}bq(i);return}function Vd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;if(!((f|0)>-1)){bc(14040,15240,241,15672)}b=a+4|0;if((c[b>>2]|0)==(f|0)){c[b>>2]=f;i=d;return}g=a|0;Vp(c[g>>2]|0);if((f|0)==0){c[g>>2]=0;c[b>>2]=f;i=d;return}if(f>>>0>268435455>>>0){id()}a=f<<4;if((Zp(e,16,a)|0)==0){h=c[e>>2]|0}else{c[e>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[b>>2]=f;i=d;return}function Wd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+120|0;e=d|0;f=d+40|0;g=d+56|0;h=d+96|0;j=d+104|0;k=b+112|0;l=k|0;a[h|0]=0;c[h+4>>2]=k;a[g|0]=0;tq(g+4|0,0,32)|0;Id(g,h|0)|0;h=g|0;a[f|0]=0;c[f+4>>2]=k;c[f+8>>2]=g;do{if((c[l+8>>2]|0)==(c[h+8>>2]|0)){if((c[l+4>>2]|0)!=(c[h+4>>2]|0)){break}a[e|0]=0;k=e+4|0;tq(k|0,0,32)|0;Yd(e,f|0)|0;Vp(c[g+12>>2]|0);Vp(c[g+16>>2]|0);m=c[g+20>>2]|0;if((m|0)!=0){cq(m)}m=c[g+24>>2]|0;if((m|0)!=0){cq(m)}Gd(e);m=e+16|0;n=c[m>>2]|0;do{if((n|0)==0){o=c[e+28>>2]|0}else{p=c[k>>2]|0;if(!((p|0)>-1)){bc(13912,13152,138,15576)}if((p|0)==0){o=0;break}q=c[n>>2]|0;if((p|0)>1){r=q;s=1}else{o=q;break}while(1){q=(c[n+(s<<2)>>2]|0)+r|0;t=s+1|0;if((t|0)<(p|0)){r=q;s=t}else{o=q;break}}}}while(0);n=c[b+128>>2]|0;do{if((n|0)==0){u=c[b+140>>2]|0}else{p=c[b+116>>2]|0;if(!((p|0)>-1)){bc(13912,13152,138,15576)}if((p|0)==0){u=0;break}q=c[n>>2]|0;if((p|0)>1){v=q;w=1}else{u=q;break}while(1){q=(c[n+(w<<2)>>2]|0)+v|0;t=w+1|0;if((t|0)<(p|0)){v=q;w=t}else{u=q;break}}}}while(0);n=o-u|0;p=b+68|0;c[p>>2]=n;q=b+60|0;t=j|0;c[t>>2]=n;x=j+8|0;c[x>>2]=0;if(!((n|0)>-1)){bc(3680,2600,63,15808)}Xd(q|0,j);n=b+64|0;y=c[n>>2]|0;if((y|0)!=(c[t>>2]|0)){bc(15304,13224,498,15400)}if((y|0)>0){t=c[q>>2]|0;z=c[x>>2]|0;x=0;do{c[t+(x<<2)>>2]=z;x=x+1|0;}while((x|0)<(y|0))}y=c[k>>2]|0;a:do{if((y|0)>0){x=c[e+20>>2]|0;z=c[e+24>>2]|0;t=c[e+12>>2]|0;A=c[m>>2]|0;b:do{if((A|0)==0){B=0;while(1){C=c[t+(B+1<<2)>>2]|0;D=c[t+(B<<2)>>2]|0;while(1){if((D|0)>=(C|0)){break}if((c[x+(D<<2)>>2]|0)==1){E=D;F=B;break b}else{D=D+1|0}}D=B+1|0;if((D|0)<(y|0)){B=D}else{G=0;break a}}}else{B=0;while(1){D=c[t+(B<<2)>>2]|0;C=(c[A+(B<<2)>>2]|0)+D|0;H=D;while(1){if((H|0)>=(C|0)){break}if((c[x+(H<<2)>>2]|0)==1){E=H;F=B;break b}else{H=H+1|0}}H=B+1|0;if((H|0)<(y|0)){B=H}else{G=0;break a}}}}while(0);if((c[n>>2]|0)<=0){bc(9464,9024,378,15712)}x=c[q>>2]|0;c[x>>2]=F;A=c[z+(E<<2)>>2]|0;if((c[n>>2]|0)>1){c[x+4>>2]=A;G=A;break}bc(9464,9024,378,15712)}else{G=0}}while(0);y=c[p>>2]|0;c:do{if((y|0)>2){k=e+20|0;A=c[k>>2]|0;x=c[e+24>>2]|0;t=e+12|0;B=c[t>>2]|0;H=c[m>>2]|0;C=(H|0)==0;D=q|0;I=G;J=2;K=2;L=y;while(1){M=c[B+(I<<2)>>2]|0;if(C){N=c[B+(I+1<<2)>>2]|0}else{N=(c[H+(I<<2)>>2]|0)+M|0}O=M;while(1){if((O|0)>=(N|0)){P=J;Q=I;R=L;break}if((c[A+(O<<2)>>2]|0)==1){S=82;break}else{O=O+1|0}}if((S|0)==82){S=0;M=c[x+(O<<2)>>2]|0;if(!((J|0)>-1)){break}if((c[n>>2]|0)<=(J|0)){break}c[(c[D>>2]|0)+(J<<2)>>2]=M;P=J+1|0;Q=M;R=c[p>>2]|0}M=K+1|0;if((M|0)<(R|0)){I=Q;J=P;K=M;L=R}else{T=t;U=k;break c}}bc(9464,9024,378,15712)}else{T=e+12|0;U=e+20|0}}while(0);Vp(c[T>>2]|0);Vp(c[m>>2]|0);p=c[U>>2]|0;if((p|0)!=0){cq(p)}p=c[e+24>>2]|0;if((p|0)==0){i=d;return}cq(p);i=d;return}}while(0);bc(10360,9856,131,15872)}function Xd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;f=c[b>>2]|0;if(!((f|0)>-1)){bc(4152,5256,241,15664)}b=a+4|0;if((c[b>>2]|0)==(f|0)){c[b>>2]=f;i=d;return}g=a|0;Vp(c[g>>2]|0);if((f|0)==0){c[g>>2]=0;c[b>>2]=f;i=d;return}if(f>>>0>1073741823>>>0){id()}a=f<<2;if((Zp(e,16,a)|0)==0){h=c[e>>2]|0}else{c[e>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[b>>2]=f;i=d;return}function Yd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;do{if((a[d|0]|0)!=0){e=c[d+8>>2]|0;f=c[e+4>>2]|0;c[b+8>>2]=c[e+8>>2];c[b+28>>2]=0;e=b+4|0;g=c[e>>2]|0;do{if((g|0)!=(f|0)|(g|0)==0){h=b+12|0;Vp(c[h>>2]|0);i=Up((f<<2)+4|0)|0;c[h>>2]=i;if((i|0)==0){id();return 0}else{c[e>>2]=f;break}}}while(0);g=b+16|0;i=c[g>>2]|0;if((i|0)==0){j=f}else{Vp(i);c[g>>2]=0;j=c[e>>2]|0}tq(c[b+12>>2]|0,0,(j<<2)+4|0)|0;i=c[g>>2]|0;if((i|0)==0){break}Vp(i);c[g>>2]=0}}while(0);return Zd(b|0,d)|0}function Zd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=c[d+8>>2]|0;f=c[e+4>>2]|0;if((a[d|0]|0)==0){_d(b,d);g=b;return g|0}h=b;i=b+8|0;c[i>>2]=c[e+8>>2];e=b+28|0;c[e>>2]=0;j=b+4|0;k=c[j>>2]|0;do{if((k|0)!=(f|0)|(k|0)==0){l=b+12|0;Vp(c[l>>2]|0);m=Up((f<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id();return 0}else{c[j>>2]=f;break}}}while(0);k=b+16|0;m=c[k>>2]|0;if((m|0)==0){n=f}else{Vp(m);c[k>>2]=0;n=c[j>>2]|0}m=b+12|0;tq(c[m>>2]|0,0,(n<<2)+4|0)|0;c[e>>2]=0;tq(c[m>>2]|0,0,(c[j>>2]<<2)+4|0)|0;n=c[k>>2]|0;if((n|0)!=0){tq(n|0,0,c[j>>2]<<2|0)|0}n=c[i>>2]|0;i=c[j>>2]|0;Ld(h,((n|0)<(i|0)?i:n)<<1);a:do{if((f|0)>0){n=d|0;i=n+4|0;l=n+8|0;n=b+20|0;o=n;p=b+24|0;q=n;n=0;b:while(1){r=c[m>>2]|0;s=c[r+(n<<2)>>2]|0;if((s|0)!=(c[e>>2]|0)){t=14;break}u=n+1|0;v=r+(u<<2)|0;if((c[v>>2]|0)!=0){t=16;break}c[v>>2]=s;s=c[i>>2]|0;v=c[s+20>>2]|0;r=c[s+24>>2]|0;w=c[s+12>>2]|0;x=c[w+(n<<2)>>2]|0;y=c[s+16>>2]|0;if((y|0)==0){z=c[w+(u<<2)>>2]|0}else{z=(c[y+(n<<2)>>2]|0)+x|0}y=c[l>>2]|0;w=c[y+20>>2]|0;s=c[y+24>>2]|0;A=c[y+12>>2]|0;B=c[A+(n<<2)>>2]|0;C=c[y+16>>2]|0;if((C|0)==0){D=c[A+(u<<2)>>2]|0}else{D=(c[C+(n<<2)>>2]|0)+B|0}C=(x|0)<(z|0);c:do{if(C){A=c[r+(x<<2)>>2]|0;do{if((B|0)<(D|0)){y=c[s+(B<<2)>>2]|0;if((A|0)==(y|0)){E=x+1|0;F=B+1|0;G=(c[v+(x<<2)>>2]|0)-(c[w+(B<<2)>>2]|0)|0;H=A;t=34;break c}else{if((A|0)<(y|0)){break}else{t=29;break c}}}}while(0);E=x+1|0;F=B;G=c[v+(x<<2)>>2]|0;H=A;t=34}else{t=29}}while(0);do{if((t|0)==29){t=0;if((B|0)>=(D|0)){break}if(C){y=c[s+(B<<2)>>2]|0;if((c[r+(x<<2)>>2]|0)>(y|0)){I=y}else{break}}else{I=c[s+(B<<2)>>2]|0}E=x;F=B+1|0;G=-(c[w+(B<<2)>>2]|0)|0;H=I;t=34}}while(0);d:do{if((t|0)==34){t=0;if((H|0)>-1){J=H;K=G;L=F;M=E}else{break}while(1){B=(L|0)<(D|0);x=s+(L<<2)|0;C=J;y=K;N=M;while(1){O=(N|0)<(z|0);P=r+(N<<2)|0;Q=c[m>>2]|0;R=Q+(u<<2)|0;S=c[R>>2]|0;if((S|0)!=(c[e>>2]|0)){t=37;break b}if((S|0)!=(c[Q+(n<<2)>>2]|0)){if((c[(c[p>>2]|0)+(S-1<<2)>>2]|0)>=(C|0)){t=40;break b}}c[R>>2]=S+1;R=c[e>>2]|0;Jd(o,R+1|0,1.0);Q=c[q>>2]|0;c[Q+(R<<2)>>2]=0;c[(c[p>>2]|0)+(R<<2)>>2]=C;c[Q+(S<<2)>>2]=y;if(!O){T=0;t=49;break}U=c[P>>2]|0;if(B){O=c[x>>2]|0;if((U|0)==(O|0)){t=44;break}if((U|0)>=(O|0)){T=1;t=49;break}}if(!((U|0)>-1)){break d}C=U;y=c[v+(N<<2)>>2]|0;N=N+1|0}if((t|0)==44){t=0;V=N+1|0;W=(c[v+(N<<2)>>2]|0)-(c[w+(L<<2)>>2]|0)|0;X=U}else if((t|0)==49){t=0;if(!B){break d}if(T){y=c[x>>2]|0;if((c[P>>2]|0)>(y|0)){Y=y}else{break d}}else{Y=c[x>>2]|0}V=N;W=-(c[w+(L<<2)>>2]|0)|0;X=Y}if((X|0)>-1){J=X;K=W;L=L+1|0;M=V}else{break}}}}while(0);if((u|0)<(f|0)){n=u}else{break a}}if((t|0)==14){bc(11016,11536,405,15960);return 0}else if((t|0)==16){bc(10840,11536,406,15960);return 0}else if((t|0)==37){bc(12160,11536,383,16008);return 0}else if((t|0)==40){bc(11168,11536,384,16008);return 0}}}while(0);if((c[k>>2]|0)!=0){g=h;return g|0}k=c[e>>2]|0;e=c[j>>2]|0;t=e;while(1){if(!((t|0)>-1)){break}if((c[(c[m>>2]|0)+(t<<2)>>2]|0)==0){t=t-1|0}else{break}}f=t+1|0;if((f|0)>(e|0)){g=h;return g|0}e=c[m>>2]|0;m=f;while(1){c[e+(m<<2)>>2]=k;f=m+1|0;if((f|0)>(c[j>>2]|0)){g=h;break}else{m=f}}return g|0}function _d(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;e=i;i=i+40|0;f=e|0;g=c[d+8>>2]|0;h=c[g+4>>2]|0;j=c[g+8>>2]|0;g=f|0;a[g]=0;k=f+4|0;tq(k|0,0,32)|0;c[f+8>>2]=j;j=f+28|0;c[j>>2]=0;l=f+12|0;m=Up((h<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id()}c[k>>2]=h;n=f+16|0;tq(m|0,0,(h<<2)+4|0)|0;m=c[b+8>>2]|0;o=c[b+4>>2]|0;if((c[n>>2]|0)!=0){bc(10624,11536,258,15992)}p=c[j>>2]|0;q=p+(((m|0)<(o|0)?o:m)<<1)|0;m=f+32|0;if(q>>>0>(c[m>>2]|0)>>>0){o=Na(q|0,4)|0;r=J?-1:o;o=aq(r)|0;s=aq(r)|0;r=f+20|0;t=c[r>>2]|0;u=t;v=(p>>>0<q>>>0?p:q)<<2;sq(o|0,u|0,v)|0;p=f+24|0;w=c[p>>2]|0;sq(s|0,w|0,v)|0;if((t|0)==0){x=w}else{cq(u);x=c[p>>2]|0}if((x|0)!=0){cq(x)}c[r>>2]=o;c[p>>2]=s;c[m>>2]=q}a:do{if((h|0)>0){q=d|0;s=q+4|0;p=q+8|0;q=f+24|0;o=f+20|0;r=0;b:while(1){x=c[l>>2]|0;u=c[x+(r<<2)>>2]|0;if((u|0)!=(c[j>>2]|0)){y=24;break}w=r+1|0;t=x+(w<<2)|0;if((c[t>>2]|0)!=0){y=27;break}c[t>>2]=u;u=c[s>>2]|0;t=c[u+20>>2]|0;x=c[u+24>>2]|0;v=c[u+12>>2]|0;z=c[v+(r<<2)>>2]|0;A=c[u+16>>2]|0;if((A|0)==0){B=c[v+(w<<2)>>2]|0}else{B=(c[A+(r<<2)>>2]|0)+z|0}A=c[p>>2]|0;v=c[A+20>>2]|0;u=c[A+24>>2]|0;C=c[A+12>>2]|0;D=c[C+(r<<2)>>2]|0;E=c[A+16>>2]|0;if((E|0)==0){F=c[C+(w<<2)>>2]|0}else{F=(c[E+(r<<2)>>2]|0)+D|0}E=(z|0)<(B|0);c:do{if(E){C=c[x+(z<<2)>>2]|0;do{if((D|0)<(F|0)){A=c[u+(D<<2)>>2]|0;if((C|0)==(A|0)){G=z+1|0;H=D+1|0;I=(c[t+(z<<2)>>2]|0)-(c[v+(D<<2)>>2]|0)|0;K=C;y=46;break c}else{if((C|0)<(A|0)){break}else{y=41;break c}}}}while(0);G=z+1|0;H=D;I=c[t+(z<<2)>>2]|0;K=C;y=46}else{y=41}}while(0);do{if((y|0)==41){y=0;if((D|0)>=(F|0)){break}if(E){A=c[u+(D<<2)>>2]|0;if((c[x+(z<<2)>>2]|0)>(A|0)){L=A}else{break}}else{L=c[u+(D<<2)>>2]|0}G=z;H=D+1|0;I=-(c[v+(D<<2)>>2]|0)|0;K=L;y=46}}while(0);d:do{if((y|0)==46){y=0;if((K|0)>-1){M=K;N=I;O=H;P=G}else{break}while(1){D=(O|0)<(F|0);z=u+(O<<2)|0;E=M;A=N;Q=P;while(1){R=(Q|0)<(B|0);S=x+(Q<<2)|0;T=c[l>>2]|0;U=T+(w<<2)|0;V=c[U>>2]|0;if((V|0)!=(c[j>>2]|0)){y=49;break b}if((V|0)!=(c[T+(r<<2)>>2]|0)){if((c[(c[q>>2]|0)+(V-1<<2)>>2]|0)>=(E|0)){y=53;break b}}c[U>>2]=V+1;U=c[j>>2]|0;T=U+1|0;if((c[m>>2]|0)>>>0<T>>>0){W=~~+(T>>>0>>>0)+T|0;X=Na(W|0,4)|0;Y=J?-1:X;X=aq(Y)|0;Z=X;_=aq(Y)|0;Y=_;$=c[o>>2]|0;aa=$;ba=(U>>>0<W>>>0?U:W)<<2;sq(X|0,aa|0,ba)|0;X=c[q>>2]|0;sq(_|0,X|0,ba)|0;if(($|0)==0){ca=X}else{cq(aa);ca=c[q>>2]|0}if((ca|0)!=0){cq(ca)}c[o>>2]=Z;c[q>>2]=Y;c[m>>2]=W;da=Z;ea=Y}else{da=c[o>>2]|0;ea=c[q>>2]|0}c[j>>2]=T;c[da+(U<<2)>>2]=0;c[ea+(U<<2)>>2]=E;c[da+(V<<2)>>2]=A;if(!R){fa=0;y=72;break}ga=c[S>>2]|0;if(D){R=c[z>>2]|0;if((ga|0)==(R|0)){y=67;break}if((ga|0)>=(R|0)){fa=1;y=72;break}}if(!((ga|0)>-1)){break d}E=ga;A=c[t+(Q<<2)>>2]|0;Q=Q+1|0}if((y|0)==67){y=0;ha=Q+1|0;ia=(c[t+(Q<<2)>>2]|0)-(c[v+(O<<2)>>2]|0)|0;ja=ga}else if((y|0)==72){y=0;if(!D){break d}if(fa){A=c[z>>2]|0;if((c[S>>2]|0)>(A|0)){ka=A}else{break d}}else{ka=c[z>>2]|0}ha=Q;ia=-(c[v+(O<<2)>>2]|0)|0;ja=ka}if((ja|0)>-1){M=ja;N=ia;O=O+1|0;P=ha}else{break}}}}while(0);if((w|0)<(h|0)){r=w}else{break a}}if((y|0)==24){bc(11016,11536,405,15960)}else if((y|0)==27){bc(10840,11536,406,15960)}else if((y|0)==49){bc(12160,11536,383,16008)}else if((y|0)==53){bc(11168,11536,384,16008)}}}while(0);do{if((c[n>>2]|0)==0){y=c[j>>2]|0;h=c[k>>2]|0;ha=c[l>>2]|0;P=h;while(1){if(!((P|0)>-1)){break}if((c[ha+(P<<2)>>2]|0)==0){P=P-1|0}else{break}}O=P+1|0;if((O|0)>(h|0)){break}else{la=O}do{c[ha+(la<<2)>>2]=y;la=la+1|0;}while((la|0)<=(c[k>>2]|0))}}while(0);a[g]=1;Nd(b,f)|0;Vp(c[l>>2]|0);Vp(c[n>>2]|0);n=c[f+20>>2]|0;if((n|0)!=0){cq(n)}n=c[f+24>>2]|0;if((n|0)==0){i=e;return}cq(n);i=e;return}function $d(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0;e=i;i=i+16|0;f=e|0;g=e+8|0;j=b+8|0;k=c[j>>2]|0;if(!((k|0)>-1)){bc(6056,1096,268,15688);return 0}l=a+4|0;do{if((c[l>>2]|0)!=(k|0)){m=a|0;Vp(c[m>>2]|0);if((k|0)==0){c[m>>2]=0;break}if(k>>>0>268435455>>>0){id();return 0}n=k<<4;if((Zp(f,16,n)|0)==0){o=c[f>>2]|0}else{c[f>>2]=0;o=0}if((o|0)!=0|(n|0)==0){c[m>>2]=o;break}else{id();return 0}}}while(0);c[l>>2]=k;ae(g,b);if((c[j>>2]|0)<=0){p=c[g>>2]|0;q=p;Vp(q);i=e;return 0}k=b+4|0;o=b|0;f=b+28|0;m=b+24|0;b=d+4|0;n=d|0;d=c[g+4>>2]|0;r=c[g>>2]|0;g=a|0;a=0;while(1){s=c[k>>2]|0;if((s|0)<=(a|0)){t=18;break}u=c[o>>2]|0;v=c[u+(a<<2)>>2]|0;if(!((v|0)>-1)){t=22;break}w=c[f>>2]|0;if((w|0)<=(v|0)){t=22;break}x=c[m>>2]|0;y=+h[x+(v<<4)>>3];z=+h[x+(v<<4)+8>>3];A=c[u+(s+a<<2)>>2]|0;if(!((A|0)>-1&(w|0)>(A|0))){t=25;break}B=+h[x+(A<<4)>>3];C=+h[x+(A<<4)+8>>3];D=c[u+((s<<1)+a<<2)>>2]|0;if(!((D|0)>-1&(w|0)>(D|0))){t=28;break}E=+h[x+(D<<4)>>3];F=+h[x+(D<<4)+8>>3];x=c[b>>2]|0;if((x|0)<=(v|0)){t=31;break}w=c[n>>2]|0;G=+h[w+(v<<4)>>3];H=+h[w+(v<<4)+8>>3];if((x|0)<=(A|0)){t=34;break}I=+h[w+(A<<4)>>3];J=+h[w+(A<<4)+8>>3];if((x|0)<=(D|0)){t=37;break}K=+h[w+(D<<4)>>3];L=+h[w+(D<<4)+8>>3];M=C-F;N=z-F;F=z-C;if((d|0)<=(a|0)){t=40;break}C=+h[r+(a<<3)>>3];z=(M*G-N*I+F*K)/C*.5;O=y-E;P=B-E;E=y-B;B=(O*J-P*H-E*L)/C*.5;y=(O*I-P*G-E*K)/C*.5;K=(M*H-N*J+F*L)/C*.5;C=z+B;L=K-y;F=C*C+L*L;J=z-B;B=y+K;if((c[l>>2]|0)<=(a|0)){t=43;break}D=c[g>>2]|0;h[D+(a<<4)>>3]=(J*C+B*L)/F;h[D+(a<<4)+8>>3]=(C*B-J*L)/F;D=a+1|0;if((D|0)<(c[j>>2]|0)){a=D}else{p=r;t=46;break}}if((t|0)==18){bc(5816,6408,114,15368);return 0}else if((t|0)==22){bc(6720,6408,173,15368);return 0}else if((t|0)==25){bc(6720,6408,173,15368);return 0}else if((t|0)==28){bc(6720,6408,173,15368);return 0}else if((t|0)==31){bc(6720,6408,173,15368);return 0}else if((t|0)==34){bc(6720,6408,173,15368);return 0}else if((t|0)==37){bc(6720,6408,173,15368);return 0}else if((t|0)==40){bc(6720,6408,378,15776);return 0}else if((t|0)==43){bc(6720,6408,378,15776);return 0}else if((t|0)==46){q=p;Vp(q);i=e;return 0}return 0}function ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0;d=i;i=i+8|0;e=d|0;f=b+8|0;g=c[f>>2]|0;if(g>>>0>536870911>>>0){id()}j=g<<3;if((Zp(e,16,j)|0)==0){k=c[e>>2]|0}else{c[e>>2]=0;k=0}if(!((k|0)!=0|(j|0)==0)){id()}j=k;c[a>>2]=j;c[a+4>>2]=g;if(!((g|0)>-1)){bc(7264,6992,138,15608)}a=c[f>>2]|0;if((a|0)<=0){i=d;return}f=b+4|0;k=b|0;e=b+12|0;l=b+16|0;b=0;while(1){m=c[f>>2]|0;if((m|0)<=(b|0)){n=15;break}o=c[k>>2]|0;p=c[o+(b<<2)>>2]|0;q=c[o+(m+b<<2)>>2]|0;r=c[o+((m<<1)+b<<2)>>2]|0;m=c[e>>2]|0;if(!((q|0)>-1)){n=19;break}o=c[l>>2]|0;if((o|0)<=(q|0)){n=19;break}if(!((p|0)>-1&(o|0)>(p|0))){n=22;break}s=+h[m+(q<<3)>>3];t=+h[m+(p<<3)>>3];u=s-t;v=+h[m+(o+q<<3)>>3];w=+h[m+(o+p<<3)>>3];x=v-w;y=o<<1;z=+h[m+(y+q<<3)>>3];A=+h[m+(y+p<<3)>>3];B=z-A;if(!((r|0)>-1&(o|0)>(r|0))){n=25;break}C=+h[m+(r<<3)>>3];D=C-s;s=+h[m+(o+r<<3)>>3];E=s-v;v=+h[m+(y+r<<3)>>3];F=v-z;z=t-C;C=w-s;s=A-v;v=+V(u*u+(x*x+B*B));B=+V(D*D+(E*E+F*F));F=+V(z*z+(C*C+s*s));s=(v+B+F)*.5;if((g|0)<=(b|0)){n=28;break}h[j+(b<<3)>>3]=+V((s-F)*(s-B)*s*(s-v));r=b+1|0;if((r|0)<(a|0)){b=r}else{n=31;break}}if((n|0)==15){bc(5816,6408,114,15368)}else if((n|0)==19){bc(5440,8208,118,15600)}else if((n|0)==22){bc(5440,8208,118,15600)}else if((n|0)==25){bc(5440,8208,118,15600)}else if((n|0)==28){bc(6720,6408,394,15368)}else if((n|0)==31){i=d;return}}function be(a,b,d,e,f,g,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0.0,ba=0,ca=0.0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0.0,Ta=0,Ua=0.0,Va=0,Wa=0,Xa=0,Ya=0;k=i;i=i+240|0;l=k|0;m=k+16|0;n=k+32|0;o=k+48|0;p=k+56|0;q=k+64|0;r=k+72|0;s=k+80|0;t=k+88|0;u=k+96|0;v=k+104|0;w=k+120|0;x=k+128|0;y=k+144|0;z=k+160|0;A=k+168|0;B=k+176|0;C=k+184|0;D=k+216|0;E=d+60|0;F=d+64|0;G=c[F>>2]|0;H=t|0;if(G>>>0>1073741823>>>0){id();return 0}I=G<<2;if((Zp(r,16,I)|0)==0){J=c[r>>2]|0}else{c[r>>2]=0;J=0}if(!((J|0)!=0|(I|0)==0)){id();return 0}c[H>>2]=J;J=t+4|0;c[J>>2]=G;je(t|0,E);G=c[J>>2]|0;if((G|0)!=(c[F>>2]|0)){bc(2400,1816,498,15432);return 0}if((G|0)>0){J=c[E>>2]|0;I=c[H>>2]|0;r=0;do{c[I+(r<<2)>>2]=c[J+(r<<2)>>2];r=r+1|0;}while((r|0)<(G|0))}ce(s,d,t);Vp(c[H>>2]|0);H=e+4|0;t=(c[F>>2]|0)+(c[H>>2]|0)|0;G=u|0;if(t>>>0>1073741823>>>0){id();return 0}r=t<<2;if((Zp(q,16,r)|0)==0){K=c[q>>2]|0}else{c[q>>2]=0;K=0}if(!((K|0)!=0|(r|0)==0)){id();return 0}r=K;c[G>>2]=r;c[u+4>>2]=t;if(!((t|0)>-1)){bc(7264,6992,138,15608);return 0}q=v|0;c[q>>2]=u;J=v+4|0;c[J>>2]=0;I=v+8|0;c[I>>2]=1;L=v+12|0;M=c[H>>2]|0;c[L>>2]=M;N=(M|0)>-1;if(!((K|0)==0|N)){bc(7920,7696,148,15552);return 0}do{if(N){if((t-M|0)<0){break}if((M|0)>0){K=c[e>>2]|0;O=0;do{c[r+(O<<2)>>2]=c[K+(O<<2)>>2];O=O+1|0;}while((O|0)<(M|0))}de(v,E)|0;do{if(((c[L>>2]|0)+(c[J>>2]|0)|0)==(c[(c[q>>2]|0)+4>>2]|0)){if((c[I>>2]|0)!=1){break}O=(c[F>>2]|0)+(c[H>>2]|0)|0;K=w|0;if(O>>>0>268435455>>>0){id();return 0}P=O<<4;if((Zp(p,16,P)|0)==0){Q=c[p>>2]|0}else{c[p>>2]=0;Q=0}if(!((Q|0)!=0|(P|0)==0)){id();return 0}P=Q;c[K>>2]=P;R=w+4|0;c[R>>2]=O;if(!((O|0)>-1)){bc(7264,6992,138,15608);return 0}S=x|0;c[S>>2]=w;T=x+4|0;c[T>>2]=0;U=x+8|0;c[U>>2]=1;V=x+12|0;W=c[f+4>>2]|0;c[V>>2]=W;X=(W|0)>-1;if(!((Q|0)==0|X)){bc(7920,7696,148,15552);return 0}do{if(X){if((O-W|0)<0){break}Y=f|0;if((W|0)>0){Z=0;do{_=P+(Z<<4)|0;$=(c[Y>>2]|0)+(Z<<4)|0;c[_>>2]=c[$>>2];c[_+4>>2]=c[$+4>>2];c[_+8>>2]=c[$+8>>2];c[_+12>>2]=c[$+12>>2];Z=Z+1|0;}while((Z|0)<(W|0))}ee(x,s)|0;do{if(((c[V>>2]|0)+(c[T>>2]|0)|0)==(c[(c[S>>2]|0)+4>>2]|0)){if((c[U>>2]|0)!=1){break}Z=c[R>>2]|0;aa=+h[g>>3];if(!((Z|0)>-1)){bc(11888,11376,63,15856);return 0}Y=(Z|0)>0;do{if(Y){$=c[K>>2]|0;_=$|0;h[_>>3]=aa*+h[_>>3];if((Z|0)>1){_=1;do{ba=$+(_<<4)|0;h[ba>>3]=aa*+h[ba>>3];_=_+1|0;}while((_|0)<(Z|0));if(!Y){break}}ca=+h[g+8>>3];_=c[K>>2]|0;$=_+8|0;h[$>>3]=ca*+h[$>>3];if((Z|0)>1){da=1}else{break}do{$=_+(da<<4)+8|0;h[$>>3]=ca*+h[$>>3];da=da+1|0;}while((da|0)<(Z|0))}}while(0);Z=c[d+8>>2]|0;Y=y;tq(Y|0,0,16)|0;if(!((Z|0)>-1)){bc(11888,11376,63,15856);return 0}ie(b|0,Z,1);_=b+4|0;if((c[_>>2]|0)!=(Z|0)){bc(2400,1816,498,15432);return 0}if((Z|0)>0){$=b|0;ba=0;do{ea=(c[$>>2]|0)+(ba<<4)|0;c[ea>>2]=c[Y>>2];c[ea+4>>2]=c[Y+4>>2];c[ea+8>>2]=c[Y+8>>2];c[ea+12>>2]=c[Y+12>>2];ba=ba+1|0;}while((ba|0)<(Z|0))}Z=ke(a,d,b,u,w)|0;if((Z|0)!=0){Lb(8)|0;fa=Z;ga=c[K>>2]|0;ha=ga;Vp(ha);ia=c[G>>2]|0;ja=ia;Vp(ja);ka=s|0;la=c[ka>>2]|0;ma=la;Vp(ma);i=k;return fa|0}$d(b,d,a)|0;Z=z|0;c[Z>>2]=0;ba=z+4|0;c[ba>>2]=0;Y=A|0;c[Y>>2]=0;$=A+4|0;c[$>>2]=0;ea=B|0;c[ea>>2]=0;c[B+4>>2]=0;na=j|0;a:do{if(+h[na>>3]<1.0){oa=j+16|0;pa=z|0;qa=b|0;ra=A|0;sa=C+4|0;ta=C+8|0;ua=C+24|0;va=B|0;wa=C;xa=B;ya=D+4|0;za=D+8|0;Aa=D;Ba=j+8|0;Ca=n;Da=l;Ea=l|0;Fa=l+8|0;Ga=m|0;Ha=m+8|0;Ia=0;b:while(1){Ja=Ia+1|0;if(!(+(Ia|0)<+h[oa>>3])){break a}ie(pa,c[_>>2]|0,1);Ka=c[ba>>2]|0;if((Ka|0)!=(c[_>>2]|0)){La=120;break}if((Ka|0)>0){Ma=c[Z>>2]|0;Na=0;do{Oa=Ma+(Na<<4)|0;Pa=(c[qa>>2]|0)+(Na<<4)|0;c[Oa>>2]=c[Pa>>2];c[Oa+4>>2]=c[Pa+4>>2];c[Oa+8>>2]=c[Pa+8>>2];c[Oa+12>>2]=c[Pa+12>>2];Na=Na+1|0;}while((Na|0)<(Ka|0));Qa=c[_>>2]|0}else{Qa=Ka}ie(ra,Qa,1);Na=c[$>>2]|0;if((Na|0)!=(c[_>>2]|0)){La=132;break}if((Na|0)>0){Ra=0}else{La=137;break}do{Ma=(c[Y>>2]|0)+(Ra<<4)|0;Pa=c[qa>>2]|0;if(+db(+(+h[Pa+(Ra<<4)>>3]),+(+h[Pa+(Ra<<4)+8>>3]))>1.0){Pa=c[qa>>2]|0;Oa=Pa+(Ra<<4)|0;c[Da>>2]=c[Oa>>2];c[Da+4>>2]=c[Oa+4>>2];c[Da+8>>2]=c[Oa+8>>2];c[Da+12>>2]=c[Oa+12>>2];h[Ea>>3]=+h[Ea>>3]*.95;h[Fa>>3]=+h[Fa>>3]*.95;h[Ga>>3]=+db(+(+h[Pa+(Ra<<4)>>3]),+(+h[Pa+(Ra<<4)+8>>3]));h[Ha>>3]=0.0;he(n,l,m)}else{Pa=(c[qa>>2]|0)+(Ra<<4)|0;c[Ca>>2]=c[Pa>>2];c[Ca+4>>2]=c[Pa+4>>2];c[Ca+8>>2]=c[Pa+8>>2];c[Ca+12>>2]=c[Pa+12>>2]}Pa=Ma;c[Pa>>2]=c[Ca>>2];c[Pa+4>>2]=c[Ca+4>>2];c[Pa+8>>2]=c[Ca+8>>2];c[Pa+12>>2]=c[Ca+12>>2];Ra=Ra+1|0;}while((Ra|0)<(Na|0));Na=c[$>>2]|0;if((Na|0)<=0){La=137;break}Ka=c[Y>>2]|0;aa=+db(+(+h[Ka>>3]),+(+h[Ka+8>>3]));c:do{if((Na|0)>1){ca=aa;Pa=1;Ma=Ka;while(1){Sa=ca+ +db(+(+h[Ma+(Pa<<4)>>3]),+(+h[Ma+(Pa<<4)+8>>3]));Oa=Pa+1|0;Ta=c[$>>2]|0;if((Oa|0)>=(Ta|0)){Ua=Sa;Va=Ta;break c}ca=Sa;Pa=Oa;Ma=c[Y>>2]|0}}else{Ua=aa;Va=1}}while(0);c[sa>>2]=A;c[ta>>2]=A;h[ua>>3]=Ua/+(Va|0);ie(va,Va,1);ge(xa,wa)|0;ke(a,d,B,u,w)|0;$d(b,d,a)|0;if((c[_>>2]|0)!=(c[ba>>2]|0)){La=147;break}c[ya>>2]=b;c[za>>2]=z;aa=+fe(Aa,o);ca=+h[Ba>>3];Ka=c[_>>2]|0;do{if((Ka|0)==0){Wa=0}else{if((Ka|0)<=0){La=154;break b}Na=c[qa>>2]|0;Ma=+db(+(+h[Na>>3]),+(+h[Na+8>>3]))>ca|0;if((c[_>>2]|0)>1){Xa=Ma;Ya=1}else{Wa=Ma;break}while(1){Ma=c[qa>>2]|0;Na=(+db(+(+h[Ma+(Ya<<4)>>3]),+(+h[Ma+(Ya<<4)+8>>3]))>ca)+Xa|0;Ma=Ya+1|0;if((Ma|0)<(c[_>>2]|0)){Xa=Na;Ya=Ma}else{Wa=Na;break}}}}while(0);Gb(12456,(Ka=i,i=i+24|0,c[Ka>>2]=Ja,h[Ka+8>>3]=aa,c[Ka+16>>2]=Wa,Ka)|0)|0;i=Ka;if(aa>+h[na>>3]){Ia=Ja}else{break a}}if((La|0)==120){bc(2400,1816,498,15432);return 0}else if((La|0)==132){bc(2400,1816,498,15432);return 0}else if((La|0)==137){bc(10464,6e3,175,15528);return 0}else if((La|0)==147){bc(4864,3384,131,15888);return 0}else if((La|0)==154){bc(10464,6e3,175,15528);return 0}}}while(0);Vp(c[ea>>2]|0);Vp(c[Y>>2]|0);Vp(c[Z>>2]|0);fa=0;ga=c[K>>2]|0;ha=ga;Vp(ha);ia=c[G>>2]|0;ja=ia;Vp(ja);ka=s|0;la=c[ka>>2]|0;ma=la;Vp(ma);i=k;return fa|0}}while(0);bc(7472,9760,95,15640);return 0}}while(0);bc(8648,8208,141,15600);return 0}}while(0);bc(7472,9760,95,15640);return 0}}while(0);bc(8648,8208,141,15600);return 0}function ce(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;g=d+4|0;h=c[g>>2]|0;if(h>>>0>268435455>>>0){id()}j=h<<4;if((Zp(f,16,j)|0)==0){k=c[f>>2]|0}else{c[f>>2]=0;k=0}if(!((k|0)!=0|(j|0)==0)){id()}j=k;c[a>>2]=j;c[a+4>>2]=h;if(!((h|0)>-1)){bc(7264,6992,138,15608)}a=c[g>>2]|0;if((a|0)<=0){i=e;return}k=d|0;d=b+28|0;f=b+24|0;b=0;l=a;while(1){if((h|0)<=(b|0)){m=15;break}if((l|0)<=(b|0)){m=18;break}a=c[(c[k>>2]|0)+(b<<2)>>2]|0;if(!((a|0)>-1)){m=22;break}if((c[d>>2]|0)<=(a|0)){m=22;break}n=j+(b<<4)|0;o=(c[f>>2]|0)+(a<<4)|0;c[n>>2]=c[o>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];c[n+12>>2]=c[o+12>>2];o=b+1|0;n=c[g>>2]|0;if((o|0)<(n|0)){b=o;l=n}else{m=25;break}}if((m|0)==15){bc(6720,6408,394,15368)}else if((m|0)==18){bc(6720,6408,378,15776)}else if((m|0)==22){bc(6720,6408,173,15368)}else if((m|0)==25){i=e;return}}function de(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=b+4|0;if((c[d>>2]|0)==0){return a|0}e=a+8|0;f=c[e>>2]|0;g=a|0;do{if((f|0)==1){h=a+12|0;i=a+4|0;j=(c[i>>2]|0)+(c[h>>2]|0)|0;c[i>>2]=j;c[e>>2]=0;i=c[d>>2]|0;c[h>>2]=i;if((j+i|0)<=(c[(c[g>>2]|0)+4>>2]|0)){k=0;break}bc(10216,9760,76,15624);return 0}else{if((f|0)<1){k=f;break}bc(9328,9760,79,15624);return 0}}while(0);f=c[a+12>>2]|0;if((f|0)!=(c[d>>2]|0)){bc(8960,9760,80,15624);return 0}d=c[g>>2]|0;g=c[a+4>>2]|0;i=c[d+4>>2]|0;j=(fa(i,k)|0)+g|0;h=c[d>>2]|0;if(!((h+(j<<2)|0)==0|(f|0)>-1)){bc(7920,7696,148,15552);return 0}if(!((g|f|0)>-1)){bc(8648,8208,141,15600);return 0}if((k|0)>0|((k|0)<0|(i-f|0)<(g|0))){bc(8648,8208,141,15600);return 0}if((f|0)>0){g=c[b>>2]|0;b=0;do{c[h+(b+j<<2)>>2]=c[g+(b<<2)>>2];b=b+1|0;}while((b|0)<(f|0));l=c[e>>2]|0}else{l=k}c[e>>2]=l+1;return a|0}function ee(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=b+4|0;if((c[d>>2]|0)==0){return a|0}e=a+8|0;f=c[e>>2]|0;g=a|0;do{if((f|0)==1){h=a+12|0;i=a+4|0;j=(c[i>>2]|0)+(c[h>>2]|0)|0;c[i>>2]=j;c[e>>2]=0;i=c[d>>2]|0;c[h>>2]=i;if((j+i|0)<=(c[(c[g>>2]|0)+4>>2]|0)){k=0;break}bc(10216,9760,76,15624);return 0}else{if((f|0)<1){k=f;break}bc(9328,9760,79,15624);return 0}}while(0);f=c[a+12>>2]|0;if((f|0)!=(c[d>>2]|0)){bc(8960,9760,80,15624);return 0}d=c[g>>2]|0;g=c[a+4>>2]|0;i=c[d+4>>2]|0;j=(fa(i,k)|0)+g|0;h=c[d>>2]|0;if(!((h+(j<<4)|0)==0|(f|0)>-1)){bc(7920,7696,148,15552);return 0}if(!((g|f|0)>-1)){bc(8648,8208,141,15600);return 0}if((k|0)>0|((k|0)<0|(i-f|0)<(g|0))){bc(8648,8208,141,15600);return 0}g=b;if((f|0)>0){b=0;do{i=h+(b+j<<4)|0;d=(c[g>>2]|0)+(b<<4)|0;c[i>>2]=c[d>>2];c[i+4>>2]=c[d+4>>2];c[i+8>>2]=c[d+8>>2];c[i+12>>2]=c[d+12>>2];b=b+1|0;}while((b|0)<(f|0));l=c[e>>2]|0}else{l=k}c[e>>2]=l+1;return a|0}function fe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0,i=0.0,j=0,k=0,l=0.0,m=0.0;b=a+8|0;d=c[b>>2]|0;if((c[d+4>>2]|0)<=0){bc(10464,6e3,175,15528);return 0.0}e=a+4|0;a=c[c[e>>2]>>2]|0;f=c[d>>2]|0;g=+db(+(+h[a>>3]- +h[f>>3]),+(+h[a+8>>3]- +h[f+8>>3]));f=c[b>>2]|0;if((c[f+4>>2]|0)>1){i=g;j=1;k=f}else{l=g;return+l}while(1){f=c[c[e>>2]>>2]|0;a=c[k>>2]|0;g=+db(+(+h[f+(j<<4)>>3]- +h[a+(j<<4)>>3]),+(+h[f+(j<<4)+8>>3]- +h[a+(j<<4)+8>>3]));m=i<g?g:i;a=j+1|0;f=c[b>>2]|0;if((a|0)<(c[f+4>>2]|0)){i=m;j=a;k=f}else{l=m;break}}return+l}function ge(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0;d=i;i=i+32|0;e=d|0;f=d+16|0;g=c[a+4>>2]|0;j=b+8|0;k=c[j>>2]|0;if((g|0)!=(c[k+4>>2]|0)){bc(2400,1816,498,15432);return 0}l=a;if((g|0)<=0){i=d;return l|0}m=f;n=a;a=b+4|0;o=e|0;p=e+8|0;q=b+24|0;b=f|0;r=f+8|0;s=0;t=k;while(1){k=(c[n>>2]|0)+(s<<4)|0;u=(c[c[a>>2]>>2]|0)+(s<<4)|0;v=c[t>>2]|0;h[o>>3]=+db(+(+h[v+(s<<4)>>3]),+(+h[v+(s<<4)+8>>3]));h[p>>3]=0.0;he(f,u,e);w=+h[q>>3];h[b>>3]=w*+h[b>>3];h[r>>3]=w*+h[r>>3];u=k;c[u>>2]=c[m>>2];c[u+4>>2]=c[m+4>>2];c[u+8>>2]=c[m+8>>2];c[u+12>>2]=c[m+12>>2];u=s+1|0;if((u|0)>=(g|0)){break}s=u;t=c[j>>2]|0}i=d;return l|0}function he(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,i=0,j=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0.0,s=0,t=0.0,u=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0.0,C=0;e=b|0;f=+h[e>>3];g=c[e>>2]|0;i=c[e+4>>2]|0;e=b+8|0;j=+h[e>>3];b=c[e>>2]|0;l=c[e+4>>2]|0;m=+h[d>>3];n=+h[d+8>>3];o=+lp(+qb(+(+U(+m)),+(+U(+n))));h[k>>3]=o;d=c[k>>2]|0;e=c[k+4>>2]|0;p=e&2146435072;q=2146435072;if(p>>>0<q>>>0|p>>>0==q>>>0&(d&0)>>>0<0>>>0){q=~~o;p=-q|0;r=+mq(m,p);s=q;t=+mq(n,p);u=r}else{s=0;t=n;u=m}m=u*u+t*t;p=-s|0;n=+mq((f*u+j*t)/m,p);r=+mq((j*u-f*t)/m,p);h[k>>3]=n;p=c[k+4>>2]&2147483647;s=2146435072;if(!(p>>>0>s>>>0|p>>>0==s>>>0&(c[k>>2]|0)>>>0>0>>>0)){w=r;x=n;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}h[k>>3]=r;s=c[k+4>>2]&2147483647;p=2146435072;if(!(s>>>0>p>>>0|s>>>0==p>>>0&(c[k>>2]|0)>>>0>0>>>0)){w=r;x=n;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}p=g;g=i;i=p|0;s=g&2147483647;do{if(m==0.0){q=2146435072;if(s>>>0>q>>>0|s>>>0==q>>>0&i>>>0>0>>>0){q=l&2147483647;A=2146435072;if(q>>>0>A>>>0|q>>>0==A>>>0&(b|0)>>>0>0>>>0){break}}B=+rb(v,+u);w=j*B;x=f*B;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}}while(0);A=(i|0)==0&(s|0)==2146435072;if(A){C=11}else{if((b|0|0)==0&(l&2147483647|0)==2146435072){C=11}}do{if((C|0)==11){h[k>>3]=u;s=c[k+4>>2]&2146435072;i=2146435072;if(!(s>>>0<i>>>0|s>>>0==i>>>0&(c[k>>2]&0)>>>0<0>>>0)){break}h[k>>3]=t;i=c[k+4>>2]&2146435072;s=2146435072;if(!(i>>>0<s>>>0|i>>>0==s>>>0&(c[k>>2]&0)>>>0<0>>>0)){break}m=+rb(+(A?1.0:0.0),+f);B=+rb(+((b|0|0)==0&(l&2147483647|0)==2146435072?1.0:0.0),+j);w=(u*B-t*m)*v;x=(u*m+t*B)*v;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}}while(0);if(!((d|0|0)==0&(e&2147483647|0)==2146435072&o>0.0)){w=r;x=n;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}e=g&2146435072;g=2146435072;if(!(e>>>0<g>>>0|e>>>0==g>>>0&(p&0)>>>0<0>>>0)){w=r;x=n;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}p=l&2146435072;l=2146435072;if(!(p>>>0<l>>>0|p>>>0==l>>>0&(b&0)>>>0<0>>>0)){w=r;x=n;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}h[k>>3]=u;n=+rb(+((c[k>>2]|0|0)==0&(c[k+4>>2]&2147483647|0)==2146435072?1.0:0.0),+u);h[k>>3]=t;u=+rb(+((c[k>>2]|0|0)==0&(c[k+4>>2]&2147483647|0)==2146435072?1.0:0.0),+t);w=(j*n-f*u)*0.0;x=(f*n+j*u)*0.0;y=a|0;h[y>>3]=x;z=a+8|0;h[z>>3]=w;return}function ie(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==1&(b|0)>-1&(d|0)>-1)){bc(14768,1096,241,15688)}d=a+4|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=b;i=e;return}g=a|0;Vp(c[g>>2]|0);if((b|0)==0){c[g>>2]=0;c[d>>2]=b;i=e;return}if(b>>>0>268435455>>>0){id()}a=b<<4;if((Zp(f,16,a)|0)==0){h=c[f>>2]|0}else{c[f>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[d>>2]=b;i=e;return}function je(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;if(!((f|0)>-1)){bc(14768,1096,241,15688)}b=a+4|0;if((c[b>>2]|0)==(f|0)){c[b>>2]=f;i=d;return}g=a|0;Vp(c[g>>2]|0);if((f|0)==0){c[g>>2]=0;c[b>>2]=f;i=d;return}if(f>>>0>1073741823>>>0){id()}a=f<<2;if((Zp(e,16,a)|0)==0){h=c[e>>2]|0}else{c[e>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[b>>2]=f;i=d;return}function ke(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;j=i;i=i+664|0;k=j|0;l=j+8|0;m=j+16|0;n=j+56|0;o=j+80|0;p=j+616|0;q=j+624|0;r=j+632|0;s=j+640|0;t=j+648|0;u=j+656|0;v=c[d+20>>2]|0;a[m|0]=0;w=m+4|0;tq(w|0,0,32)|0;c[m+8>>2]=v;c[m+28>>2]=0;x=m+12|0;y=Up((v<<2)+4|0)|0;c[x>>2]=y;if((y|0)==0){id();return 0}c[w>>2]=v;w=m+16|0;tq(y|0,0,(v<<2)+4|0)|0;Je(m,d,e)|0;e=j+64|0;tq(e|0,0,16)|0;if(!((v|0)>-1)){bc(11648,11312,63,15840);return 0}d=n|0;if(v>>>0>268435455>>>0){id();return 0}y=v<<4;if((Zp(l,16,y)|0)==0){z=c[l>>2]|0}else{c[l>>2]=0;z=0}l=(y|0)==0;if(!((z|0)!=0|l)){id();return 0}A=z;c[d>>2]=A;z=n+4|0;c[z>>2]=v;B=(v|0)>0;if(B){C=0;do{D=A+(C<<4)|0;c[D>>2]=c[e>>2];c[D+4>>2]=c[e+4>>2];c[D+8>>2]=c[e+8>>2];c[D+12>>2]=c[e+12>>2];C=C+1|0;}while((C|0)<(v|0))}C=f+4|0;e=c[C>>2]|0;a:do{if((e|0)>0){A=f|0;D=m+24|0;E=g+4|0;F=g|0;G=0;b:while(1){if((c[C>>2]|0)<=(G|0)){H=28;break}I=c[(c[A>>2]|0)+(G<<2)>>2]|0;J=c[D>>2]|0;K=c[x>>2]|0;L=c[K+(I<<2)>>2]|0;M=c[w>>2]|0;if((M|0)==0){N=c[K+(I+1<<2)>>2]|0}else{N=(c[M+(I<<2)>>2]|0)+L|0}if((L|0)<(N|0)){I=L;do{if((c[C>>2]|0)<=(G|0)){H=35;break b}h[(le(m,c[(c[A>>2]|0)+(G<<2)>>2]|0,c[J+(I<<2)>>2]|0)|0)>>3]=0.0;I=I+1|0;}while((I|0)<(N|0))}if((c[C>>2]|0)<=(G|0)){H=45;break}I=c[(c[A>>2]|0)+(G<<2)>>2]|0;h[(le(m,I,I)|0)>>3]=1.0;if((c[C>>2]|0)<=(G|0)){H=49;break}I=c[(c[A>>2]|0)+(G<<2)>>2]|0;if(!((I|0)>-1)){H=53;break}if((c[z>>2]|0)<=(I|0)){H=53;break}if((c[E>>2]|0)<=(G|0)){H=56;break}J=(c[d>>2]|0)+(I<<4)|0;I=(c[F>>2]|0)+(G<<4)|0;c[J>>2]=c[I>>2];c[J+4>>2]=c[I+4>>2];c[J+8>>2]=c[I+8>>2];c[J+12>>2]=c[I+12>>2];G=G+1|0;if((G|0)>=(e|0)){break a}}if((H|0)==28){bc(12824,12760,156,15696);return 0}else if((H|0)==35){bc(12824,12760,156,15696);return 0}else if((H|0)==45){bc(12824,12760,173,15744);return 0}else if((H|0)==49){bc(12824,12760,156,15696);return 0}else if((H|0)==53){bc(12824,12760,378,15696);return 0}else if((H|0)==56){bc(12824,12760,156,15696);return 0}}}while(0);H=o|0;Ee(H);e=o+512|0;c[e>>2]=3;z=o+516|0;a[z]=0;c[o+184>>2]=0;c[o+208>>2]=0;Le(o+320|0);c[o+440>>2]=0;c[o+360>>2]=0;c[o+332>>2]=0;c[o+328>>2]=3;a[z]=1;c[e>>2]=0;c[o+524>>2]=1;c[o+520>>2]=0;me(o,m);if((a[z]|0)==0){bc(3128,3880,328,15392);return 0}if((c[e>>2]|0)==0){c[q>>2]=n;Ae(p,q);c[s>>2]=n;ze(r,s);if((a[z]|0)==0){bc(3496,3880,346,15384);return 0}s=o+96|0;if((c[s>>2]|0)!=(c[p+4>>2]|0)){bc(3288,3880,348,15384);return 0}n=t|0;c[n>>2]=0;q=t+4|0;c[q>>2]=0;e=o+92|0;pe(t|0,c[e>>2]|0,1);ye(o,p,t);if((a[z]|0)==0){bc(3496,3880,346,15384);return 0}if((c[s>>2]|0)!=(c[r+4>>2]|0)){bc(3288,3880,348,15384);return 0}s=u|0;c[s>>2]=0;z=u+4|0;c[z>>2]=0;pe(u|0,c[e>>2]|0,1);ye(o,r,u);u=b+4|0;do{if((c[u>>2]|0)!=(v|0)){o=b|0;Vp(c[o>>2]|0);if((v|0)==0){c[o>>2]=0;break}if((Zp(k,16,y)|0)==0){O=c[k>>2]|0}else{c[k>>2]=0;O=0}if((O|0)!=0|l){c[o>>2]=O;break}id();return 0}}while(0);c[u>>2]=v;if((v|0)!=(c[q>>2]|0)){bc(1624,1176,498,15416);return 0}do{if(B){q=c[n>>2]|0;u=c[b>>2]|0;h[u>>3]=+h[q>>3];if((v|0)>1){P=1}else{break}do{h[u+(P<<4)>>3]=+h[q+(P<<3)>>3];P=P+1|0;}while((P|0)<(v|0))}}while(0);if((v|0)!=(c[z>>2]|0)){bc(1624,1176,498,15416);return 0}z=c[s>>2]|0;do{if(B){s=c[b>>2]|0;h[s+8>>3]=+h[z>>3];if((v|0)>1){Q=1}else{break}do{h[s+(Q<<4)+8>>3]=+h[z+(Q<<3)>>3];Q=Q+1|0;}while((Q|0)<(v|0))}}while(0);Vp(z);Vp(c[n>>2]|0);Vp(c[r>>2]|0);Vp(c[p>>2]|0);R=0}else{Gb(2016,(p=i,i=i+24|0,c[p>>2]=10984,c[p+8>>2]=16400,c[p+16>>2]=43,p)|0)|0;i=p;Lb(96)|0;R=-1}De(H);Vp(c[d>>2]|0);Vp(c[x>>2]|0);Vp(c[w>>2]|0);w=c[m+20>>2]|0;if((w|0)!=0){cq(w)}w=c[m+24>>2]|0;if((w|0)==0){i=j;return R|0}cq(w);i=j;return R|0}function le(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!((b|0)>-1)){bc(10744,10528,191,16112);return 0}if(!((c[a+8>>2]|0)>(b|0)&(d|0)>-1)){bc(10744,10528,191,16112);return 0}if((c[a+4>>2]|0)<=(d|0)){bc(10744,10528,191,16112);return 0}e=c[a+12>>2]|0;f=c[e+(d<<2)>>2]|0;g=c[a+16>>2]|0;if((g|0)==0){h=c[e+(d+1<<2)>>2]|0}else{h=(c[g+(d<<2)>>2]|0)+f|0}if((h|0)<(f|0)){bc(2960,10528,198,16112);return 0}if((h|0)<=(f|0)){i=Fe(a,b,d)|0;return i|0}g=a+24|0;e=f;f=h-1|0;a:while(1){j=e;while(1){if(!(f>>>0>j>>>0)){break a}k=(j+f|0)>>>1;if((c[(c[g>>2]|0)+(k<<2)>>2]|0)<(b|0)){j=k+1|0}else{e=j;f=k;continue a}}}do{if((j|0)<(h|0)){if((c[(c[g>>2]|0)+(j<<2)>>2]|0)!=(b|0)){break}i=(c[a+20>>2]|0)+(j<<3)|0;return i|0}}while(0);i=Fe(a,b,d)|0;return i|0}function me(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+64|0;f=e+24|0;if((c[b+524>>2]|0)==0){bc(3032,3880,606,15536)}Be(b|0,d);c[b+328>>2]=3;c[f>>2]=0;d=b+292|0;Te(d);g=c[b+80>>2]|0;h=c[b+72>>2]|0;j=c[b+464>>2]|0;if((c[b+480>>2]|0)<=0){bc(12824,12760,378,15696)}if((c[b+488>>2]|0)>0){df(b+320|0,b+124|0,g,h,j,b+508|0,c[b+476>>2]|0,c[b+484>>2]|0,b+164|0,b+188|0,0,0,b+212|0,b+252|0,e+32|0,e+40|0,e+48|0,e+56|0,e|0,d,f);Ue(d);a[b+528|0]=1;c[b+512>>2]=(c[f>>2]|0)!=0;c[b+520>>2]=1;i=e;return}else{bc(12824,12760,378,15696)}}function ne(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==1&(b|0)>-1&(d|0)>-1)){bc(13336,14528,241,15680)}d=a+4|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=b;i=e;return}g=a|0;Vp(c[g>>2]|0);if((b|0)==0){c[g>>2]=0;c[d>>2]=b;i=e;return}if(b>>>0>536870911>>>0){id()}a=b<<3;if((Zp(f,16,a)|0)==0){h=c[f>>2]|0}else{c[f>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[d>>2]=b;i=e;return}function oe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0;d=i;i=i+8|0;e=d|0;f=b+40|0;g=c[(c[f>>2]|0)+4>>2]|0;j=a|0;if(g>>>0>536870911>>>0){id()}k=g<<3;if((Zp(e,16,k)|0)==0){l=c[e>>2]|0}else{c[e>>2]=0;l=0}if(!((l|0)!=0|(k|0)==0)){id()}c[j>>2]=l;l=a+4|0;c[l>>2]=g;ne(a|0,c[(c[f>>2]|0)+4>>2]|0,1);a=c[l>>2]|0;l=c[f>>2]|0;if((a|0)!=(c[l+4>>2]|0)){bc(1624,1176,498,15416)}if((a|0)<=0){i=d;return}g=b+12|0;k=b+24|0;e=b+56|0;b=c[j>>2]|0;j=0;m=l;while(1){l=c[m>>2]|0;n=+h[l+(j<<4)>>3];o=+h[l+(j<<4)+8>>3];h[b+(j<<3)>>3]=+h[(c[c[g>>2]>>2]|0)+(j<<4)+8>>3]*+h[k>>3]/(+h[e>>3]-(n*n+o*o));l=j+1|0;if((l|0)>=(a|0)){break}j=l;m=c[f>>2]|0}i=d;return}function pe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==1&(b|0)>-1&(d|0)>-1)){bc(13336,14528,241,15680)}d=a+4|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=b;i=e;return}g=a|0;Vp(c[g>>2]|0);if((b|0)==0){c[g>>2]=0;c[d>>2]=b;i=e;return}if(b>>>0>536870911>>>0){id()}a=b<<3;if((Zp(f,16,a)|0)==0){h=c[f>>2]|0}else{c[f>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){id()}c[g>>2]=h;c[d>>2]=b;i=e;return}function qe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((a[d|0]|0)!=0){e=b+12|0;f=d+12|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+8|0;f=d+8|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+4|0;f=d+4|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+16|0;f=d+16|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+20|0;f=d+20|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+24|0;f=d+24|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;e=b+28|0;f=d+28|0;g=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=g;g=b+32|0;f=d+32|0;e=c[g>>2]|0;c[g>>2]=c[f>>2];c[f>>2]=e;return b|0}if((b|0)==(d|0)){return b|0}e=c[d+4>>2]|0;c[b+8>>2]=c[d+8>>2];f=b+28|0;c[f>>2]=0;g=b+4|0;h=c[g>>2]|0;do{if((h|0)!=(e|0)|(h|0)==0){i=b+12|0;Vp(c[i>>2]|0);j=Up((e<<2)+4|0)|0;c[i>>2]=j;if((j|0)==0){id();return 0}else{c[g>>2]=e;break}}}while(0);h=b+16|0;j=c[h>>2]|0;if((j|0)==0){k=e}else{Vp(j);c[h>>2]=0;k=c[g>>2]|0}j=b+12|0;tq(c[j>>2]|0,0,(k<<2)+4|0)|0;k=c[h>>2]|0;if((k|0)!=0){Vp(k);c[h>>2]=0}if((c[d+16>>2]|0)==0){sq(c[j>>2]|0,c[d+12>>2]|0,(c[g>>2]<<2)+4|0)|0;g=b+20|0;te(g,c[d+28>>2]|0,0.0);sq(c[g>>2]|0,c[d+20>>2]|0,c[f>>2]<<3)|0;sq(c[b+24>>2]|0,c[d+24>>2]|0,c[f>>2]<<2)|0;return b|0}else{re(b|0,d)|0;return b|0}return 0}function re(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0;e=c[d+4>>2]|0;if((a[d|0]|0)==0){se(b,d);f=b;return f|0}g=b+8|0;c[g>>2]=c[d+8>>2];i=b+28|0;c[i>>2]=0;j=b+4|0;k=c[j>>2]|0;do{if((k|0)!=(e|0)|(k|0)==0){l=b+12|0;Vp(c[l>>2]|0);m=Up((e<<2)+4|0)|0;c[l>>2]=m;if((m|0)==0){id();return 0}else{c[j>>2]=e;break}}}while(0);k=b+16|0;m=c[k>>2]|0;if((m|0)==0){n=e}else{Vp(m);c[k>>2]=0;n=c[j>>2]|0}m=b+12|0;tq(c[m>>2]|0,0,(n<<2)+4|0)|0;c[i>>2]=0;tq(c[m>>2]|0,0,(c[j>>2]<<2)+4|0)|0;n=c[k>>2]|0;do{if((n|0)!=0){tq(n|0,0,c[j>>2]<<2|0)|0;if((c[k>>2]|0)==0){break}bc(8560,10528,258,16128);return 0}}while(0);n=c[g>>2]|0;g=c[j>>2]|0;l=c[i>>2]|0;o=l+(((n|0)<(g|0)?g:n)<<1)|0;n=b+32|0;if(o>>>0>(c[n>>2]|0)>>>0){g=Na(o|0,8)|0;p=aq(J?-1:g)|0;g=Na(o|0,4)|0;q=aq(J?-1:g)|0;g=l>>>0<o>>>0?l:o;l=b+20|0;r=c[l>>2]|0;s=r;sq(p|0,s|0,g<<3)|0;t=b+24|0;u=c[t>>2]|0;sq(q|0,u|0,g<<2)|0;if((r|0)==0){v=u}else{cq(s);v=c[t>>2]|0}if((v|0)!=0){cq(v)}c[l>>2]=p;c[t>>2]=q;c[n>>2]=o}a:do{if((e|0)>0){o=d+20|0;n=d+24|0;q=d+12|0;t=d+16|0;p=b+20|0;l=p;v=b+24|0;s=p;p=0;b:while(1){u=c[m>>2]|0;r=c[u+(p<<2)>>2]|0;if((r|0)!=(c[i>>2]|0)){w=22;break}g=p+1|0;x=u+(g<<2)|0;if((c[x>>2]|0)!=0){w=24;break}c[x>>2]=r;x=c[o>>2]|0;y=c[n>>2]|0;z=c[q>>2]|0;A=c[z+(p<<2)>>2]|0;B=c[t>>2]|0;if((B|0)==0){C=c[z+(g<<2)>>2]|0}else{C=(c[B+(p<<2)>>2]|0)+A|0}c:do{if((A|0)<(C|0)){B=A;z=u;D=r;while(1){E=+h[x+(B<<3)>>3];F=c[y+(B<<2)>>2]|0;G=z+(g<<2)|0;if((D|0)!=(c[i>>2]|0)){w=30;break b}if((D|0)!=(c[z+(p<<2)>>2]|0)){if((c[(c[v>>2]|0)+(D-1<<2)>>2]|0)>=(F|0)){w=33;break b}}c[G>>2]=D+1;G=c[i>>2]|0;te(l,G+1|0,1.0);H=c[s>>2]|0;h[H+(G<<3)>>3]=0.0;c[(c[v>>2]|0)+(G<<2)>>2]=F;h[H+(D<<3)>>3]=E;H=B+1|0;if((H|0)>=(C|0)){break c}F=c[m>>2]|0;B=H;z=F;D=c[F+(g<<2)>>2]|0}}}while(0);if((g|0)<(e|0)){p=g}else{break a}}if((w|0)==22){bc(9200,10528,405,16096);return 0}else if((w|0)==24){bc(8800,10528,406,16096);return 0}else if((w|0)==30){bc(10112,10528,383,16144);return 0}else if((w|0)==33){bc(9600,10528,384,16144);return 0}}}while(0);if((c[k>>2]|0)!=0){f=b;return f|0}k=c[i>>2]|0;i=c[j>>2]|0;w=i;while(1){if(!((w|0)>-1)){break}if((c[(c[m>>2]|0)+(w<<2)>>2]|0)==0){w=w-1|0}else{break}}e=w+1|0;if((e|0)>(i|0)){f=b;return f|0}i=c[m>>2]|0;m=e;do{c[i+(m<<2)>>2]=k;m=m+1|0;}while((m|0)<=(c[j>>2]|0));f=b;return f|0}function se(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,K=0,L=0,M=0;e=i;i=i+40|0;f=e|0;g=c[d+4>>2]|0;j=c[d+8>>2]|0;k=f|0;a[k]=0;l=f+4|0;tq(l|0,0,32)|0;c[f+8>>2]=j;j=f+28|0;c[j>>2]=0;m=f+12|0;n=Up((g<<2)+4|0)|0;c[m>>2]=n;if((n|0)==0){id()}c[l>>2]=g;o=f+16|0;tq(n|0,0,(g<<2)+4|0)|0;n=c[b+8>>2]|0;p=c[b+4>>2]|0;if((c[o>>2]|0)!=0){bc(8560,10528,258,16128)}q=c[j>>2]|0;r=q+(((n|0)<(p|0)?p:n)<<1)|0;n=f+32|0;if(r>>>0>(c[n>>2]|0)>>>0){p=Na(r|0,8)|0;s=aq(J?-1:p)|0;p=Na(r|0,4)|0;t=aq(J?-1:p)|0;p=q>>>0<r>>>0?q:r;q=f+20|0;u=c[q>>2]|0;v=u;sq(s|0,v|0,p<<3)|0;w=f+24|0;x=c[w>>2]|0;sq(t|0,x|0,p<<2)|0;if((u|0)==0){y=x}else{cq(v);y=c[w>>2]|0}if((y|0)!=0){cq(y)}c[q>>2]=s;c[w>>2]=t;c[n>>2]=r}a:do{if((g|0)>0){r=d+20|0;n=d+24|0;t=d+12|0;w=d+16|0;s=f+20|0;q=f+24|0;y=s|0;v=0;b:while(1){x=c[m>>2]|0;u=c[x+(v<<2)>>2]|0;if((u|0)!=(c[j>>2]|0)){z=24;break}p=v+1|0;A=x+(p<<2)|0;if((c[A>>2]|0)!=0){z=27;break}c[A>>2]=u;A=c[r>>2]|0;B=c[n>>2]|0;C=c[t>>2]|0;D=c[C+(v<<2)>>2]|0;E=c[w>>2]|0;if((E|0)==0){F=c[C+(p<<2)>>2]|0}else{F=(c[E+(v<<2)>>2]|0)+D|0}c:do{if((D|0)<(F|0)){E=D;C=x;G=u;while(1){H=+h[A+(E<<3)>>3];I=c[B+(E<<2)>>2]|0;K=C+(p<<2)|0;if((G|0)!=(c[j>>2]|0)){z=34;break b}if((G|0)!=(c[C+(v<<2)>>2]|0)){if((c[(c[q>>2]|0)+(G-1<<2)>>2]|0)>=(I|0)){z=38;break b}}c[K>>2]=G+1;K=c[j>>2]|0;te(s,K+1|0,1.0);L=c[y>>2]|0;h[L+(K<<3)>>3]=0.0;c[(c[q>>2]|0)+(K<<2)>>2]=I;h[L+(G<<3)>>3]=H;L=E+1|0;if((L|0)>=(F|0)){break c}I=c[m>>2]|0;E=L;C=I;G=c[I+(p<<2)>>2]|0}}}while(0);if((p|0)<(g|0)){v=p}else{break a}}if((z|0)==24){bc(9200,10528,405,16096)}else if((z|0)==27){bc(8800,10528,406,16096)}else if((z|0)==34){bc(10112,10528,383,16144)}else if((z|0)==38){bc(9600,10528,384,16144)}}}while(0);do{if((c[o>>2]|0)==0){z=c[j>>2]|0;g=c[l>>2]|0;F=c[m>>2]|0;d=g;while(1){if(!((d|0)>-1)){break}if((c[F+(d<<2)>>2]|0)==0){d=d-1|0}else{break}}v=d+1|0;if((v|0)>(g|0)){break}else{M=v}do{c[F+(M<<2)>>2]=z;M=M+1|0;}while((M|0)<=(c[l>>2]|0))}}while(0);a[k]=1;qe(b,f)|0;Vp(c[m>>2]|0);Vp(c[o>>2]|0);o=c[f+20>>2]|0;if((o|0)!=0){cq(o)}o=c[f+24>>2]|0;if((o|0)==0){i=e;return}cq(o);i=e;return}function te(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=a+12|0;if(!((c[e>>2]|0)>>>0<b>>>0)){f=a+8|0;c[f>>2]=b;return}g=~~(+(b>>>0>>>0)*d)+b|0;h=Na(g|0,8)|0;i=aq(J?-1:h)|0;h=Na(g|0,4)|0;j=aq(J?-1:h)|0;h=a+8|0;k=c[h>>2]|0;l=k>>>0<g>>>0?k:g;k=a|0;m=c[k>>2]|0;n=m;sq(i|0,n|0,l<<3)|0;o=a+4|0;a=c[o>>2]|0;sq(j|0,a|0,l<<2)|0;if((m|0)==0){p=a}else{cq(n);p=c[o>>2]|0}if((p|0)!=0){cq(p)}c[k>>2]=i;c[o>>2]=j;c[e>>2]=g;f=h;c[f>>2]=b;return}function ue(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0;f=i;i=i+56|0;g=f|0;j=f+8|0;k=f+48|0;l=e+8|0;m=c[l>>2]|0;n=e+4|0;o=c[n>>2]|0;a[j|0]=0;p=j+4|0;tq(p|0,0,32)|0;c[j+8>>2]=o;c[j+28>>2]=0;o=Up((m<<2)+4|0)|0;c[j+12>>2]=o;if((o|0)==0){id()}c[p>>2]=m;p=j+16|0;q=j+12|0;tq(o|0,0,(m<<2)+4|0)|0;o=b|0;b=d|0;if((c[o>>2]|0)!=(c[b>>2]|0)){d=k|0;if(m>>>0>1073741823>>>0){id()}r=m<<2;if((Zp(g,16,r)|0)==0){s=c[g>>2]|0}else{c[g>>2]=0;s=0}if(!((s|0)!=0|(r|0)==0)){id()}r=s;c[d>>2]=r;g=k+4|0;c[g>>2]=m;if(!((m|0)>-1)){bc(6856,6584,225,15584)}c[g>>2]=m;if((m|0)>0){tq(s|0,0,m<<2|0)|0}s=c[o>>2]|0;g=c[b>>2]|0;a:do{if((s|0)!=(g|0)){t=s;while(1){u=c[t>>2]|0;if(!((u|0)>-1)){v=25;break}if((u|0)>=(c[l>>2]|0)){v=25;break}w=c[t+4>>2]|0;if(!((w|0)>-1)){v=25;break}if((w|0)>=(c[n>>2]|0)){v=25;break}if((m|0)<=(u|0)){v=31;break}w=r+(u<<2)|0;c[w>>2]=(c[w>>2]|0)+1;t=t+16|0;if((t|0)==(g|0)){break a}}if((v|0)==25){bc(8304,10528,952,15504)}else if((v|0)==31){bc(12824,12760,394,15744)}}}while(0);xe(j,k);k=c[o>>2]|0;o=c[b>>2]|0;b:do{if((k|0)!=(o|0)){b=c[p>>2]|0;v=c[q>>2]|0;g=c[j+24>>2]|0;r=c[j+20>>2]|0;if((b|0)==0){bc(7280,10528,842,16056)}else{x=k}while(1){m=c[x>>2]|0;n=b+(m<<2)|0;l=c[n>>2]|0;s=c[v+(m<<2)>>2]|0;if((l|0)>((c[v+(m+1<<2)>>2]|0)-s|0)){break}m=c[x+4>>2]|0;y=+h[x+8>>3];c[n>>2]=l+1;n=s+l|0;c[g+(n<<2)>>2]=m;h[r+(n<<3)>>3]=y;x=x+16|0;if((x|0)==(o|0)){break b}}bc(7048,10528,843,16056)}}while(0);ve(j);Vp(c[d>>2]|0)}we(e,j|0)|0;Vp(c[q>>2]|0);Vp(c[p>>2]|0);p=c[j+20>>2]|0;if((p|0)!=0){cq(p)}p=c[j+24>>2]|0;if((p|0)==0){i=f;return}cq(p);i=f;return}function ve(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0;b=i;i=i+8|0;d=b|0;e=a+16|0;if((c[e>>2]|0)==0){bc(7280,10528,1020,16080)}f=c[a+8>>2]|0;if(f>>>0>1073741823>>>0){id()}g=f<<2;if((Zp(d,16,g)|0)==0){j=c[d>>2]|0}else{c[d>>2]=0;j=0}if(!((j|0)!=0|(g|0)==0)){id()}g=j;if(!((f|0)>-1)){bc(6856,6584,225,15584)}if((f|0)>0){tq(j|0,-1|0,f<<2|0)|0}d=a+4|0;k=c[d>>2]|0;l=a+12|0;m=c[l>>2]|0;n=c[e>>2]|0;a:do{if((k|0)>0){o=a+24|0;p=a+20|0;q=0;r=0;b:while(1){s=m+(q<<2)|0;t=c[s>>2]|0;u=c[n+(q<<2)>>2]|0;v=u+t|0;if((u|0)>0){u=c[o>>2]|0;w=t;t=r;while(1){x=c[u+(w<<2)>>2]|0;if(!((x|0)>-1&(f|0)>(x|0))){break b}y=g+(x<<2)|0;z=c[y>>2]|0;A=c[p>>2]|0;B=+h[A+(w<<3)>>3];if((z|0)<(r|0)){h[A+(t<<3)>>3]=B;c[u+(t<<2)>>2]=x;c[y>>2]=t;C=t+1|0}else{y=A+(z<<3)|0;h[y>>3]=B+ +h[y>>3];C=t}y=w+1|0;if((y|0)<(v|0)){w=y;t=C}else{D=C;break}}}else{D=r}c[s>>2]=r;t=q+1|0;w=c[d>>2]|0;if((t|0)<(w|0)){q=t;r=D}else{E=D;F=w;break a}}bc(12824,12760,394,15744)}else{E=0;F=k}}while(0);c[m+(F<<2)>>2]=E;Vp(n);c[e>>2]=0;te(a+20|0,c[(c[l>>2]|0)+(c[d>>2]<<2)>>2]|0,0.0);Vp(j);i=b;return}



function xm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[7340]|0)==-1)){c[p>>2]=29360;c[p+4>>2]=14;c[p+8>>2]=0;qh(29360,p,102)}p=(c[7341]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=oc(4)|0;D=C;zp(D);Fb(C|0,22832,140)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=oc(4)|0;D=C;zp(D);Fb(C|0,22832,140)}C=b;Ac[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;Ac[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;Hh(r);Ac[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Kh(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;Hh(s);s=b;c[f>>2]=Ec[c[(c[s>>2]|0)+12>>2]&255](C)|0;c[g>>2]=Ec[c[(c[s>>2]|0)+16>>2]&255](C)|0;Ac[c[(c[b>>2]|0)+20>>2]&127](t,C);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Ah(h,0);p=t;c[b>>2]=c[p>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];tq(p|0,0,12)|0;vh(t);Ac[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){c[j+4>>2]=0;a[D]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Kh(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];tq(t|0,0,12)|0;Hh(u);E=Ec[c[(c[s>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[7342]|0)==-1)){c[o>>2]=29368;c[o+4>>2]=14;c[o+8>>2]=0;qh(29368,o,102)}o=(c[7343]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=oc(4)|0;G=F;zp(G);Fb(F|0,22832,140)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=oc(4)|0;G=F;zp(G);Fb(F|0,22832,140)}F=C;Ac[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;Ac[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];tq(l|0,0,12)|0;Hh(w);Ac[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){c[k+4>>2]=0;a[w]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Kh(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];tq(k|0,0,12)|0;Hh(x);x=C;c[f>>2]=Ec[c[(c[x>>2]|0)+12>>2]&255](F)|0;c[g>>2]=Ec[c[(c[x>>2]|0)+16>>2]&255](F)|0;Ac[c[(c[C>>2]|0)+20>>2]&127](y,F);C=h;if((a[C]&1)==0){a[h+1|0]=0;a[C]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Ah(h,0);h=y;c[C>>2]=c[h>>2];c[C+4>>2]=c[h+4>>2];c[C+8>>2]=c[h+8>>2];tq(h|0,0,12)|0;vh(y);Ac[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){c[j+4>>2]=0;a[G]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}Kh(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];tq(j|0,0,12)|0;Hh(z);E=Ec[c[(c[x>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function ym(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=172;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=Wp(k,j)|0;k=a;if((a|0)==0){hq()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}zc[c[e>>2]&511](a);l=c[g>>2]|0}}while(0);c[e>>2]=84;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function zm(a){a=a|0;Wg(a|0);bq(a);return}function Am(a){a=a|0;Wg(a|0);return}function Bm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+448|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+232|0;o=d+240|0;p=d+248|0;q=d+256|0;r=d+264|0;s=d+280|0;t=d+296|0;u=d+312|0;v=d+320|0;w=d+424|0;x=d+432|0;y=d+440|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=$a(z|0,100,11480,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);C=tk(m,c[6868]|0,11480,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){hq();E=c[m>>2]|0}else{E=D}D=Up(C)|0;if((D|0)!=0){F=D;G=C;H=D;I=E;break}hq();F=0;G=C;H=0;I=E}else{F=A;G=B;H=0;I=0}}while(0);Qh(n,g);B=n|0;A=c[B>>2]|0;if(!((c[7226]|0)==-1)){c[l>>2]=28904;c[l+4>>2]=14;c[l+8>>2]=0;qh(28904,l,102)}l=(c[7227]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;D=c[m>>2]|0;Mc[c[(c[z>>2]|0)+32>>2]&15](C,D,D+G|0,F)|0;if((G|0)==0){J=0}else{J=(a[c[m>>2]|0]|0)==45}tq(r|0,0,12)|0;D=s;tq(D|0,0,12)|0;z=t;tq(z|0,0,12)|0;Cm(f,J,n,o,p,q,r,s,t,u);K=v|0;L=c[u>>2]|0;if((G|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(G-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){D=Up(M)|0;if((D|0)!=0){S=D;T=D;break}hq();S=0;T=0}else{S=K;T=0}}while(0);Dm(S,w,x,c[g+4>>2]|0,F,F+G|0,C,J,o,a[p]|0,a[q]|0,r,s,t,L);c[y>>2]=c[e>>2];hd(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){Vp(T)}vh(t);vh(s);vh(r);Yg(c[B>>2]|0)|0;if((H|0)!=0){Vp(H)}if((I|0)==0){i=d;return}Vp(I);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Cm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[7344]|0)==-1)){c[p>>2]=29376;c[p+4>>2]=14;c[p+8>>2]=0;qh(29376,p,102)}p=(c[7345]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=oc(4)|0;J=I;zp(J);Fb(I|0,22832,140)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=oc(4)|0;J=I;zp(J);Fb(I|0,22832,140)}I=e;J=c[e>>2]|0;if(d){Ac[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;Ac[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];tq(q|0,0,12)|0;vh(s)}else{Ac[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;Ac[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){a[l+1|0]=0;a[u]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];tq(t|0,0,12)|0;vh(v)}v=e;a[g]=Ec[c[(c[v>>2]|0)+12>>2]&255](I)|0;a[h]=Ec[c[(c[v>>2]|0)+16>>2]&255](I)|0;v=e;Ac[c[(c[v>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];tq(u|0,0,12)|0;vh(w);Ac[c[(c[v>>2]|0)+24>>2]&127](x,I);v=k;if((a[v]&1)==0){a[k+1|0]=0;a[v]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Ah(k,0);w=x;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];tq(w|0,0,12)|0;vh(x);K=Ec[c[(c[e>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[7346]|0)==-1)){c[o>>2]=29384;c[o+4>>2]=14;c[o+8>>2]=0;qh(29384,o,102)}o=(c[7347]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=oc(4)|0;M=L;zp(M);Fb(L|0,22832,140)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=oc(4)|0;M=L;zp(M);Fb(L|0,22832,140)}L=H;M=c[H>>2]|0;if(d){Ac[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;Ac[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];tq(y|0,0,12)|0;vh(A)}else{Ac[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;Ac[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Ah(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];tq(l|0,0,12)|0;vh(E)}E=H;a[g]=Ec[c[(c[E>>2]|0)+12>>2]&255](L)|0;a[h]=Ec[c[(c[E>>2]|0)+16>>2]&255](L)|0;E=H;Ac[c[(c[E>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];tq(j|0,0,12)|0;vh(F);Ac[c[(c[E>>2]|0)+24>>2]&127](G,L);E=k;if((a[E]&1)==0){a[k+1|0]=0;a[E]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Ah(k,0);k=G;c[E>>2]=c[k>>2];c[E+4>>2]=c[k+4>>2];c[E+8>>2]=c[k+8>>2];tq(k|0,0,12)|0;vh(G);K=Ec[c[(c[H>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function Dm(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+8|0;A=p+4|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=0;H=h;while(1){a:do{switch(a[l+G|0]|0){case 0:{c[e>>2]=c[f>>2];I=H;break};case 1:{c[e>>2]=c[f>>2];h=Bc[c[(c[s>>2]|0)+28>>2]&63](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=h;I=H;break};case 3:{h=a[t]|0;J=(h&1)==0;if(J){K=(h&255)>>>1}else{K=c[w>>2]|0}if((K|0)==0){I=H;break a}if(J){L=u}else{L=c[v>>2]|0}J=a[L]|0;h=c[f>>2]|0;c[f>>2]=h+1;a[h]=J;I=H;break};case 2:{J=a[q]|0;h=(J&1)==0;if(h){M=(J&255)>>>1}else{M=c[A>>2]|0}if((M|0)==0|x){I=H;break a}if(h){N=(J&255)>>>1;O=y;P=y}else{J=c[z>>2]|0;N=c[A>>2]|0;O=J;P=J}J=O+N|0;h=c[f>>2]|0;if((P|0)==(J|0)){Q=h}else{R=h;h=P;while(1){a[R]=a[h]|0;S=h+1|0;T=R+1|0;if((S|0)==(J|0)){Q=T;break}else{R=T;h=S}}}c[f>>2]=Q;I=H;break};case 4:{h=c[f>>2]|0;R=k?H+1|0:H;J=R;while(1){if(!(J>>>0<i>>>0)){break}S=a[J]|0;if(S<<24>>24<0){break}if((b[(c[p>>2]|0)+(S<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}S=J;if(B){if(J>>>0>R>>>0){T=R+(-S|0)|0;S=T>>>0<o>>>0?o:T;T=S+r|0;U=J;V=r;W=h;while(1){X=U-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>R>>>0&Z)){break}U=X;V=Y;W=c[f>>2]|0}W=J+S|0;if(Z){_=T;$=W;aa=32}else{ba=0;ca=T;da=W}}else{_=r;$=J;aa=32}if((aa|0)==32){aa=0;ba=Bc[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;ca=_;da=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ca|0)>0){V=ca;U=W;while(1){a[U]=ba;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;U=X}else{ea=X;break}}}else{ea=W}a[ea]=m;fa=da}else{fa=J}if((fa|0)==(R|0)){U=Bc[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=U}else{U=a[C]|0;V=(U&1)==0;if(V){ga=(U&255)>>>1}else{ga=c[F>>2]|0}if((ga|0)==0){ha=fa;ia=0;ja=0;ka=-1}else{if(V){la=D}else{la=c[E>>2]|0}ha=fa;ia=0;ja=0;ka=a[la]|0}while(1){do{if((ia|0)==(ka|0)){V=c[f>>2]|0;c[f>>2]=V+1;a[V]=n;V=ja+1|0;U=a[C]|0;T=(U&1)==0;if(T){ma=(U&255)>>>1}else{ma=c[F>>2]|0}if(!(V>>>0<ma>>>0)){na=ka;oa=V;pa=0;break}if(T){qa=D}else{qa=c[E>>2]|0}if((a[qa+V|0]|0)==127){na=-1;oa=V;pa=0;break}if(T){ra=D}else{ra=c[E>>2]|0}na=a[ra+V|0]|0;oa=V;pa=0}else{na=ka;oa=ja;pa=ia}}while(0);V=ha-1|0;T=a[V]|0;U=c[f>>2]|0;c[f>>2]=U+1;a[U]=T;if((V|0)==(R|0)){break}else{ha=V;ia=pa+1|0;ja=oa;ka=na}}}J=c[f>>2]|0;if((h|0)==(J|0)){I=R;break a}W=J-1|0;if(W>>>0>h>>>0){sa=h;ta=W}else{I=R;break a}while(1){W=a[sa]|0;a[sa]=a[ta]|0;a[ta]=W;W=sa+1|0;J=ta-1|0;if(W>>>0<J>>>0){sa=W;ta=J}else{I=R;break}}break};default:{I=H}}}while(0);R=G+1|0;if(R>>>0<4>>>0){G=R;H=I}else{break}}I=a[t]|0;t=(I&1)==0;if(t){ua=(I&255)>>>1}else{ua=c[w>>2]|0}if(ua>>>0>1>>>0){if(t){va=(I&255)>>>1;wa=u;xa=u}else{u=c[v>>2]|0;va=c[w>>2]|0;wa=u;xa=u}u=xa+1|0;xa=wa+va|0;va=c[f>>2]|0;if((u|0)==(xa|0)){ya=va}else{wa=va;va=u;while(1){a[wa]=a[va]|0;u=va+1|0;w=wa+1|0;if((u|0)==(xa|0)){ya=w;break}else{wa=w;va=u}}}c[f>>2]=ya}ya=g&176;if((ya|0)==16){return}else if((ya|0)==32){c[e>>2]=c[f>>2];return}else{c[e>>2]=d;return}}function Em(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+208|0;v=d+216|0;w=d+224|0;Qh(l,g);x=l|0;y=c[x>>2]|0;if(!((c[7226]|0)==-1)){c[k>>2]=28904;c[k+4>>2]=14;c[k+8>>2]=0;qh(28904,k,102)}k=(c[7227]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+1|0}else{H=c[j+8>>2]|0}E=a[H]|0;G=E<<24>>24==(Bc[c[(c[A>>2]|0)+28>>2]&63](B,45)|0)<<24>>24}tq(p|0,0,12)|0;A=q;tq(A|0,0,12)|0;E=r;tq(E|0,0,12)|0;Cm(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=Up(J)|0;if((A|0)!=0){S=A;T=A;U=I;break}hq();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+1|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}Dm(S,u,v,c[g+4>>2]|0,W,W+V|0,B,G,m,a[n]|0,a[o]|0,p,q,r,L);c[w>>2]=c[e>>2];hd(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){vh(r);vh(q);vh(p);X=c[x>>2]|0;Y=X|0;Z=Yg(Y)|0;i=d;return}Vp(T);vh(r);vh(q);vh(p);X=c[x>>2]|0;Y=X|0;Z=Yg(Y)|0;i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Fm(a){a=a|0;Wg(a|0);bq(a);return}function Gm(a){a=a|0;Wg(a|0);return}function Hm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+1040|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+528|0;o=d+536|0;p=d+544|0;q=d+552|0;r=d+560|0;s=d+576|0;t=d+592|0;u=d+608|0;v=d+616|0;w=d+1016|0;x=d+1024|0;y=d+1032|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=$a(z|0,100,11480,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);C=tk(m,c[6868]|0,11480,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){hq();E=c[m>>2]|0}else{E=D}D=Up(C<<2)|0;F=D;if((D|0)!=0){G=F;H=C;I=F;J=E;break}hq();G=0;H=C;I=0;J=E}else{G=A;H=B;I=0;J=0}}while(0);Qh(n,g);B=n|0;A=c[B>>2]|0;if(!((c[7224]|0)==-1)){c[l>>2]=28896;c[l+4>>2]=14;c[l+8>>2]=0;qh(28896,l,102)}l=(c[7225]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;F=c[m>>2]|0;Mc[c[(c[z>>2]|0)+48>>2]&15](C,F,F+H|0,G)|0;if((H|0)==0){K=0}else{K=(a[c[m>>2]|0]|0)==45}tq(r|0,0,12)|0;F=s;tq(F|0,0,12)|0;z=t;tq(z|0,0,12)|0;Im(f,K,n,o,p,q,r,s,t,u);D=v|0;L=c[u>>2]|0;if((H|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(H-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){F=Up(M<<2)|0;z=F;if((F|0)!=0){S=z;T=z;break}hq();S=0;T=0}else{S=D;T=0}}while(0);Jm(S,w,x,c[g+4>>2]|0,G,G+(H<<2)|0,C,K,o,c[p>>2]|0,c[q>>2]|0,r,s,t,L);c[y>>2]=c[e>>2];Ck(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){Vp(T)}Hh(t);Hh(s);vh(r);Yg(c[B>>2]|0)|0;if((I|0)!=0){Vp(I)}if((J|0)==0){i=d;return}Vp(J);i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Im(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[7340]|0)==-1)){c[p>>2]=29360;c[p+4>>2]=14;c[p+8>>2]=0;qh(29360,p,102)}p=(c[7341]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=oc(4)|0;J=I;zp(J);Fb(I|0,22832,140)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=oc(4)|0;J=I;zp(J);Fb(I|0,22832,140)}I=e;J=c[e>>2]|0;if(d){Ac[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;Ac[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];tq(q|0,0,12)|0;Hh(s)}else{Ac[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;Ac[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){c[l+4>>2]=0;a[u]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];tq(t|0,0,12)|0;Hh(v)}v=e;c[g>>2]=Ec[c[(c[v>>2]|0)+12>>2]&255](I)|0;c[h>>2]=Ec[c[(c[v>>2]|0)+16>>2]&255](I)|0;Ac[c[(c[e>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];tq(u|0,0,12)|0;vh(w);Ac[c[(c[e>>2]|0)+24>>2]&127](x,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Kh(k,0);w=x;c[e>>2]=c[w>>2];c[e+4>>2]=c[w+4>>2];c[e+8>>2]=c[w+8>>2];tq(w|0,0,12)|0;Hh(x);K=Ec[c[(c[v>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[7342]|0)==-1)){c[o>>2]=29368;c[o+4>>2]=14;c[o+8>>2]=0;qh(29368,o,102)}o=(c[7343]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=oc(4)|0;M=L;zp(M);Fb(L|0,22832,140)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=oc(4)|0;M=L;zp(M);Fb(L|0,22832,140)}L=H;M=c[H>>2]|0;if(d){Ac[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;Ac[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];tq(y|0,0,12)|0;Hh(A)}else{Ac[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;Ac[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}Kh(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];tq(l|0,0,12)|0;Hh(E)}E=H;c[g>>2]=Ec[c[(c[E>>2]|0)+12>>2]&255](L)|0;c[h>>2]=Ec[c[(c[E>>2]|0)+16>>2]&255](L)|0;Ac[c[(c[H>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Ah(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];tq(j|0,0,12)|0;vh(F);Ac[c[(c[H>>2]|0)+24>>2]&127](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}Kh(k,0);k=G;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];tq(k|0,0,12)|0;Hh(G);K=Ec[c[(c[E>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function Jm(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=0;D=g;while(1){a:do{switch(a[k+n|0]|0){case 0:{c[d>>2]=c[e>>2];E=D;break};case 1:{c[d>>2]=c[e>>2];g=Bc[c[(c[r>>2]|0)+44>>2]&63](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=g;E=D;break};case 3:{g=a[s]|0;F=(g&1)==0;if(F){G=(g&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){E=D;break a}if(F){H=t}else{H=c[u>>2]|0}F=c[H>>2]|0;g=c[e>>2]|0;c[e>>2]=g+4;c[g>>2]=F;E=D;break};case 2:{F=a[p]|0;g=(F&1)==0;if(g){I=(F&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){E=D;break a}if(g){J=(F&255)>>>1;K=w;L=w}else{F=c[x>>2]|0;J=c[w>>2]|0;K=F;L=F}F=K+(J<<2)|0;g=c[e>>2]|0;if((L|0)==(F|0)){M=g}else{N=(K+(J-1<<2)+(-L|0)|0)>>>2;O=g;P=L;while(1){c[O>>2]=c[P>>2];Q=P+4|0;if((Q|0)==(F|0)){break}O=O+4|0;P=Q}M=g+(N+1<<2)|0}c[e>>2]=M;E=D;break};case 4:{P=c[e>>2]|0;O=j?D+4|0:D;F=O;while(1){if(!(F>>>0<h>>>0)){break}if(Cc[c[(c[o>>2]|0)+12>>2]&63](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){do{if(F>>>0>O>>>0){N=F;g=q;Q=c[e>>2]|0;while(1){R=N-4|0;S=Q+4|0;c[Q>>2]=c[R>>2];T=g-1|0;U=(T|0)>0;if(R>>>0>O>>>0&U){N=R;g=T;Q=S}else{break}}c[e>>2]=S;if(U){V=T;W=R;X=34;break}Q=c[e>>2]|0;c[e>>2]=Q+4;Y=Q;Z=R}else{V=q;W=F;X=34}}while(0);do{if((X|0)==34){X=0;Q=Bc[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;g=c[e>>2]|0;N=g+4|0;c[e>>2]=N;if((V|0)>0){_=V;$=g;aa=N}else{Y=g;Z=W;break}while(1){c[$>>2]=Q;N=_-1|0;if((N|0)>0){_=N;$=aa;aa=aa+4|0}else{break}}c[e>>2]=g+(V+1<<2);Y=g+(V<<2)|0;Z=W}}while(0);c[Y>>2]=l;ba=Z}else{ba=F}if((ba|0)==(O|0)){Q=Bc[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;N=c[e>>2]|0;ca=N+4|0;c[e>>2]=ca;c[N>>2]=Q;da=ca}else{ca=a[z]|0;Q=(ca&1)==0;if(Q){ea=(ca&255)>>>1}else{ea=c[C>>2]|0}if((ea|0)==0){fa=ba;ga=0;ha=0;ia=-1}else{if(Q){ja=A}else{ja=c[B>>2]|0}fa=ba;ga=0;ha=0;ia=a[ja]|0}while(1){do{if((ga|0)==(ia|0)){Q=c[e>>2]|0;c[e>>2]=Q+4;c[Q>>2]=m;Q=ha+1|0;ca=a[z]|0;N=(ca&1)==0;if(N){ka=(ca&255)>>>1}else{ka=c[C>>2]|0}if(!(Q>>>0<ka>>>0)){la=ia;ma=Q;na=0;break}if(N){oa=A}else{oa=c[B>>2]|0}if((a[oa+Q|0]|0)==127){la=-1;ma=Q;na=0;break}if(N){pa=A}else{pa=c[B>>2]|0}la=a[pa+Q|0]|0;ma=Q;na=0}else{la=ia;ma=ha;na=ga}}while(0);g=fa-4|0;Q=c[g>>2]|0;N=c[e>>2]|0;c[e>>2]=N+4;c[N>>2]=Q;if((g|0)==(O|0)){break}else{fa=g;ga=na+1|0;ha=ma;ia=la}}da=c[e>>2]|0}if((P|0)==(da|0)){E=O;break a}F=da-4|0;if(F>>>0>P>>>0){qa=P;ra=F}else{E=O;break a}while(1){F=c[qa>>2]|0;c[qa>>2]=c[ra>>2];c[ra>>2]=F;F=qa+4|0;g=ra-4|0;if(F>>>0<g>>>0){qa=F;ra=g}else{E=O;break}}break};default:{E=D}}}while(0);O=n+1|0;if(O>>>0<4>>>0){n=O;D=E}else{break}}E=a[s]|0;s=(E&1)==0;if(s){sa=(E&255)>>>1}else{sa=c[t>>2]|0}if(sa>>>0>1>>>0){if(s){ta=(E&255)>>>1;ua=t;va=t}else{E=c[u>>2]|0;ta=c[t>>2]|0;ua=E;va=E}E=va+4|0;va=ua+(ta<<2)|0;t=c[e>>2]|0;if((E|0)==(va|0)){wa=t}else{u=(ua+(ta-1<<2)+(-E|0)|0)>>>2;ta=t;ua=E;while(1){c[ta>>2]=c[ua>>2];E=ua+4|0;if((E|0)==(va|0)){break}else{ta=ta+4|0;ua=E}}wa=t+(u+1<<2)|0}c[e>>2]=wa}wa=f&176;if((wa|0)==32){c[d>>2]=c[e>>2];return}else if((wa|0)==16){return}else{c[d>>2]=b;return}}function Km(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+528|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+504|0;v=d+512|0;w=d+520|0;Qh(l,g);x=l|0;y=c[x>>2]|0;if(!((c[7224]|0)==-1)){c[k>>2]=28896;c[k+4>>2]=14;c[k+8>>2]=0;qh(28896,k,102)}k=(c[7225]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+4|0}else{H=c[j+8>>2]|0}E=c[H>>2]|0;G=(E|0)==(Bc[c[(c[A>>2]|0)+44>>2]&63](B,45)|0)}tq(p|0,0,12)|0;A=q;tq(A|0,0,12)|0;E=r;tq(E|0,0,12)|0;Im(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=Up(J<<2)|0;E=A;if((A|0)!=0){S=E;T=E;U=I;break}hq();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+4|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}Jm(S,u,v,c[g+4>>2]|0,W,W+(V<<2)|0,B,G,m,c[n>>2]|0,c[o>>2]|0,p,q,r,L);c[w>>2]=c[e>>2];Ck(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){Hh(r);Hh(q);vh(p);X=c[x>>2]|0;Y=X|0;Z=Yg(Y)|0;i=d;return}Vp(T);Hh(r);Hh(q);vh(p);X=c[x>>2]|0;Y=X|0;Z=Yg(Y)|0;i=d;return}}while(0);d=oc(4)|0;zp(d);Fb(d|0,22832,140)}function Lm(a){a=a|0;Wg(a|0);bq(a);return}function Mm(a){a=a|0;Wg(a|0);return}function Nm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=qc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function Om(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;j=d|0;k=j;tq(k|0,0,12)|0;l=a[h]|0;if((l&1)==0){m=(l&255)>>>1;n=h+1|0;o=h+1|0}else{l=c[h+8>>2]|0;m=c[h+4>>2]|0;n=l;o=l}l=o+m|0;do{if(n>>>0<l>>>0){m=n;do{Bh(j,a[m]|0);m=m+1|0;}while(m>>>0<l>>>0);m=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){p=m;q=10;break}r=c[j+8>>2]|0;s=m}else{p=(e|0)==-1?-1:e<<1;q=10}}while(0);if((q|0)==10){r=j+1|0;s=p}p=ob(s|0,f|0,g|0,r|0)|0;tq(b|0,0,12)|0;r=rq(p|0)|0;g=p+r|0;if((r|0)>0){t=p}else{vh(j);i=d;return}do{Bh(b,a[t]|0);t=t+1|0;}while(t>>>0<g>>>0);vh(j);i=d;return}function Pm(a,b){a=a|0;b=b|0;Wb(((b|0)==-1?-1:b<<1)|0)|0;return}function Qm(a){a=a|0;Wg(a|0);bq(a);return}function Rm(a){a=a|0;Wg(a|0);return}function Sm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=qc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function Tm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=i;i=i+240|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;t=d+232|0;u=r;tq(u|0,0,12)|0;c[s+4>>2]=0;c[s>>2]=18592;v=a[h]|0;if((v&1)==0){w=(v&255)>>>1;x=h+4|0;y=h+4|0}else{v=c[h+8>>2]|0;w=c[h+4>>2]|0;x=v;y=v}v=y+(w<<2)|0;w=k|0;a:do{if(x>>>0<v>>>0){y=s|0;h=s;z=k+32|0;A=x;B=18592;while(1){c[m>>2]=A;C=(Ic[c[B+12>>2]&31](y,j,A,v,m,w,z,l)|0)==2;D=c[m>>2]|0;if(C|(D|0)==(A|0)){break}if(w>>>0<(c[l>>2]|0)>>>0){C=w;do{Bh(r,a[C]|0);C=C+1|0;}while(C>>>0<(c[l>>2]|0)>>>0);E=c[m>>2]|0}else{E=D}if(!(E>>>0<v>>>0)){break a}A=E;B=c[h>>2]|0}mm(5232)}}while(0);Wg(s|0);if((a[u]&1)==0){F=r+1|0}else{F=c[r+8>>2]|0}u=ob(((e|0)==-1?-1:e<<1)|0,f|0,g|0,F|0)|0;tq(b|0,0,12)|0;c[t+4>>2]=0;c[t>>2]=18536;F=rq(u|0)|0;g=u+F|0;if((F|0)<=0){G=t|0;Wg(G);vh(r);i=d;return}F=t|0;f=t;e=g;s=o|0;E=o+128|0;o=u;u=18536;while(1){c[q>>2]=o;v=(Ic[c[u+16>>2]&31](F,n,o,(e-o|0)>32?o+32|0:g,q,s,E,p)|0)==2;m=c[q>>2]|0;if(v|(m|0)==(o|0)){break}if(s>>>0<(c[p>>2]|0)>>>0){v=s;do{Lh(b,c[v>>2]|0);v=v+4|0;}while(v>>>0<(c[p>>2]|0)>>>0);H=c[q>>2]|0}else{H=m}if(!(H>>>0<g>>>0)){I=37;break}o=H;u=c[f>>2]|0}if((I|0)==37){G=t|0;Wg(G);vh(r);i=d;return}mm(5232)}function Um(a,b){a=a|0;b=b|0;Wb(((b|0)==-1?-1:b<<1)|0)|0;return}function Vm(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=18008;d=b+8|0;e=c[d>>2]|0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);if((e|0)==(c[6868]|0)){f=b|0;Wg(f);return}nb(c[d>>2]|0);f=b|0;Wg(f);return}function Wm(a){a=a|0;a=oc(8)|0;Zg(a,11160);c[a>>2]=16944;Fb(a|0,22864,38)}function Xm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=18264;d=b+8|0;I=b+12|0;J=b+136|0;a[J]=1;K=b+24|0;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);th(b+144|0,10976,1);J=c[d>>2]|0;d=c[I>>2]|0;if((d|0)!=(J|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[6901]=0;c[6900]=17968;if(!((c[7146]|0)==-1)){c[G>>2]=28584;c[G+4>>2]=14;c[G+8>>2]=0;qh(28584,G,102)}Ym(b,27600,(c[7147]|0)-1|0);c[6899]=0;c[6898]=17928;if(!((c[7144]|0)==-1)){c[F>>2]=28576;c[F+4>>2]=14;c[F+8>>2]=0;qh(28576,F,102)}Ym(b,27592,(c[7145]|0)-1|0);c[6951]=0;c[6950]=18376;c[6952]=0;a[27812]=0;c[6952]=c[(mb()|0)>>2];if(!((c[7226]|0)==-1)){c[E>>2]=28904;c[E+4>>2]=14;c[E+8>>2]=0;qh(28904,E,102)}Ym(b,27800,(c[7227]|0)-1|0);c[6949]=0;c[6948]=18296;if(!((c[7224]|0)==-1)){c[D>>2]=28896;c[D+4>>2]=14;c[D+8>>2]=0;qh(28896,D,102)}Ym(b,27792,(c[7225]|0)-1|0);c[6903]=0;c[6902]=18064;if(!((c[7150]|0)==-1)){c[C>>2]=28600;c[C+4>>2]=14;c[C+8>>2]=0;qh(28600,C,102)}Ym(b,27608,(c[7151]|0)-1|0);c[4131]=0;c[4130]=18008;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);c[4132]=c[6868];if(!((c[7148]|0)==-1)){c[B>>2]=28592;c[B+4>>2]=14;c[B+8>>2]=0;qh(28592,B,102)}Ym(b,16520,(c[7149]|0)-1|0);c[6905]=0;c[6904]=18120;if(!((c[7152]|0)==-1)){c[A>>2]=28608;c[A+4>>2]=14;c[A+8>>2]=0;qh(28608,A,102)}Ym(b,27616,(c[7153]|0)-1|0);c[6907]=0;c[6906]=18176;if(!((c[7154]|0)==-1)){c[z>>2]=28616;c[z+4>>2]=14;c[z+8>>2]=0;qh(28616,z,102)}Ym(b,27624,(c[7155]|0)-1|0);c[6881]=0;c[6880]=17472;a[27528]=46;a[27529]=44;tq(27532,0,12)|0;if(!((c[7130]|0)==-1)){c[y>>2]=28520;c[y+4>>2]=14;c[y+8>>2]=0;qh(28520,y,102)}Ym(b,27520,(c[7131]|0)-1|0);c[4123]=0;c[4122]=17424;c[4124]=46;c[4125]=44;tq(16504,0,12)|0;if(!((c[7128]|0)==-1)){c[x>>2]=28512;c[x+4>>2]=14;c[x+8>>2]=0;qh(28512,x,102)}Ym(b,16488,(c[7129]|0)-1|0);c[6897]=0;c[6896]=17856;if(!((c[7142]|0)==-1)){c[w>>2]=28568;c[w+4>>2]=14;c[w+8>>2]=0;qh(28568,w,102)}Ym(b,27584,(c[7143]|0)-1|0);c[6895]=0;c[6894]=17784;if(!((c[7140]|0)==-1)){c[v>>2]=28560;c[v+4>>2]=14;c[v+8>>2]=0;qh(28560,v,102)}Ym(b,27576,(c[7141]|0)-1|0);c[6893]=0;c[6892]=17720;if(!((c[7138]|0)==-1)){c[u>>2]=28552;c[u+4>>2]=14;c[u+8>>2]=0;qh(28552,u,102)}Ym(b,27568,(c[7139]|0)-1|0);c[6891]=0;c[6890]=17656;if(!((c[7136]|0)==-1)){c[t>>2]=28544;c[t+4>>2]=14;c[t+8>>2]=0;qh(28544,t,102)}Ym(b,27560,(c[7137]|0)-1|0);c[6961]=0;c[6960]=19424;if(!((c[7346]|0)==-1)){c[s>>2]=29384;c[s+4>>2]=14;c[s+8>>2]=0;qh(29384,s,102)}Ym(b,27840,(c[7347]|0)-1|0);c[6959]=0;c[6958]=19360;if(!((c[7344]|0)==-1)){c[r>>2]=29376;c[r+4>>2]=14;c[r+8>>2]=0;qh(29376,r,102)}Ym(b,27832,(c[7345]|0)-1|0);c[6957]=0;c[6956]=19296;if(!((c[7342]|0)==-1)){c[q>>2]=29368;c[q+4>>2]=14;c[q+8>>2]=0;qh(29368,q,102)}Ym(b,27824,(c[7343]|0)-1|0);c[6955]=0;c[6954]=19232;if(!((c[7340]|0)==-1)){c[p>>2]=29360;c[p+4>>2]=14;c[p+8>>2]=0;qh(29360,p,102)}Ym(b,27816,(c[7341]|0)-1|0);c[6879]=0;c[6878]=17128;if(!((c[7118]|0)==-1)){c[o>>2]=28472;c[o+4>>2]=14;c[o+8>>2]=0;qh(28472,o,102)}Ym(b,27512,(c[7119]|0)-1|0);c[6877]=0;c[6876]=17088;if(!((c[7116]|0)==-1)){c[n>>2]=28464;c[n+4>>2]=14;c[n+8>>2]=0;qh(28464,n,102)}Ym(b,27504,(c[7117]|0)-1|0);c[6875]=0;c[6874]=17048;if(!((c[7114]|0)==-1)){c[m>>2]=28456;c[m+4>>2]=14;c[m+8>>2]=0;qh(28456,m,102)}Ym(b,27496,(c[7115]|0)-1|0);c[6873]=0;c[6872]=17008;if(!((c[7112]|0)==-1)){c[l>>2]=28448;c[l+4>>2]=14;c[l+8>>2]=0;qh(28448,l,102)}Ym(b,27488,(c[7113]|0)-1|0);c[4119]=0;c[4118]=17328;c[4120]=17376;if(!((c[7126]|0)==-1)){c[k>>2]=28504;c[k+4>>2]=14;c[k+8>>2]=0;qh(28504,k,102)}Ym(b,16472,(c[7127]|0)-1|0);c[4115]=0;c[4114]=17232;c[4116]=17280;if(!((c[7124]|0)==-1)){c[j>>2]=28496;c[j+4>>2]=14;c[j+8>>2]=0;qh(28496,j,102)}Ym(b,16456,(c[7125]|0)-1|0);c[4111]=0;c[4110]=18232;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);c[4112]=c[6868];c[4110]=17200;if(!((c[7122]|0)==-1)){c[h>>2]=28488;c[h+4>>2]=14;c[h+8>>2]=0;qh(28488,h,102)}Ym(b,16440,(c[7123]|0)-1|0);c[4107]=0;c[4106]=18232;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);c[4108]=c[6868];c[4106]=17168;if(!((c[7120]|0)==-1)){c[g>>2]=28480;c[g+4>>2]=14;c[g+8>>2]=0;qh(28480,g,102)}Ym(b,16424,(c[7121]|0)-1|0);c[6889]=0;c[6888]=17560;if(!((c[7134]|0)==-1)){c[f>>2]=28536;c[f+4>>2]=14;c[f+8>>2]=0;qh(28536,f,102)}Ym(b,27552,(c[7135]|0)-1|0);c[6887]=0;c[6886]=17520;if(!((c[7132]|0)==-1)){c[H>>2]=28528;c[H+4>>2]=14;c[H+8>>2]=0;qh(28528,H,102)}Ym(b,27544,(c[7133]|0)-1|0);i=e;return}function Ym(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;Xg(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){dp(e,k-i|0);j=c[g>>2]|0;break}if(!(i>>>0>k>>>0)){j=h;break}l=h+(k<<2)|0;if((a|0)==(l|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}Yg(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function Zm(a){a=a|0;_m(a);bq(a);return}function _m(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=18264;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{Yg(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}e=h+1|0;if(e>>>0<j-k>>2>>>0){h=e;i=k;g=j}else{break}}}vh(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;Wg(l);return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((b+24|0)==(j|0)){a[b+136|0]=0;l=b|0;Wg(l);return}else{bq(j);l=b|0;Wg(l);return}}function $m(){var b=0,d=0;if((a[29448]|0)!=0){b=c[6860]|0;return b|0}if((ub(29448)|0)==0){b=c[6860]|0;return b|0}do{if((a[29456]|0)==0){if((ub(29456)|0)==0){break}Xm(27632,1);c[6864]=27632;c[6862]=27456}}while(0);d=c[c[6862]>>2]|0;c[6866]=d;Xg(d|0);c[6860]=27464;b=c[6860]|0;return b|0}function an(a){a=a|0;var b=0;b=c[($m()|0)>>2]|0;c[a>>2]=b;Xg(b|0);return}function bn(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;Xg(d|0);return}function cn(a){a=a|0;Yg(c[a>>2]|0)|0;return}function dn(a,b){a=a|0;b=b|0;var d=0;d=b|0;Xg(c[d>>2]|0);b=a|0;Yg(c[b>>2]|0)|0;c[b>>2]=c[d>>2];return a|0}function en(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=14;c[e+8>>2]=0;qh(a,e,102)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=oc(4)|0;h=g;zp(h);Fb(g|0,22832,140);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=oc(4)|0;h=g;zp(h);Fb(g|0,22832,140);return 0}else{i=d;return f|0}return 0}function fn(a){a=a|0;Wg(a|0);bq(a);return}function gn(a){a=a|0;if((a|0)==0){return}zc[c[(c[a>>2]|0)+4>>2]&511](a);return}function hn(a){a=a|0;c[a+4>>2]=(H=c[7156]|0,c[7156]=H+1,H)+1;return}function jn(a){a=a|0;Wg(a|0);bq(a);return}function kn(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(!(e>>>0<128>>>0)){f=0;return f|0}f=(b[(c[(mb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function ln(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(mb()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function mn(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if(!((b[(c[(mb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0)){g=h;i=7;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=7;break}else{h=e}}if((i|0)==7){return g|0}return 0}function nn(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=7;break}e=c[a>>2]|0;if(!(e>>>0<128>>>0)){g=a;h=7;break}if((b[(c[(mb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=7;break}else{a=a+4|0}}if((h|0)==7){return g|0}return 0}function on(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(rc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function pn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(rc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function qn(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(sc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function rn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(sc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function sn(a,b){a=a|0;b=b|0;return b<<24>>24|0}function tn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function un(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function vn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function wn(b){b=b|0;var d=0;c[b>>2]=18376;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}cq(d)}}while(0);Wg(b|0);bq(b);return}function xn(b){b=b|0;var d=0;c[b>>2]=18376;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}cq(d)}}while(0);Wg(b|0);return}function yn(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(rc()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function zn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(rc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function An(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(sc()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function Bn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(sc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Cn(a,b){a=a|0;b=b|0;return b|0}function Dn(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function En(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function Fn(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function Gn(a){a=a|0;Wg(a|0);bq(a);return}function Hn(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function In(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function Jn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Kn(a){a=a|0;return 1}function Ln(a){a=a|0;return 1}function Mn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function Nn(a){a=a|0;return 1}function On(a){a=a|0;Vm(a);bq(a);return}function Pn(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=_b(c[t>>2]|0)|0;z=sp(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){_b(y|0)|0}if((z|0)==(-1|0)){A=15;break}else if((z|0)==0){B=1;A=50;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=48;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=_b(c[t>>2]|0)|0;z=rp(u,0,d)|0;if((y|0)!=0){_b(y|0)|0}if((z|0)==-1){B=2;A=50;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=50;break}b:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break b}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break a}else{v=D;w=E;x=C}}if((A|0)==15){c[k>>2]=v;c:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=_b(c[t>>2]|0)|0;z=rp(u,s,n)|0;if((p|0)!=0){_b(p|0)|0}if((z|0)==-1){K=x;break c}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==48){r=c[g>>2]|0;break}else if((A|0)==50){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function Qn(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=_b(c[s>>2]|0)|0;y=op(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){_b(w|0)|0}if((y|0)==(-1|0)){z=15;break}else if((y|0)==0){A=2;z=49;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=47;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=_b(c[s>>2]|0)|0;F=np(w,y,1,d)|0;if((E|0)!=0){_b(E|0)|0}if((F|0)!=0){A=2;z=49;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break a}else{t=C;u=D;v=B}}if((z|0)==15){c[k>>2]=t;b:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=_b(c[s>>2]|0)|0;E=np(v,r,x-r|0,n)|0;if((o|0)!=0){_b(o|0)|0}if((E|0)==(-1|0)){z=26;break}else if((E|0)==(-2|0)){z=27;break}else if((E|0)==0){I=r+1|0}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break b}else{v=E;r=I}}if((z|0)==26){c[g>>2]=r;A=2;i=l;return A|0}else if((z|0)==27){c[g>>2]=r;A=1;i=l;return A|0}}}while(0);c[g>>2]=H;A=(H|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==47){q=c[g>>2]|0;break}else if((z|0)==49){i=l;return A|0}}}while(0);A=(q|0)!=(f|0)|0;i=l;return A|0}function Rn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=_b(c[b+8>>2]|0)|0;b=rp(e,0,d)|0;if((j|0)!=0){_b(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function Sn(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=_b(c[b>>2]|0)|0;d=qp(0,0,4)|0;if((a|0)!=0){_b(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=_b(d|0)|0;if((b|0)==0){e=0;return e|0}_b(b|0)|0;e=0;return e|0}function Tn(a){a=a|0;return 0}function Un(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=_b(c[i>>2]|0)|0;l=mp(a,h-a|0,b)|0;if((k|0)!=0){_b(k|0)|0}if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;m=15;break}else if((l|0)==0){n=1;o=a+1|0}else{n=l;o=a+l|0}l=n+d|0;k=j+1|0;if(k>>>0>=f>>>0|(o|0)==(e|0)){g=l;m=15;break}else{a=o;d=l;j=k}}if((m|0)==15){return g|0}return 0}function Vn(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=_b(b|0)|0;if((a|0)==0){d=4;break}_b(a|0)|0;d=4}}while(0);return d|0}function Wn(a){a=a|0;Wg(a|0);bq(a);return}function Xn(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Yn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Yn(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(!(l>>>0<f>>>0)){m=0;return m|0}d=i;i=l;a:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=26;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=26;break a}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if(!((l&65535)>>>0<56320>>>0)){if((l&65535)>>>0<57344>>>0){m=2;o=26;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=26;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=26;break a}if((d-(c[j>>2]|0)|0)<4){m=1;o=26;break a}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=26;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=26;break}}if((o|0)==26){return m|0}return 0}function Zn(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=_n(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function _n(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if(!((a[h]|0)==-17)){m=h;break}if(!((a[h+1|0]|0)==-69)){m=h;break}if(!((a[h+2|0]|0)==-65)){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);a:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;b:while(1){if(!(e>>>0<i>>>0)){o=n;break a}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=41;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=n+1}else{if((p&255)>>>0<194>>>0){r=2;s=41;break b}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=41;break b}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=41;break b}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=u;c[g>>2]=n+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=41;break b}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==224){if(!((u&-32)<<24>>24==-96)){r=2;s=41;break b}}else if((q|0)==237){if(!((u&-32)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((u&-64)<<24>>24==-128)){r=2;s=41;break b}}v=t&255;if((v&192|0)!=128){r=2;s=41;break b}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=t;c[g>>2]=n+3;break}if(!((p&255)>>>0<245>>>0)){r=2;s=41;break b}if((h-n|0)<4){r=1;s=41;break b}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if(!((t+112&255)>>>0<48>>>0)){r=2;s=41;break b}}else if((q|0)==244){if(!((t&-16)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((t&-64)<<24>>24==-128)){r=2;s=41;break b}}w=v&255;if((w&192|0)!=128){r=2;s=41;break b}v=u&255;if((v&192|0)!=128){r=2;s=41;break b}if((l-e|0)<4){r=1;s=41;break b}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=e+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break a}}if((s|0)==41){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function $n(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function ao(a){a=a|0;return 0}function bo(a){a=a|0;return 0}function co(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return eo(c,d,e,1114111,0)|0}function eo(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break a}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break a}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if(!((p&-32)<<24>>24==-96)){s=21;break b}}else if((l|0)==237){if(!((p&-32)<<24>>24==-128)){s=23;break b}}else{if(!((p&-64)<<24>>24==-128)){s=25;break b}}t=r&255;if((t&192|0)!=128){m=j;break a}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break a}n=j+3|0;o=i;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}u=j;if((g-u|0)<4){m=j;break a}if((e-i|0)>>>0<2>>>0){m=j;break a}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if(!((t+112&255)>>>0<48>>>0)){s=34;break b}}else if((l|0)==244){if(!((t&-16)<<24>>24==-128)){s=36;break b}}else{if(!((t&-64)<<24>>24==-128)){s=38;break b}}v=p&255;if((v&192|0)!=128){m=j;break a}p=r&255;if((p&192|0)!=128){m=j;break a}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break a}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==34){w=u-b|0;return w|0}else if((s|0)==36){w=u-b|0;return w|0}else if((s|0)==38){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function fo(a){a=a|0;return 4}function go(a){a=a|0;Wg(a|0);bq(a);return}function ho(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=io(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function io(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){k=0;return k|0}j=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=19;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=19;break}}if((l|0)==19){return k|0}return 0}function jo(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=ko(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function ko(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if(!((a[g]|0)==-17)){l=g;break}if(!((a[g+1|0]|0)==-69)){l=g;break}if(!((a[g+2|0]|0)==-65)){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);a:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;b:while(1){if(!(k>>>0<h>>>0)){m=b;break a}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=o;c[f>>2]=b+1}else{if((n&255)>>>0<194>>>0){p=2;q=40;break b}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=40;break b}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=40;break b}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=40;break b}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==224){if(!((s&-32)<<24>>24==-96)){p=2;q=40;break b}}else if((o|0)==237){if(!((s&-32)<<24>>24==-128)){p=2;q=40;break b}}else{if(!((s&-64)<<24>>24==-128)){p=2;q=40;break b}}t=r&255;if((t&192|0)!=128){p=2;q=40;break b}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=r;c[f>>2]=b+3;break}if(!((n&255)>>>0<245>>>0)){p=2;q=40;break b}if((g-b|0)<4){p=1;q=40;break b}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==240){if(!((r+112&255)>>>0<48>>>0)){p=2;q=40;break b}}else if((o|0)==244){if(!((r&-16)<<24>>24==-128)){p=2;q=40;break b}}else{if(!((r&-64)<<24>>24==-128)){p=2;q=40;break b}}u=t&255;if((u&192|0)!=128){p=2;q=40;break b}t=s&255;if((t&192|0)!=128){p=2;q=40;break b}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break a}}if((q|0)==40){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function lo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mo(a){a=a|0;return 0}function no(a){a=a|0;return 0}function oo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return po(c,d,e,1114111,0)|0}function po(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;b:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break a}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break a}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break a}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if(!((o&-32)<<24>>24==-96)){r=21;break b}}else if((l|0)==237){if(!((o&-32)<<24>>24==-128)){r=23;break b}}else{if(!((o&-64)<<24>>24==-128)){r=25;break b}}s=q&255;if((s&192|0)!=128){m=j;break a}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break a}n=j+3|0;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}t=j;if((g-t|0)<4){m=j;break a}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==240){if(!((s+112&255)>>>0<48>>>0)){r=33;break b}}else if((l|0)==244){if(!((s&-16)<<24>>24==-128)){r=35;break b}}else{if(!((s&-64)<<24>>24==-128)){r=37;break b}}u=o&255;if((u&192|0)!=128){m=j;break a}o=q&255;if((o&192|0)!=128){m=j;break a}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break a}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break a}i=i+1|0;j=n}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function qo(a){a=a|0;return 4}function ro(a){a=a|0;Wg(a|0);bq(a);return}function so(a){a=a|0;Wg(a|0);bq(a);return}function to(a){a=a|0;c[a>>2]=17472;vh(a+12|0);Wg(a|0);bq(a);return}function uo(a){a=a|0;c[a>>2]=17472;vh(a+12|0);Wg(a|0);return}function vo(a){a=a|0;c[a>>2]=17424;vh(a+16|0);Wg(a|0);bq(a);return}function wo(a){a=a|0;c[a>>2]=17424;vh(a+16|0);Wg(a|0);return}function xo(b){b=b|0;return a[b+8|0]|0}function yo(a){a=a|0;return c[a+8>>2]|0}function zo(b){b=b|0;return a[b+9|0]|0}function Ao(a){a=a|0;return c[a+12>>2]|0}function Bo(a,b){a=a|0;b=b|0;sh(a,b+12|0);return}function Co(a,b){a=a|0;b=b|0;sh(a,b+16|0);return}function Do(a,b){a=a|0;b=b|0;th(a,8272,4);return}function Eo(a,b){a=a|0;b=b|0;Fh(a,8120,up(8120)|0);return}function Fo(a,b){a=a|0;b=b|0;th(a,7752,5);return}function Go(a,b){a=a|0;b=b|0;Fh(a,7448,up(7448)|0);return}function Ho(b){b=b|0;var d=0;if((a[29544]|0)!=0){d=c[6986]|0;return d|0}if((ub(29544)|0)==0){d=c[6986]|0;return d|0}do{if((a[29432]|0)==0){if((ub(29432)|0)==0){break}tq(26984,0,168)|0;cb(274,0,t|0)|0}}while(0);xh(26984,13216)|0;xh(26996,13208)|0;xh(27008,13080)|0;xh(27020,13064)|0;xh(27032,12944)|0;xh(27044,12928)|0;xh(27056,12904)|0;xh(27068,12872)|0;xh(27080,12856)|0;xh(27092,12752)|0;xh(27104,12712)|0;xh(27116,12704)|0;xh(27128,12696)|0;xh(27140,12640)|0;c[6986]=26984;d=c[6986]|0;return d|0}function Io(b){b=b|0;var d=0;if((a[29488]|0)!=0){d=c[6964]|0;return d|0}if((ub(29488)|0)==0){d=c[6964]|0;return d|0}do{if((a[29408]|0)==0){if((ub(29408)|0)==0){break}tq(26240,0,168)|0;cb(156,0,t|0)|0}}while(0);Ih(26240,14624)|0;Ih(26252,14592)|0;Ih(26264,14496)|0;Ih(26276,14456)|0;Ih(26288,14e3)|0;Ih(26300,13968)|0;Ih(26312,13928)|0;Ih(26324,13880)|0;Ih(26336,13864)|0;Ih(26348,13800)|0;Ih(26360,13784)|0;Ih(26372,13768)|0;Ih(26384,13752)|0;Ih(26396,13280)|0;c[6964]=26240;d=c[6964]|0;return d|0}function Jo(b){b=b|0;var d=0;if((a[29536]|0)!=0){d=c[6984]|0;return d|0}if((ub(29536)|0)==0){d=c[6984]|0;return d|0}do{if((a[29424]|0)==0){if((ub(29424)|0)==0){break}tq(26696,0,288)|0;cb(176,0,t|0)|0}}while(0);xh(26696,1472)|0;xh(26708,1408)|0;xh(26720,1336)|0;xh(26732,1280)|0;xh(26744,1240)|0;xh(26756,1232)|0;xh(26768,1168)|0;xh(26780,1160)|0;xh(26792,1080)|0;xh(26804,1072)|0;xh(26816,1e3)|0;xh(26828,912)|0;xh(26840,904)|0;xh(26852,848)|0;xh(26864,784)|0;xh(26876,776)|0;xh(26888,1240)|0;xh(26900,768)|0;xh(26912,760)|0;xh(26924,15232)|0;xh(26936,15224)|0;xh(26948,15216)|0;xh(26960,15192)|0;xh(26972,15184)|0;c[6984]=26696;d=c[6984]|0;return d|0}function Ko(b){b=b|0;var d=0;if((a[29480]|0)!=0){d=c[6962]|0;return d|0}if((ub(29480)|0)==0){d=c[6962]|0;return d|0}do{if((a[29400]|0)==0){if((ub(29400)|0)==0){break}tq(25952,0,288)|0;cb(130,0,t|0)|0}}while(0);Ih(25952,2928)|0;Ih(25964,2752)|0;Ih(25976,2728)|0;Ih(25988,2704)|0;Ih(26e3,1952)|0;Ih(26012,2664)|0;Ih(26024,2488)|0;Ih(26036,2456)|0;Ih(26048,2320)|0;Ih(26060,2256)|0;Ih(26072,2216)|0;Ih(26084,2176)|0;Ih(26096,2160)|0;Ih(26108,2088)|0;Ih(26120,2072)|0;Ih(26132,1984)|0;Ih(26144,1952)|0;Ih(26156,1872)|0;Ih(26168,1752)|0;Ih(26180,1696)|0;Ih(26192,1680)|0;Ih(26204,1608)|0;Ih(26216,1592)|0;Ih(26228,1536)|0;c[6962]=25952;d=c[6962]|0;return d|0}function Lo(b){b=b|0;var d=0;if((a[29552]|0)!=0){d=c[6988]|0;return d|0}if((ub(29552)|0)==0){d=c[6988]|0;return d|0}do{if((a[29440]|0)==0){if((ub(29440)|0)==0){break}tq(27152,0,288)|0;cb(128,0,t|0)|0}}while(0);xh(27152,3224)|0;xh(27164,3096)|0;c[6988]=27152;d=c[6988]|0;return d|0}function Mo(b){b=b|0;var d=0;if((a[29496]|0)!=0){d=c[6966]|0;return d|0}if((ub(29496)|0)==0){d=c[6966]|0;return d|0}do{if((a[29416]|0)==0){if((ub(29416)|0)==0){break}tq(26408,0,288)|0;cb(248,0,t|0)|0}}while(0);Ih(26408,3840)|0;Ih(26420,3664)|0;c[6966]=26408;d=c[6966]|0;return d|0}function No(b){b=b|0;if((a[29560]|0)!=0){return 27960}if((ub(29560)|0)==0){return 27960}th(27960,6976,8);cb(266,27960,t|0)|0;return 27960}function Oo(b){b=b|0;if((a[29504]|0)!=0){return 27872}if((ub(29504)|0)==0){return 27872}Fh(27872,6752,up(6752)|0);cb(200,27872,t|0)|0;return 27872}function Po(b){b=b|0;if((a[29584]|0)!=0){return 28008}if((ub(29584)|0)==0){return 28008}th(28008,6472,8);cb(266,28008,t|0)|0;return 28008}function Qo(b){b=b|0;if((a[29528]|0)!=0){return 27920}if((ub(29528)|0)==0){return 27920}Fh(27920,6200,up(6200)|0);cb(200,27920,t|0)|0;return 27920}function Ro(b){b=b|0;if((a[29576]|0)!=0){return 27992}if((ub(29576)|0)==0){return 27992}th(27992,5920,20);cb(266,27992,t|0)|0;return 27992}function So(b){b=b|0;if((a[29520]|0)!=0){return 27904}if((ub(29520)|0)==0){return 27904}Fh(27904,5608,up(5608)|0);cb(200,27904,t|0)|0;return 27904}function To(b){b=b|0;if((a[29568]|0)!=0){return 27976}if((ub(29568)|0)==0){return 27976}th(27976,5424,11);cb(266,27976,t|0)|0;return 27976}function Uo(b){b=b|0;if((a[29512]|0)!=0){return 27888}if((ub(29512)|0)==0){return 27888}Fh(27888,5320,up(5320)|0);cb(200,27888,t|0)|0;return 27888}function Vo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Ub()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=+qq(b,g,c[6868]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function Wo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Ub()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=+qq(b,g,c[6868]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function Xo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Ub()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);l=+qq(b,g,c[6868]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function Yo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Ub()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);n=Ib(b|0,h|0,f|0,c[6868]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=J;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(J=j,k)|0}function Zo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Ub()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);m=Ib(b|0,h|0,f|0,c[6868]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function _o(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Ub()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);m=Ib(b|0,h|0,f|0,c[6868]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function $o(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Ub()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);m=Ib(b|0,h|0,f|0,c[6868]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function ap(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}l=Ub()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);n=Mb(b|0,h|0,f|0,c[6868]|0)|0;f=J;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}if((b|0)==34){c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;i=g;return(J=b?2147483647:-2147483648,b?-1:0)|0}else{j=f;k=n;i=g;return(J=j,k)|0}return 0}function bp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Ub()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[29464]|0)==0){if((ub(29464)|0)==0){break}c[6868]=Ta(2147483647,10976,0)|0}}while(0);m=Mb(b|0,h|0,f|0,c[6868]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>0>>>0){j=2147483647}else{break}i=g;return j|0}else{d=-1;if((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0){c[e>>2]=4;break}d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>2147483647>>>0){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function cp(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;zc[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;zc[f&511](a);return}}function dp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!(h-i>>2>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){Wm(0)}m=h-l|0;do{if(m>>2>>>0<536870911>>>0){l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){n=0;o=0;break}l=b+128|0;if(!((a[l]|0)==0&h>>>0<29>>>0)){p=h;q=11;break}a[l]=1;n=j;o=h}else{p=1073741823;q=11}}while(0);if((q|0)==11){n=$p(p<<2)|0;o=p}p=d;d=n+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;p=p-1|0;}while((p|0)!=0);p=c[k>>2]|0;r=(c[f>>2]|0)-p|0;q=n+(g-(r>>2)<<2)|0;g=p;sq(q|0,g|0,r)|0;c[k>>2]=q;c[f>>2]=d;c[e>>2]=n+(o<<2);if((p|0)==0){return}if((j|0)==(p|0)){a[b+128|0]=0;return}else{bq(g);return}}function ep(a){a=a|0;Hh(26684);Hh(26672);Hh(26660);Hh(26648);Hh(26636);Hh(26624);Hh(26612);Hh(26600);Hh(26588);Hh(26576);Hh(26564);Hh(26552);Hh(26540);Hh(26528);Hh(26516);Hh(26504);Hh(26492);Hh(26480);Hh(26468);Hh(26456);Hh(26444);Hh(26432);Hh(26420);Hh(26408);return}function fp(a){a=a|0;vh(27428);vh(27416);vh(27404);vh(27392);vh(27380);vh(27368);vh(27356);vh(27344);vh(27332);vh(27320);vh(27308);vh(27296);vh(27284);vh(27272);vh(27260);vh(27248);vh(27236);vh(27224);vh(27212);vh(27200);vh(27188);vh(27176);vh(27164);vh(27152);return}function gp(a){a=a|0;Hh(26228);Hh(26216);Hh(26204);Hh(26192);Hh(26180);Hh(26168);Hh(26156);Hh(26144);Hh(26132);Hh(26120);Hh(26108);Hh(26096);Hh(26084);Hh(26072);Hh(26060);Hh(26048);Hh(26036);Hh(26024);Hh(26012);Hh(26e3);Hh(25988);Hh(25976);Hh(25964);Hh(25952);return}function hp(a){a=a|0;vh(26972);vh(26960);vh(26948);vh(26936);vh(26924);vh(26912);vh(26900);vh(26888);vh(26876);vh(26864);vh(26852);vh(26840);vh(26828);vh(26816);vh(26804);vh(26792);vh(26780);vh(26768);vh(26756);vh(26744);vh(26732);vh(26720);vh(26708);vh(26696);return}function ip(a){a=a|0;Hh(26396);Hh(26384);Hh(26372);Hh(26360);Hh(26348);Hh(26336);Hh(26324);Hh(26312);Hh(26300);Hh(26288);Hh(26276);Hh(26264);Hh(26252);Hh(26240);return}function jp(a){a=a|0;vh(27140);vh(27128);vh(27116);vh(27104);vh(27092);vh(27080);vh(27068);vh(27056);vh(27044);vh(27032);vh(27020);vh(27008);vh(26996);vh(26984);return}function kp(a){a=+a;var b=0,d=0,e=0,f=0,g=0,j=0,l=0,m=0,n=0,o=0;b=i;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=(e>>>20|0<<12)&2047;if((f|0)==2047){g=(d|0|0)!=0|(e&1048575|0)!=0?-2147483648:2147483647;i=b;return g|0}else if((f|0)==0){j=d<<12|0>>>20;l=e<<12|d>>>20;if((j|0)==0&(l|0)==0){g=-2147483648;i=b;return g|0}d=-1;if((l|0)>(d|0)|(l|0)==(d|0)&j>>>0>-1>>>0){m=l;n=j;o=-1023}else{g=-1023;i=b;return g|0}while(1){j=o-1|0;l=n<<1|0>>>31;d=m<<1|n>>>31;e=-1;if((d|0)>(e|0)|(d|0)==(e|0)&l>>>0>-1>>>0){m=d;n=l;o=j}else{g=j;break}}i=b;return g|0}else{g=f-1023|0;i=b;return g|0}return 0}function lp(a){a=+a;var b=0,d=0,e=0.0;h[k>>3]=a;b=c[k+4>>2]&2146435072;d=2146435072;if(!(b>>>0<d>>>0|b>>>0==d>>>0&(c[k>>2]&0)>>>0<0>>>0)){e=a*a;return+e}if(a==0.0){e=-1.0/(a*a);return+e}else{e=+(kp(a)|0);return+e}return 0.0}function mp(a,b,c){a=a|0;b=b|0;c=c|0;return np(0,a,b,(c|0)!=0?c:24848)|0}function np(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?24840:f)|0;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break a}o=d+1|0;p=c[16192+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);b:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break a}else{s=o;t=p;u=q;v=l}while(1){s=s+1|0;t=(v&255)-128|t<<6;u=u-1|0;if((t|0)>=0){break}if((u|0)==0){r=t;break b}v=a[s]|0;if(((v&255)-128|0)>>>0>63>>>0){break a}}c[j>>2]=0;c[m>>2]=t;k=e-u|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(Ub()|0)>>2]=84;k=-1;i=g;return k|0}function op(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;a:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break a}z=y?s:x;A=t-z|0;x=pp(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break a}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);b:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=np(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break b}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==0){c[j>>2]=0;D=G;break}else if((J|0)==(-1|0)){D=-1;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function pp(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;h=c[e>>2]|0;do{if((g|0)==0){i=5}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=5;break}if((b|0)==0){l=k;m=h;n=f;i=16;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=36}}while(0);if((i|0)==5){if((b|0)==0){s=h;t=f;i=7}else{u=h;v=b;w=f;i=6}}a:while(1){if((i|0)==6){i=0;if((w|0)==0){x=f;i=53;break}else{y=w;z=v;A=u}while(1){h=a[A]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((A&3|0)==0&y>>>0>3>>>0){B=y;C=z;D=A}else{E=A;F=z;G=y;H=h;break}while(1){I=c[D>>2]|0;if(((I-16843009|I)&-2139062144|0)!=0){i=30;break}c[C>>2]=I&255;c[C+4>>2]=d[D+1|0]|0;c[C+8>>2]=d[D+2|0]|0;J=D+4|0;K=C+16|0;c[C+12>>2]=d[D+3|0]|0;L=B-4|0;if(L>>>0>3>>>0){B=L;C=K;D=J}else{i=31;break}}if((i|0)==30){i=0;E=D;F=C;G=B;H=I&255;break}else if((i|0)==31){i=0;E=J;F=K;G=L;H=a[J]|0;break}}else{E=A;F=z;G=y;H=h}}while(0);M=H&255;if(!((M-1|0)>>>0<127>>>0)){break}c[F>>2]=M;h=G-1|0;if((h|0)==0){x=f;i=53;break a}else{y=h;z=F+4|0;A=E+1|0}}h=M-194|0;if(h>>>0>50>>>0){N=G;O=F;P=E;i=47;break}o=c[16192+(h<<2)>>2]|0;p=E+1|0;q=F;r=G;i=36;continue}else if((i|0)==7){i=0;h=a[s]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((s&3|0)!=0){Q=s;R=t;S=h;break}g=c[s>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){T=t;U=s}else{Q=s;R=t;S=g&255;break}do{U=U+4|0;T=T-4|0;V=c[U>>2]|0;}while(((V-16843009|V)&-2139062144|0)==0);Q=U;R=T;S=V&255}else{Q=s;R=t;S=h}}while(0);h=S&255;if((h-1|0)>>>0<127>>>0){s=Q+1|0;t=R-1|0;i=7;continue}g=h-194|0;if(g>>>0>50>>>0){N=R;O=b;P=Q;i=47;break}l=c[16192+(g<<2)>>2]|0;m=Q+1|0;n=R;i=16;continue}else if((i|0)==16){i=0;g=(d[m]|0)>>>3;if((g-16|g+(l>>26))>>>0>7>>>0){i=17;break}g=m+1|0;do{if((l&33554432|0)==0){W=g}else{if(((d[g]|0)-128|0)>>>0>63>>>0){i=20;break a}h=m+2|0;if((l&524288|0)==0){W=h;break}if(((d[h]|0)-128|0)>>>0>63>>>0){i=23;break a}W=m+3|0}}while(0);s=W;t=n-1|0;i=7;continue}else if((i|0)==36){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7>>>0){i=37;break}h=p+1|0;X=g-128|o<<6;do{if((X|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63>>>0){i=40;break a}k=p+2|0;Y=g|X<<6;if((Y|0)>=0){Z=Y;_=k;break}g=(d[k]|0)-128|0;if(g>>>0>63>>>0){i=43;break a}Z=g|Y<<6;_=p+3|0}else{Z=X;_=h}}while(0);c[q>>2]=Z;u=_;v=q+4|0;w=r-1|0;i=6;continue}}if((i|0)==17){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==20){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==23){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==37){$=o;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==40){$=X;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==43){$=Y;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==53){return x|0}if((i|0)==46){if(($|0)==0){N=ca;O=ba;P=aa;i=47}else{da=ba;ea=aa}}do{if((i|0)==47){if((a[P]|0)!=0){da=O;ea=P;break}if((O|0)!=0){c[O>>2]=0;c[e>>2]=0}x=f-N|0;return x|0}}while(0);c[(Ub()|0)>>2]=84;if((da|0)==0){x=-1;return x|0}c[e>>2]=ea;x=-1;return x|0}function qp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[16192+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(Ub()|0)>>2]=84;j=-1;i=g;return j|0}function rp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(Ub()|0)>>2]=84;f=-1;return f|0}return 0}function sp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;a:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break a}x=w?r:s;y=s-x|0;w=tp(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break a}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);b:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=rp(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break b}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function tp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=rp(j,o,0)|0;if((k|0)==-1){l=-1;p=26;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=26;break}else{m=k;n=h;o=r}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127>>>0){j=rp(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break a}}i=f;return l|0}else{s=e;t=b}}while(0);b:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=rp(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(n>>>0>u>>>0){p=20;break}rp(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break b}else{u=z;v=y;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==26){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function up(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function vp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function wp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function xp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function yp(a){a=a|0;return}function zp(a){a=a|0;c[a>>2]=16880;return}function Ap(a){a=a|0;bq(a);return}function Bp(a){a=a|0;return}function Cp(a){a=a|0;return 1248}function Dp(a){a=a|0;yp(a|0);return}function Ep(a){a=a|0;return}function Fp(a){a=a|0;return}function Gp(a){a=a|0;yp(a|0);bq(a);return}function Hp(a){a=a|0;yp(a|0);bq(a);return}function Ip(a){a=a|0;yp(a|0);bq(a);return}function Jp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=Np(b,24392,24376,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}tq(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Oc[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function Kp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function Lp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;Oc[c[(c[g>>2]|0)+28>>2]&31](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function Mp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Oc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;Oc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]|0)!=0){m=16;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=16;break}}if((m|0)==16){return}}function Np(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;tq(e|0,0,39)|0;if((k|0)==(d|0)){c[g+48>>2]=1;Lc[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}xc[c[(c[k>>2]|0)+24>>2]&7](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function Op(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;a:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;b:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;Lc[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]|0)!=0){x=t;y=r;break}do{if((a[m]|0)==0){z=t;A=r}else{if((a[l]|0)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break b}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break a}if((c[o>>2]&2|0)==0){B=27;break a}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);do{if((B|0)==23){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=26;break}if((c[d+24>>2]|0)!=2){C=D;B=26;break}a[d+54|0]=1;if(D){B=27}else{B=28}}}while(0);if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;xc[c[(c[y>>2]|0)+24>>2]&7](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]|0)!=0){B=53;break}if((c[b>>2]|0)==1){B=53;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;xc[c[(c[w>>2]|0)+24>>2]&7](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=53;break}}if((B|0)==53){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]|0)!=0){B=53;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=53;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;xc[c[(c[w>>2]|0)+24>>2]&7](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=53;break}}if((B|0)==53){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]|0)!=0){B=53;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;xc[c[(c[i>>2]|0)+24>>2]&7](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=53;break}}if((B|0)==53){return}}function Pp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;xc[c[(c[h>>2]|0)+24>>2]&7](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;Lc[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]|0)==0){m=0;n=13}else{if((a[j]|0)==0){m=1;n=13}}a:do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=16;break}a[d+54|0]=1;if(m){break a}}else{n=16}}while(0);if((n|0)==16){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function Qp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function Rp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]|0;k=d+53|0;l=a[k]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;Lc[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);a:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]|0)!=0){break a}do{if((a[i]|0)==0){if((a[k]|0)==0){break}if((c[q>>2]&1|0)==0){break a}}else{if((c[o>>2]|0)==1){break a}if((c[q>>2]&2|0)==0){break a}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;Lc[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function Sp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;Lc[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function Tp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}



function Up(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[6370]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=25520+(h<<2)|0;j=25520+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[6370]=e&~(1<<g)}else{if(l>>>0<(c[6374]|0)>>>0){ec();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{ec();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(!(b>>>0>(c[6372]|0)>>>0)){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=25520+(p<<2)|0;m=25520+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[6370]=e&~(1<<r)}else{if(l>>>0<(c[6374]|0)>>>0){ec();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{ec();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[6372]|0;if((l|0)!=0){q=c[6375]|0;d=l>>>3;l=d<<1;f=25520+(l<<2)|0;k=c[6370]|0;h=1<<d;do{if((k&h|0)==0){c[6370]=k|h;s=f;t=25520+(l+2<<2)|0}else{d=25520+(l+2<<2)|0;g=c[d>>2]|0;if(!(g>>>0<(c[6374]|0)>>>0)){s=g;t=d;break}ec();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[6372]=m;c[6375]=e;n=i;return n|0}l=c[6371]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[25784+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[6374]|0;if(r>>>0<i>>>0){ec();return 0}e=r+b|0;m=e;if(!(r>>>0<e>>>0)){ec();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){ec();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){ec();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){ec();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{ec();return 0}}}while(0);a:do{if((e|0)!=0){f=c[d+28>>2]|0;i=25784+(f<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[6371]=c[6371]&~(1<<f);break a}else{if(e>>>0<(c[6374]|0)>>>0){ec();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break a}}}while(0);if(v>>>0<(c[6374]|0)>>>0){ec();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[6372]|0;if((f|0)!=0){e=c[6375]|0;i=f>>>3;f=i<<1;q=25520+(f<<2)|0;k=c[6370]|0;g=1<<i;do{if((k&g|0)==0){c[6370]=k|g;y=q;z=25520+(f+2<<2)|0}else{i=25520+(f+2<<2)|0;l=c[i>>2]|0;if(!(l>>>0<(c[6374]|0)>>>0)){y=l;z=i;break}ec();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[6372]=p;c[6375]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[6371]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[25784+(A<<2)>>2]|0;b:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break b}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[25784+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(!(J>>>0<((c[6372]|0)-g|0)>>>0)){o=g;break}q=K;m=c[6374]|0;if(q>>>0<m>>>0){ec();return 0}p=q+g|0;k=p;if(!(q>>>0<p>>>0)){ec();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){ec();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){ec();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){ec();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{ec();return 0}}}while(0);c:do{if((e|0)!=0){i=c[K+28>>2]|0;m=25784+(i<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[6371]=c[6371]&~(1<<i);break c}else{if(e>>>0<(c[6374]|0)>>>0){ec();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break c}}}while(0);if(L>>>0<(c[6374]|0)>>>0){ec();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=25520+(e<<2)|0;r=c[6370]|0;j=1<<i;do{if((r&j|0)==0){c[6370]=r|j;O=m;P=25520+(e+2<<2)|0}else{i=25520+(e+2<<2)|0;d=c[i>>2]|0;if(!(d>>>0<(c[6374]|0)>>>0)){O=d;P=i;break}ec();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=25784+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[6371]|0;l=1<<Q;if((m&l|0)==0){c[6371]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=151;break}else{l=l<<1;m=j}}if((T|0)==151){if(S>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[6374]|0;if(m>>>0<i>>>0){ec();return 0}if(j>>>0<i>>>0){ec();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[6372]|0;if(!(o>>>0>K>>>0)){S=K-o|0;J=c[6375]|0;if(S>>>0>15>>>0){R=J;c[6375]=R+o;c[6372]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[6372]=0;c[6375]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[6373]|0;if(o>>>0<J>>>0){S=J-o|0;c[6373]=S;J=c[6376]|0;K=J;c[6376]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[6122]|0)==0){J=Kb(30)|0;if((J-1&J|0)==0){c[6124]=J;c[6123]=J;c[6125]=-1;c[6126]=-1;c[6127]=0;c[6481]=0;c[6122]=(vc(0)|0)&-16^1431655768;break}else{ec();return 0}}}while(0);J=o+48|0;S=c[6124]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(!(S>>>0>o>>>0)){n=0;return n|0}O=c[6480]|0;do{if((O|0)!=0){P=c[6478]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);d:do{if((c[6481]&4|0)==0){O=c[6376]|0;e:do{if((O|0)==0){T=181}else{L=O;P=25928;while(1){U=P|0;M=c[U>>2]|0;if(!(M>>>0>L>>>0)){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=181;break e}else{P=M}}if((P|0)==0){T=181;break}L=R-(c[6373]|0)&Q;if(!(L>>>0<2147483647>>>0)){W=0;break}m=Tb(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=190}}while(0);do{if((T|0)==181){O=Tb(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[6123]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[6478]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[6480]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=Tb($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=190}}while(0);f:do{if((T|0)==190){m=-_|0;if(!((X|0)==-1)){aa=Y;ba=X;T=201;break d}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[6124]|0;O=K-_+g&-g;if(!(O>>>0<2147483647>>>0)){ca=_;break}if((Tb(O|0)|0)==-1){Tb(m|0)|0;W=Y;break f}else{ca=O+_|0;break}}else{ca=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ca;ba=Z;T=201;break d}}}while(0);c[6481]=c[6481]|4;da=W;T=198}else{da=0;T=198}}while(0);do{if((T|0)==198){if(!(S>>>0<2147483647>>>0)){break}W=Tb(S|0)|0;Z=Tb(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ca=Z-W|0;Z=ca>>>0>(o+40|0)>>>0;Y=Z?W:-1;if(!((Y|0)==-1)){aa=Z?ca:da;ba=Y;T=201}}}while(0);do{if((T|0)==201){da=(c[6478]|0)+aa|0;c[6478]=da;if(da>>>0>(c[6479]|0)>>>0){c[6479]=da}da=c[6376]|0;g:do{if((da|0)==0){S=c[6374]|0;if((S|0)==0|ba>>>0<S>>>0){c[6374]=ba}c[6482]=ba;c[6483]=aa;c[6485]=0;c[6379]=c[6122];c[6378]=-1;S=0;do{Y=S<<1;ca=25520+(Y<<2)|0;c[25520+(Y+3<<2)>>2]=ca;c[25520+(Y+2<<2)>>2]=ca;S=S+1|0;}while(S>>>0<32>>>0);S=ba+8|0;if((S&7|0)==0){ea=0}else{ea=-S&7}S=aa-40-ea|0;c[6376]=ba+ea;c[6373]=S;c[ba+(ea+4)>>2]=S|1;c[ba+(aa-36)>>2]=40;c[6377]=c[6126]}else{S=25928;while(1){fa=c[S>>2]|0;ga=S+4|0;ha=c[ga>>2]|0;if((ba|0)==(fa+ha|0)){T=213;break}ca=c[S+8>>2]|0;if((ca|0)==0){break}else{S=ca}}do{if((T|0)==213){if((c[S+12>>2]&8|0)!=0){break}ca=da;if(!(ca>>>0>=fa>>>0&ca>>>0<ba>>>0)){break}c[ga>>2]=ha+aa;Y=(c[6373]|0)+aa|0;Z=da+8|0;if((Z&7|0)==0){ia=0}else{ia=-Z&7}Z=Y-ia|0;c[6376]=ca+ia;c[6373]=Z;c[ca+(ia+4)>>2]=Z|1;c[ca+(Y+4)>>2]=40;c[6377]=c[6126];break g}}while(0);if(ba>>>0<(c[6374]|0)>>>0){c[6374]=ba}S=ba+aa|0;Y=25928;while(1){ja=Y|0;if((c[ja>>2]|0)==(S|0)){T=223;break}ca=c[Y+8>>2]|0;if((ca|0)==0){break}else{Y=ca}}do{if((T|0)==223){if((c[Y+12>>2]&8|0)!=0){break}c[ja>>2]=ba;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ba+8|0;if((S&7|0)==0){ka=0}else{ka=-S&7}S=ba+(aa+8)|0;if((S&7|0)==0){la=0}else{la=-S&7}S=ba+(la+aa)|0;ca=S;Z=ka+o|0;W=ba+Z|0;_=W;K=S-(ba+ka)-o|0;c[ba+(ka+4)>>2]=o|3;do{if((ca|0)==(c[6376]|0)){J=(c[6373]|0)+K|0;c[6373]=J;c[6376]=_;c[ba+(Z+4)>>2]=J|1}else{if((ca|0)==(c[6375]|0)){J=(c[6372]|0)+K|0;c[6372]=J;c[6375]=_;c[ba+(Z+4)>>2]=J|1;c[ba+(J+Z)>>2]=J;break}J=aa+4|0;X=c[ba+(J+la)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;h:do{if(X>>>0<256>>>0){U=c[ba+((la|8)+aa)>>2]|0;Q=c[ba+(aa+12+la)>>2]|0;R=25520+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[6374]|0)>>>0){ec();return 0}if((c[U+12>>2]|0)==(ca|0)){break}ec();return 0}}while(0);if((Q|0)==(U|0)){c[6370]=c[6370]&~(1<<V);break}do{if((Q|0)==(R|0)){ma=Q+8|0}else{if(Q>>>0<(c[6374]|0)>>>0){ec();return 0}m=Q+8|0;if((c[m>>2]|0)==(ca|0)){ma=m;break}ec();return 0}}while(0);c[U+12>>2]=Q;c[ma>>2]=U}else{R=S;m=c[ba+((la|24)+aa)>>2]|0;P=c[ba+(aa+12+la)>>2]|0;do{if((P|0)==(R|0)){O=la|16;g=ba+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ba+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){na=0;break}else{oa=O;pa=e}}else{oa=L;pa=g}while(1){g=oa+20|0;L=c[g>>2]|0;if((L|0)!=0){oa=L;pa=g;continue}g=oa+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{oa=L;pa=g}}if(pa>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[pa>>2]=0;na=oa;break}}else{g=c[ba+((la|8)+aa)>>2]|0;if(g>>>0<(c[6374]|0)>>>0){ec();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){ec();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;na=P;break}else{ec();return 0}}}while(0);if((m|0)==0){break}P=c[ba+(aa+28+la)>>2]|0;U=25784+(P<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=na;if((na|0)!=0){break}c[6371]=c[6371]&~(1<<P);break h}else{if(m>>>0<(c[6374]|0)>>>0){ec();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=na}else{c[m+20>>2]=na}if((na|0)==0){break h}}}while(0);if(na>>>0<(c[6374]|0)>>>0){ec();return 0}c[na+24>>2]=m;R=la|16;P=c[ba+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[na+16>>2]=P;c[P+24>>2]=na;break}}}while(0);P=c[ba+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[na+20>>2]=P;c[P+24>>2]=na;break}}}while(0);qa=ba+(($|la)+aa)|0;ra=$+K|0}else{qa=ca;ra=K}J=qa+4|0;c[J>>2]=c[J>>2]&-2;c[ba+(Z+4)>>2]=ra|1;c[ba+(ra+Z)>>2]=ra;J=ra>>>3;if(ra>>>0<256>>>0){V=J<<1;X=25520+(V<<2)|0;P=c[6370]|0;m=1<<J;do{if((P&m|0)==0){c[6370]=P|m;sa=X;ta=25520+(V+2<<2)|0}else{J=25520+(V+2<<2)|0;U=c[J>>2]|0;if(!(U>>>0<(c[6374]|0)>>>0)){sa=U;ta=J;break}ec();return 0}}while(0);c[ta>>2]=_;c[sa+12>>2]=_;c[ba+(Z+8)>>2]=sa;c[ba+(Z+12)>>2]=X;break}V=W;m=ra>>>8;do{if((m|0)==0){ua=0}else{if(ra>>>0>16777215>>>0){ua=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;ua=ra>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=25784+(ua<<2)|0;c[ba+(Z+28)>>2]=ua;c[ba+(Z+20)>>2]=0;c[ba+(Z+16)>>2]=0;X=c[6371]|0;Q=1<<ua;if((X&Q|0)==0){c[6371]=X|Q;c[m>>2]=V;c[ba+(Z+24)>>2]=m;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}if((ua|0)==31){va=0}else{va=25-(ua>>>1)|0}Q=ra<<va;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ra|0)){break}wa=X+16+(Q>>>31<<2)|0;m=c[wa>>2]|0;if((m|0)==0){T=296;break}else{Q=Q<<1;X=m}}if((T|0)==296){if(wa>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[wa>>2]=V;c[ba+(Z+24)>>2]=X;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[6374]|0;if(X>>>0<$>>>0){ec();return 0}if(m>>>0<$>>>0){ec();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ba+(Z+8)>>2]=m;c[ba+(Z+12)>>2]=X;c[ba+(Z+24)>>2]=0;break}}}while(0);n=ba+(ka|8)|0;return n|0}}while(0);Y=da;Z=25928;while(1){xa=c[Z>>2]|0;if(!(xa>>>0>Y>>>0)){ya=c[Z+4>>2]|0;za=xa+ya|0;if(za>>>0>Y>>>0){break}}Z=c[Z+8>>2]|0}Z=xa+(ya-39)|0;if((Z&7|0)==0){Aa=0}else{Aa=-Z&7}Z=xa+(ya-47+Aa)|0;W=Z>>>0<(da+16|0)>>>0?Y:Z;Z=W+8|0;_=ba+8|0;if((_&7|0)==0){Ba=0}else{Ba=-_&7}_=aa-40-Ba|0;c[6376]=ba+Ba;c[6373]=_;c[ba+(Ba+4)>>2]=_|1;c[ba+(aa-36)>>2]=40;c[6377]=c[6126];c[W+4>>2]=27;c[Z>>2]=c[6482];c[Z+4>>2]=c[6483];c[Z+8>>2]=c[6484];c[Z+12>>2]=c[6485];c[6482]=ba;c[6483]=aa;c[6485]=0;c[6484]=Z;Z=W+28|0;c[Z>>2]=7;if((W+32|0)>>>0<za>>>0){_=Z;while(1){Z=_+4|0;c[Z>>2]=7;if((_+8|0)>>>0<za>>>0){_=Z}else{break}}}if((W|0)==(Y|0)){break}_=W-da|0;Z=Y+(_+4)|0;c[Z>>2]=c[Z>>2]&-2;c[da+4>>2]=_|1;c[Y+_>>2]=_;Z=_>>>3;if(_>>>0<256>>>0){K=Z<<1;ca=25520+(K<<2)|0;S=c[6370]|0;m=1<<Z;do{if((S&m|0)==0){c[6370]=S|m;Ca=ca;Da=25520+(K+2<<2)|0}else{Z=25520+(K+2<<2)|0;Q=c[Z>>2]|0;if(!(Q>>>0<(c[6374]|0)>>>0)){Ca=Q;Da=Z;break}ec();return 0}}while(0);c[Da>>2]=da;c[Ca+12>>2]=da;c[da+8>>2]=Ca;c[da+12>>2]=ca;break}K=da;m=_>>>8;do{if((m|0)==0){Ea=0}else{if(_>>>0>16777215>>>0){Ea=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;W=(Y+520192|0)>>>16&4;Z=Y<<W;Y=(Z+245760|0)>>>16&2;Q=14-(W|S|Y)+(Z<<Y>>>15)|0;Ea=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=25784+(Ea<<2)|0;c[da+28>>2]=Ea;c[da+20>>2]=0;c[da+16>>2]=0;ca=c[6371]|0;Q=1<<Ea;if((ca&Q|0)==0){c[6371]=ca|Q;c[m>>2]=K;c[da+24>>2]=m;c[da+12>>2]=da;c[da+8>>2]=da;break}if((Ea|0)==31){Fa=0}else{Fa=25-(Ea>>>1)|0}Q=_<<Fa;ca=c[m>>2]|0;while(1){if((c[ca+4>>2]&-8|0)==(_|0)){break}Ga=ca+16+(Q>>>31<<2)|0;m=c[Ga>>2]|0;if((m|0)==0){T=331;break}else{Q=Q<<1;ca=m}}if((T|0)==331){if(Ga>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[Ga>>2]=K;c[da+24>>2]=ca;c[da+12>>2]=da;c[da+8>>2]=da;break}}Q=ca+8|0;_=c[Q>>2]|0;m=c[6374]|0;if(ca>>>0<m>>>0){ec();return 0}if(_>>>0<m>>>0){ec();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[da+8>>2]=_;c[da+12>>2]=ca;c[da+24>>2]=0;break}}}while(0);da=c[6373]|0;if(!(da>>>0>o>>>0)){break}_=da-o|0;c[6373]=_;da=c[6376]|0;Q=da;c[6376]=Q+o;c[Q+(o+4)>>2]=_|1;c[da+4>>2]=o|3;n=da+8|0;return n|0}}while(0);c[(Ub()|0)>>2]=12;n=0;return n|0}function Vp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[6374]|0;if(b>>>0<e>>>0){ec()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){ec()}h=f&-8;i=a+(h-8)|0;j=i;a:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){ec()}if((n|0)==(c[6375]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[6372]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=25520+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){ec()}if((c[k+12>>2]|0)==(n|0)){break}ec()}}while(0);if((s|0)==(k|0)){c[6370]=c[6370]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){ec()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}ec()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){ec()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){ec()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){ec()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{ec()}}}while(0);if((p|0)==0){q=n;r=o;break}v=c[a+(l+28)>>2]|0;m=25784+(v<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[6371]=c[6371]&~(1<<v);q=n;r=o;break a}else{if(p>>>0<(c[6374]|0)>>>0){ec()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break a}}}while(0);if(A>>>0<(c[6374]|0)>>>0){ec()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[6374]|0)>>>0){ec()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[6374]|0)>>>0){ec()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(!(d>>>0<i>>>0)){ec()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){ec()}do{if((e&2|0)==0){if((j|0)==(c[6376]|0)){B=(c[6373]|0)+r|0;c[6373]=B;c[6376]=q;c[q+4>>2]=B|1;if((q|0)!=(c[6375]|0)){return}c[6375]=0;c[6372]=0;return}if((j|0)==(c[6375]|0)){B=(c[6372]|0)+r|0;c[6372]=B;c[6375]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;b:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=25520+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[6374]|0)>>>0){ec()}if((c[u+12>>2]|0)==(j|0)){break}ec()}}while(0);if((g|0)==(u|0)){c[6370]=c[6370]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[6374]|0)>>>0){ec()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}ec()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[6374]|0)>>>0){ec()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[6374]|0)>>>0){ec()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){ec()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{ec()}}}while(0);if((f|0)==0){break}t=c[a+(h+20)>>2]|0;u=25784+(t<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[6371]=c[6371]&~(1<<t);break b}else{if(f>>>0<(c[6374]|0)>>>0){ec()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break b}}}while(0);if(E>>>0<(c[6374]|0)>>>0){ec()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[6374]|0)>>>0){ec()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[6374]|0)>>>0){ec()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[6375]|0)){H=B;break}c[6372]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=25520+(d<<2)|0;A=c[6370]|0;E=1<<r;do{if((A&E|0)==0){c[6370]=A|E;I=e;J=25520+(d+2<<2)|0}else{r=25520+(d+2<<2)|0;h=c[r>>2]|0;if(!(h>>>0<(c[6374]|0)>>>0)){I=h;J=r;break}ec()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=25784+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[6371]|0;d=1<<K;do{if((r&d|0)==0){c[6371]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=129;break}else{A=A<<1;J=E}}if((N|0)==129){if(M>>>0<(c[6374]|0)>>>0){ec()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[6374]|0;if(J>>>0<E>>>0){ec()}if(B>>>0<E>>>0){ec()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[6378]|0)-1|0;c[6378]=q;if((q|0)==0){O=25936}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[6378]=-1;return}function Wp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=Up(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(Ub()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=Xp(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=Up(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;sq(f|0,a|0,g>>>0<b>>>0?g:b)|0;Vp(a);d=f;return d|0}function Xp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[6374]|0;if(g>>>0<j>>>0){ec();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){ec();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){ec();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(!(f>>>0<(b+4|0)>>>0)){if((f-b|0)>>>0>c[6124]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(!(f>>>0<b>>>0)){k=f-b|0;if(!(k>>>0>15>>>0)){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;_p(g+b|0,k);n=a;return n|0}if((i|0)==(c[6376]|0)){k=(c[6373]|0)+f|0;if(!(k>>>0>b>>>0)){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[6376]=g+b;c[6373]=l;n=a;return n|0}if((i|0)==(c[6375]|0)){l=(c[6372]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[6372]=q;c[6375]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;a:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=25520+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){ec();return 0}if((c[l+12>>2]|0)==(i|0)){break}ec();return 0}}while(0);if((k|0)==(l|0)){c[6370]=c[6370]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){ec();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}ec();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){ec();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){ec();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){ec();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{ec();return 0}}}while(0);if((s|0)==0){break}t=c[g+(f+28)>>2]|0;l=25784+(t<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[6371]=c[6371]&~(1<<t);break a}else{if(s>>>0<(c[6374]|0)>>>0){ec();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break a}}}while(0);if(y>>>0<(c[6374]|0)>>>0){ec();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[6374]|0)>>>0){ec();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;_p(g+b|0,q);n=a;return n|0}return 0}function Yp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a>>>0<16>>>0?16:a;if((d-1&d|0)==0){e=d}else{a=16;while(1){if(a>>>0<d>>>0){a=a<<1}else{e=a;break}}}if(!((-64-e|0)>>>0>b>>>0)){c[(Ub()|0)>>2]=12;f=0;return f|0}if(b>>>0<11>>>0){g=16}else{g=b+11&-8}b=Up(e+12+g|0)|0;if((b|0)==0){f=0;return f|0}a=b-8|0;d=a;h=e-1|0;do{if((b&h|0)==0){i=d}else{j=b+h&-e;k=j-8|0;l=a;if((k-l|0)>>>0>15>>>0){m=k}else{m=j+(e-8)|0}j=m;k=m-l|0;l=b-4|0;n=c[l>>2]|0;o=(n&-8)-k|0;if((n&3|0)==0){c[m>>2]=(c[a>>2]|0)+k;c[m+4>>2]=o;i=j;break}else{n=m+4|0;c[n>>2]=o|c[n>>2]&1|2;n=m+(o+4)|0;c[n>>2]=c[n>>2]|1;c[l>>2]=k|c[l>>2]&1|2;l=b+(k-4)|0;c[l>>2]=c[l>>2]|1;_p(d,k);i=j;break}}}while(0);d=i+4|0;b=c[d>>2]|0;do{if((b&3|0)!=0){m=b&-8;if(!(m>>>0>(g+16|0)>>>0)){break}a=m-g|0;e=i;c[d>>2]=g|b&1|2;c[e+(g|4)>>2]=a|3;h=e+(m|4)|0;c[h>>2]=c[h>>2]|1;_p(e+g|0,a)}}while(0);f=i+8|0;return f|0}function Zp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;do{if((b|0)==8){e=Up(d)|0;f=7}else{g=b>>>2;if((b&3|0)!=0|(g|0)==0){h=22;break}if((g+1073741823&g|0)!=0){h=22;break}if((-64-b|0)>>>0<d>>>0){h=12;break}e=Yp(b>>>0<16>>>0?16:b,d)|0;f=7}}while(0);do{if((f|0)==7){if((e|0)==0){h=12;break}c[a>>2]=e;h=0}}while(0);return h|0}function _p(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;a:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[6374]|0;if(i>>>0<l>>>0){ec()}if((j|0)==(c[6375]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[6372]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=25520+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){ec()}if((c[p+12>>2]|0)==(j|0)){break}ec()}}while(0);if((q|0)==(p|0)){c[6370]=c[6370]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){ec()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}ec()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){ec()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){ec()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){ec()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{ec()}}}while(0);if((m|0)==0){n=j;o=k;break}t=c[d+(28-h)>>2]|0;l=25784+(t<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[6371]=c[6371]&~(1<<t);n=j;o=k;break a}else{if(m>>>0<(c[6374]|0)>>>0){ec()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break a}}}while(0);if(y>>>0<(c[6374]|0)>>>0){ec()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[6374]|0)>>>0){ec()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[6374]|0)>>>0){ec()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[6374]|0;if(e>>>0<a>>>0){ec()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[6376]|0)){A=(c[6373]|0)+o|0;c[6373]=A;c[6376]=n;c[n+4>>2]=A|1;if((n|0)!=(c[6375]|0)){return}c[6375]=0;c[6372]=0;return}if((f|0)==(c[6375]|0)){A=(c[6372]|0)+o|0;c[6372]=A;c[6375]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;b:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=25520+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){ec()}if((c[g+12>>2]|0)==(f|0)){break}ec()}}while(0);if((t|0)==(g|0)){c[6370]=c[6370]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){ec()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}ec()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){ec()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){ec()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){ec()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{ec()}}}while(0);if((m|0)==0){break}l=c[d+(b+28)>>2]|0;g=25784+(l<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[6371]=c[6371]&~(1<<l);break b}else{if(m>>>0<(c[6374]|0)>>>0){ec()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break b}}}while(0);if(C>>>0<(c[6374]|0)>>>0){ec()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[6374]|0)>>>0){ec()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[6374]|0)>>>0){ec()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[6375]|0)){F=A;break}c[6372]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=25520+(z<<2)|0;C=c[6370]|0;b=1<<o;do{if((C&b|0)==0){c[6370]=C|b;G=y;H=25520+(z+2<<2)|0}else{o=25520+(z+2<<2)|0;d=c[o>>2]|0;if(!(d>>>0<(c[6374]|0)>>>0)){G=d;H=o;break}ec()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=25784+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[6371]|0;z=1<<I;if((o&z|0)==0){c[6371]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=126;break}else{I=I<<1;J=G}}if((L|0)==126){if(K>>>0<(c[6374]|0)>>>0){ec()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[6374]|0;if(J>>>0<I>>>0){ec()}if(L>>>0<I>>>0){ec()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function $p(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=Up(b)|0;if((d|0)!=0){e=10;break}a=(H=c[7348]|0,c[7348]=H+0,H);if((a|0)==0){break}Hc[a&1]()}if((e|0)==10){return d|0}d=oc(4)|0;c[d>>2]=16848;Fb(d|0,22816,34);return 0}function aq(a){a=a|0;return $p(a)|0}function bq(a){a=a|0;if((a|0)==0){return}Vp(a);return}function cq(a){a=a|0;bq(a);return}function dq(a){a=a|0;c[a>>2]=16848;return}function eq(a){a=a|0;bq(a);return}function fq(a){a=a|0;return}function gq(a){a=a|0;return 6872}function hq(){var a=0;a=oc(4)|0;c[a>>2]=16848;Fb(a|0,22816,34)}function iq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0.0,ia=0.0,ja=0,ka=0,la=0.0,ma=0.0,na=0,oa=0.0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0.0,ya=0,za=0.0,Aa=0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0,Ha=0.0,Ia=0.0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0.0,Ac=0,Bc=0,Cc=0.0,Dc=0.0,Ec=0.0,Fc=0.0,Gc=0.0,Hc=0.0,Ic=0.0,Jc=0,Kc=0,Lc=0.0,Mc=0,Nc=0;g=i;i=i+512|0;h=g|0;if((e|0)==0){j=-149;k=24}else if((e|0)==1){j=-1074;k=53}else if((e|0)==2){j=-1074;k=53}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=lq(b)|0}}while((Oa(o|0)|0)!=0);do{if((o|0)==45|(o|0)==43){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=lq(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=0;n=q;while(1){if((n|32|0)!=(a[2688+o|0]|0)){s=o;t=n;break}do{if(o>>>0<7>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;w=d[q]|0;break}else{w=lq(b)|0;break}}else{w=n}}while(0);q=o+1|0;if(q>>>0<8>>>0){o=q;n=w}else{s=q;t=w;break}}do{if((s|0)==3){x=23}else if((s|0)!=8){w=(f|0)==0;if(!(s>>>0<4>>>0|w)){if((s|0)==8){break}else{x=23;break}}do{if((s|0)==0){if((t|32|0)==110){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;y=d[n]|0}else{y=lq(b)|0}if((y|32|0)!=97){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;z=d[n]|0}else{z=lq(b)|0}if((z|32|0)!=110){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;A=d[n]|0}else{A=lq(b)|0}if((A|0)==40){B=1}else{if((c[m>>2]|0)==0){l=+u;i=g;return+l}c[e>>2]=(c[e>>2]|0)-1;l=+u;i=g;return+l}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;C=d[n]|0}else{C=lq(b)|0}if(!((C-48|0)>>>0<10>>>0|(C-65|0)>>>0<26>>>0)){if(!((C-97|0)>>>0<26>>>0|(C|0)==95)){break}}B=B+1|0}if((C|0)==41){l=+u;i=g;return+l}n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}if(w){c[(Ub()|0)>>2]=22;kq(b,0);l=0.0;i=g;return+l}if((B|0)==0|n){l=+u;i=g;return+l}else{D=B}while(1){n=D-1|0;c[e>>2]=(c[e>>2]|0)-1;if((n|0)==0){l=+u;break}else{D=n}}i=g;return+l}do{if((t|0)==48){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;E=d[n]|0}else{E=lq(b)|0}if((E|32|0)!=120){if((c[m>>2]|0)==0){F=48;break}c[e>>2]=(c[e>>2]|0)-1;F=48;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=0}else{G=lq(b)|0;H=0}while(1){if((G|0)==46){x=68;break}else if((G|0)!=48){I=G;K=0;L=0;M=0;N=0;O=H;P=0;Q=0;R=1.0;S=0.0;T=0;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=1;continue}else{G=lq(b)|0;H=1;continue}}a:do{if((x|0)==68){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;V=d[n]|0}else{V=lq(b)|0}if((V|0)==48){W=-1;X=-1}else{I=V;K=0;L=0;M=0;N=0;O=H;P=1;Q=0;R=1.0;S=0.0;T=0;break}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;Y=d[n]|0}else{Y=lq(b)|0}if((Y|0)!=48){I=Y;K=0;L=0;M=W;N=X;O=1;P=1;Q=0;R=1.0;S=0.0;T=0;break a}n=vq(X,W,-1,-1)|0;W=J;X=n}}}while(0);b:while(1){n=I-48|0;do{if(n>>>0<10>>>0){Z=n;x=82}else{o=I|32;q=(I|0)==46;if(!((o-97|0)>>>0<6>>>0|q)){_=I;break b}if(q){if((P|0)==0){$=K;aa=L;ba=K;ca=L;da=O;ea=1;ga=Q;ha=R;ia=S;ja=T;break}else{_=46;break b}}else{Z=(I|0)>57?o-87|0:n;x=82;break}}}while(0);if((x|0)==82){x=0;n=0;do{if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){ka=Q;la=R;ma=S;na=Z+(T<<4)|0}else{o=0;if((K|0)<(o|0)|(K|0)==(o|0)&L>>>0<14>>>0){oa=R*.0625;ka=Q;la=oa;ma=S+oa*+(Z|0);na=T;break}if(!((Z|0)!=0&(Q|0)==0)){ka=Q;la=R;ma=S;na=T;break}ka=1;la=R;ma=S+R*.5;na=T}}while(0);n=vq(L,K,1,0)|0;$=J;aa=n;ba=M;ca=N;da=1;ea=P;ga=ka;ha=la;ia=ma;ja=na}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;I=d[n]|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}else{I=lq(b)|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}}if((O|0)==0){n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}do{if(w){kq(b,0)}else{if(n){break}o=c[e>>2]|0;c[e>>2]=o-1;if((P|0)==0){break}c[e>>2]=o-2}}while(0);l=+(r|0)*0.0;i=g;return+l}n=(P|0)==0;o=n?L:N;q=n?K:M;n=0;if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){n=T;p=K;pa=L;while(1){qa=n<<4;ra=vq(pa,p,1,0)|0;sa=J;ta=0;if((sa|0)<(ta|0)|(sa|0)==(ta|0)&ra>>>0<8>>>0){n=qa;p=sa;pa=ra}else{ua=qa;break}}}else{ua=T}do{if((_|32|0)==112){pa=jq(b,f)|0;p=J;if(!((pa|0)==0&(p|0)==(-2147483648|0))){va=p;wa=pa;break}if(w){kq(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0;break}}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0}}while(0);pa=vq(o<<2|0>>>30,q<<2|o>>>30,-32,-1)|0;p=vq(pa,J,wa,va)|0;pa=J;if((ua|0)==0){l=+(r|0)*0.0;i=g;return+l}n=0;if((pa|0)>(n|0)|(pa|0)==(n|0)&p>>>0>(-j|0)>>>0){c[(Ub()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}n=j-106|0;qa=(n|0)<0|0?-1:0;if((pa|0)<(qa|0)|(pa|0)==(qa|0)&p>>>0<n>>>0){c[(Ub()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((ua|0)>-1){n=ua;oa=S;qa=pa;ra=p;while(1){sa=n<<1;if(oa<.5){xa=oa;ya=sa}else{xa=oa+-1.0;ya=sa|1}za=oa+xa;sa=vq(ra,qa,-1,-1)|0;ta=J;if((ya|0)>-1){n=ya;oa=za;qa=ta;ra=sa}else{Aa=ya;Ba=za;Ca=ta;Da=sa;break}}}else{Aa=ua;Ba=S;Ca=pa;Da=p}ra=0;qa=wq(32,0,j,(j|0)<0|0?-1:0)|0;n=vq(Da,Ca,qa,J)|0;qa=J;if((ra|0)>(qa|0)|(ra|0)==(qa|0)&k>>>0>n>>>0){qa=n;Ea=(qa|0)<0?0:qa}else{Ea=k}do{if((Ea|0)<53){oa=+(r|0);za=+rb(+(+mq(1.0,84-Ea|0)),+oa);if(!((Ea|0)<32&Ba!=0.0)){Fa=Ba;Ga=Aa;Ha=za;Ia=oa;break}qa=Aa&1;Fa=(qa|0)==0?0.0:Ba;Ga=(qa^1)+Aa|0;Ha=za;Ia=oa}else{Fa=Ba;Ga=Aa;Ha=0.0;Ia=+(r|0)}}while(0);oa=Ia*Fa+(Ha+Ia*+(Ga>>>0>>>0))-Ha;if(!(oa!=0.0)){c[(Ub()|0)>>2]=34}l=+nq(oa,Da);i=g;return+l}else{F=t}}while(0);p=j+k|0;pa=3-p|0;qa=F;n=0;while(1){if((qa|0)==46){x=137;break}else if((qa|0)!=48){Ja=qa;Ka=0;La=n;Ma=0;Na=0;break}ra=c[e>>2]|0;if(ra>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ra+1;qa=d[ra]|0;n=1;continue}else{qa=lq(b)|0;n=1;continue}}c:do{if((x|0)==137){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Pa=d[qa]|0}else{Pa=lq(b)|0}if((Pa|0)==48){Qa=-1;Ra=-1}else{Ja=Pa;Ka=1;La=n;Ma=0;Na=0;break}while(1){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Sa=d[qa]|0}else{Sa=lq(b)|0}if((Sa|0)!=48){Ja=Sa;Ka=1;La=1;Ma=Qa;Na=Ra;break c}qa=vq(Ra,Qa,-1,-1)|0;Qa=J;Ra=qa}}}while(0);n=h|0;c[n>>2]=0;qa=Ja-48|0;ra=(Ja|0)==46;d:do{if(qa>>>0<10>>>0|ra){o=h+496|0;q=Ma;sa=Na;ta=0;Ta=0;Ua=0;Va=La;Wa=Ka;Ya=0;Za=0;_a=Ja;$a=qa;ab=ra;while(1){do{if(ab){if((Wa|0)==0){bb=Za;cb=Ya;db=1;eb=Va;fb=Ua;gb=ta;hb=Ta;ib=ta;jb=Ta}else{kb=q;lb=sa;mb=ta;nb=Ta;ob=Ua;pb=Va;qb=Ya;sb=Za;tb=_a;break d}}else{ub=vq(Ta,ta,1,0)|0;vb=J;wb=(_a|0)!=48;if((Ya|0)>=125){if(!wb){bb=Za;cb=Ya;db=Wa;eb=Va;fb=Ua;gb=vb;hb=ub;ib=q;jb=sa;break}c[o>>2]=c[o>>2]|1;bb=Za;cb=Ya;db=Wa;eb=Va;fb=Ua;gb=vb;hb=ub;ib=q;jb=sa;break}xb=h+(Ya<<2)|0;if((Za|0)==0){yb=$a}else{yb=_a-48+((c[xb>>2]|0)*10|0)|0}c[xb>>2]=yb;xb=Za+1|0;zb=(xb|0)==9;bb=zb?0:xb;cb=(zb&1)+Ya|0;db=Wa;eb=1;fb=wb?ub:Ua;gb=vb;hb=ub;ib=q;jb=sa}}while(0);ub=c[e>>2]|0;if(ub>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ub+1;Ab=d[ub]|0}else{Ab=lq(b)|0}ub=Ab-48|0;vb=(Ab|0)==46;if(ub>>>0<10>>>0|vb){q=ib;sa=jb;ta=gb;Ta=hb;Ua=fb;Va=eb;Wa=db;Ya=cb;Za=bb;_a=Ab;$a=ub;ab=vb}else{Bb=ib;Cb=jb;Db=gb;Eb=hb;Fb=fb;Gb=eb;Hb=db;Ib=cb;Jb=bb;Kb=Ab;x=160;break}}}else{Bb=Ma;Cb=Na;Db=0;Eb=0;Fb=0;Gb=La;Hb=Ka;Ib=0;Jb=0;Kb=Ja;x=160}}while(0);if((x|0)==160){ra=(Hb|0)==0;kb=ra?Db:Bb;lb=ra?Eb:Cb;mb=Db;nb=Eb;ob=Fb;pb=Gb;qb=Ib;sb=Jb;tb=Kb}ra=(pb|0)!=0;do{if(ra){if((tb|32|0)!=101){x=169;break}qa=jq(b,f)|0;ab=J;do{if((qa|0)==0&(ab|0)==(-2147483648|0)){if(w){kq(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Lb=0;Mb=0;break}c[e>>2]=(c[e>>2]|0)-1;Lb=0;Mb=0;break}}else{Lb=ab;Mb=qa}}while(0);qa=vq(Mb,Lb,lb,kb)|0;Nb=J;Ob=qa}else{x=169}}while(0);do{if((x|0)==169){if(!((tb|0)>-1)){Nb=kb;Ob=lb;break}if((c[m>>2]|0)==0){Nb=kb;Ob=lb;break}c[e>>2]=(c[e>>2]|0)-1;Nb=kb;Ob=lb}}while(0);if(!ra){c[(Ub()|0)>>2]=22;kq(b,0);l=0.0;i=g;return+l}qa=c[n>>2]|0;if((qa|0)==0){l=+(r|0)*0.0;i=g;return+l}ab=0;do{if((Ob|0)==(nb|0)&(Nb|0)==(mb|0)&((mb|0)<(ab|0)|(mb|0)==(ab|0)&nb>>>0<10>>>0)){if(!(k>>>0>30>>>0)){if((qa>>>(k>>>0)|0)!=0){break}}l=+(r|0)*+(qa>>>0>>>0);i=g;return+l}}while(0);qa=(j|0)/-2|0;ab=(qa|0)<0|0?-1:0;if((Nb|0)>(ab|0)|(Nb|0)==(ab|0)&Ob>>>0>qa>>>0){c[(Ub()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}qa=j-106|0;ab=(qa|0)<0|0?-1:0;if((Nb|0)<(ab|0)|(Nb|0)==(ab|0)&Ob>>>0<qa>>>0){c[(Ub()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((sb|0)==0){Pb=qb}else{if((sb|0)<9){qa=h+(qb<<2)|0;ab=sb;ra=c[qa>>2]|0;do{ra=ra*10|0;ab=ab+1|0;}while((ab|0)<9);c[qa>>2]=ra}Pb=qb+1|0}ab=Ob;do{if((ob|0)<9){if(!((ob|0)<=(ab|0)&(ab|0)<18)){break}if((ab|0)==9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0);i=g;return+l}if((ab|0)<9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0)/+(c[712+(8-ab<<2)>>2]|0);i=g;return+l}$a=k+27+(ab*-3|0)|0;_a=c[n>>2]|0;if(($a|0)<=30){if((_a>>>($a>>>0)|0)!=0){break}}l=+(r|0)*+(_a>>>0>>>0)*+(c[712+(ab-10<<2)>>2]|0);i=g;return+l}}while(0);n=(ab|0)%9|0;if((n|0)==0){Qb=0;Rb=Pb;Sb=0;Tb=ab}else{ra=(ab|0)>-1?n:n+9|0;n=c[712+(8-ra<<2)>>2]|0;do{if((Pb|0)==0){Vb=0;Wb=0;Xb=ab}else{qa=1e9/(n|0)|0;_a=ab;$a=0;Za=0;Ya=0;while(1){Wa=h+(Za<<2)|0;Va=c[Wa>>2]|0;Ua=((Va>>>0)/(n>>>0)|0)+Ya|0;c[Wa>>2]=Ua;Yb=fa((Va>>>0)%(n>>>0)|0,qa)|0;Va=Za+1|0;if((Za|0)==($a|0)&(Ua|0)==0){Zb=Va&127;_b=_a-9|0}else{Zb=$a;_b=_a}if((Va|0)==(Pb|0)){break}else{_a=_b;$a=Zb;Za=Va;Ya=Yb}}if((Yb|0)==0){Vb=Pb;Wb=Zb;Xb=_b;break}c[h+(Pb<<2)>>2]=Yb;Vb=Pb+1|0;Wb=Zb;Xb=_b}}while(0);Qb=Wb;Rb=Vb;Sb=0;Tb=9-ra+Xb|0}e:while(1){n=h+(Qb<<2)|0;if((Tb|0)<18){ab=Rb;Ya=Sb;while(1){Za=0;$a=ab+127|0;_a=ab;while(1){qa=$a&127;Va=h+(qa<<2)|0;Ua=c[Va>>2]|0;Wa=vq(Ua<<29|0>>>3,0<<29|Ua>>>3,Za,0)|0;Ua=J;Ta=0;if(Ua>>>0>Ta>>>0|Ua>>>0==Ta>>>0&Wa>>>0>1e9>>>0){Ta=Gq(Wa,Ua,1e9,0)|0;ta=Hq(Wa,Ua,1e9,0)|0;$b=Ta;ac=ta}else{$b=0;ac=Wa}c[Va>>2]=ac;Va=(qa|0)==(Qb|0);if((qa|0)!=(_a+127&127|0)|Va){bc=_a}else{bc=(ac|0)==0?qa:_a}if(Va){break}else{Za=$b;$a=qa-1|0;_a=bc}}_a=Ya-29|0;if(($b|0)==0){ab=bc;Ya=_a}else{cc=_a;dc=bc;ec=$b;break}}}else{if((Tb|0)==18){fc=Rb;gc=Sb}else{hc=Qb;ic=Rb;jc=Sb;kc=Tb;break}while(1){if(!((c[n>>2]|0)>>>0<9007199>>>0)){hc=Qb;ic=fc;jc=gc;kc=18;break e}Ya=0;ab=fc+127|0;_a=fc;while(1){$a=ab&127;Za=h+($a<<2)|0;qa=c[Za>>2]|0;Va=vq(qa<<29|0>>>3,0<<29|qa>>>3,Ya,0)|0;qa=J;Wa=0;if(qa>>>0>Wa>>>0|qa>>>0==Wa>>>0&Va>>>0>1e9>>>0){Wa=Gq(Va,qa,1e9,0)|0;ta=Hq(Va,qa,1e9,0)|0;lc=Wa;mc=ta}else{lc=0;mc=Va}c[Za>>2]=mc;Za=($a|0)==(Qb|0);if(($a|0)!=(_a+127&127|0)|Za){nc=_a}else{nc=(mc|0)==0?$a:_a}if(Za){break}else{Ya=lc;ab=$a-1|0;_a=nc}}_a=gc-29|0;if((lc|0)==0){fc=nc;gc=_a}else{cc=_a;dc=nc;ec=lc;break}}}n=Qb+127&127;if((n|0)==(dc|0)){_a=dc+127&127;ab=h+((dc+126&127)<<2)|0;c[ab>>2]=c[ab>>2]|c[h+(_a<<2)>>2];oc=_a}else{oc=dc}c[h+(n<<2)>>2]=ec;Qb=n;Rb=oc;Sb=cc;Tb=Tb+9|0}f:while(1){pc=ic+1&127;ra=h+((ic+127&127)<<2)|0;n=hc;_a=jc;ab=kc;while(1){Ya=(ab|0)==18;$a=(ab|0)>27?9:1;qc=n;rc=_a;while(1){Za=0;while(1){if((Za|0)>=2){sc=Za;break}Va=Za+qc&127;if((Va|0)==(ic|0)){sc=2;break}ta=c[h+(Va<<2)>>2]|0;Va=c[704+(Za<<2)>>2]|0;if(ta>>>0<Va>>>0){sc=2;break}if(ta>>>0>Va>>>0){sc=Za;break}else{Za=Za+1|0}}if((sc|0)==2&Ya){break f}tc=$a+rc|0;if((qc|0)==(ic|0)){qc=ic;rc=tc}else{break}}Ya=(1<<$a)-1|0;Za=1e9>>>($a>>>0);uc=ab;vc=qc;Va=qc;wc=0;do{ta=h+(Va<<2)|0;Wa=c[ta>>2]|0;qa=(Wa>>>($a>>>0))+wc|0;c[ta>>2]=qa;wc=fa(Wa&Ya,Za)|0;Wa=(Va|0)==(vc|0)&(qa|0)==0;Va=Va+1&127;uc=Wa?uc-9|0:uc;vc=Wa?Va:vc;}while((Va|0)!=(ic|0));if((wc|0)==0){n=vc;_a=tc;ab=uc;continue}if((pc|0)!=(vc|0)){break}c[ra>>2]=c[ra>>2]|1;n=vc;_a=tc;ab=uc}c[h+(ic<<2)>>2]=wc;hc=vc;ic=pc;jc=tc;kc=uc}ab=qc&127;if((ab|0)==(ic|0)){c[h+(pc-1<<2)>>2]=0;xc=pc}else{xc=ic}oa=+((c[h+(ab<<2)>>2]|0)>>>0>>>0);ab=qc+1&127;if((ab|0)==(xc|0)){_a=xc+1&127;c[h+(_a-1<<2)>>2]=0;yc=_a}else{yc=xc}za=+(r|0);zc=za*(oa*1.0e9+ +((c[h+(ab<<2)>>2]|0)>>>0>>>0));ab=rc+53|0;_a=ab-j|0;if((_a|0)<(k|0)){Ac=(_a|0)<0?0:_a;Bc=1}else{Ac=k;Bc=0}if((Ac|0)<53){oa=+rb(+(+mq(1.0,105-Ac|0)),+zc);Cc=+Xa(+zc,+(+mq(1.0,53-Ac|0)));Dc=oa;Ec=Cc;Fc=oa+(zc-Cc)}else{Dc=0.0;Ec=0.0;Fc=zc}n=qc+2&127;do{if((n|0)==(yc|0)){Gc=Ec}else{ra=c[h+(n<<2)>>2]|0;do{if(ra>>>0<5e8>>>0){if((ra|0)==0){if((qc+3&127|0)==(yc|0)){Hc=Ec;break}}Hc=za*.25+Ec}else{if(ra>>>0>5e8>>>0){Hc=za*.75+Ec;break}if((qc+3&127|0)==(yc|0)){Hc=za*.5+Ec;break}else{Hc=za*.75+Ec;break}}}while(0);if((53-Ac|0)<=1){Gc=Hc;break}if(+Xa(+Hc,+1.0)!=0.0){Gc=Hc;break}Gc=Hc+1.0}}while(0);za=Fc+Gc-Dc;do{if((ab&2147483647|0)>(-2-p|0)){if(+U(+za)<9007199254740992.0){Ic=za;Jc=Bc;Kc=rc}else{Ic=za*.5;Jc=(Bc|0)!=0&(Ac|0)==(_a|0)?0:Bc;Kc=rc+1|0}if((Kc+53|0)<=(pa|0)){if(!((Jc|0)!=0&Gc!=0.0)){Lc=Ic;Mc=Kc;break}}c[(Ub()|0)>>2]=34;Lc=Ic;Mc=Kc}else{Lc=za;Mc=rc}}while(0);l=+nq(Lc,Mc);i=g;return+l}}while(0);if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}c[(Ub()|0)>>2]=22;kq(b,0);l=0.0;i=g;return+l}}while(0);do{if((x|0)==23){b=(c[m>>2]|0)==0;if(!b){c[e>>2]=(c[e>>2]|0)-1}if(s>>>0<4>>>0|(f|0)==0|b){break}else{Nc=s}do{c[e>>2]=(c[e>>2]|0)-1;Nc=Nc-1|0;}while(Nc>>>0>3>>>0)}}while(0);l=+(r|0)*v;i=g;return+l}function jq(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0}else{h=lq(a)|0}do{if((h|0)==45|(h|0)==43){f=(h|0)==45|0;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i]|0}else{j=lq(a)|0}if((j-48|0)>>>0<10>>>0|(b|0)==0){k=f;l=j;break}if((c[g>>2]|0)==0){k=f;l=j;break}c[e>>2]=(c[e>>2]|0)-1;k=f;l=j}else{k=0;l=h}}while(0);if((l-48|0)>>>0>9>>>0){if((c[g>>2]|0)==0){m=-2147483648;n=0;return(J=m,n)|0}c[e>>2]=(c[e>>2]|0)-1;m=-2147483648;n=0;return(J=m,n)|0}else{o=l;p=0}while(1){q=o-48+p|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;r=d[l]|0}else{r=lq(a)|0}if(!((r-48|0)>>>0<10>>>0&(q|0)<214748364)){break}o=r;p=q*10|0}p=q;o=(q|0)<0|0?-1:0;if((r-48|0)>>>0<10>>>0){q=r;l=o;h=p;while(1){j=Fq(h,l,10,0)|0;b=J;f=vq(q,(q|0)<0|0?-1:0,-48,-1)|0;i=vq(f,J,j,b)|0;b=J;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j]|0}else{s=lq(a)|0}j=21474836;if((s-48|0)>>>0<10>>>0&((b|0)<(j|0)|(b|0)==(j|0)&i>>>0<2061584302>>>0)){q=s;l=b;h=i}else{t=s;u=b;v=i;break}}}else{t=r;u=o;v=p}if((t-48|0)>>>0<10>>>0){do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t]|0}else{w=lq(a)|0}}while((w-48|0)>>>0<10>>>0)}if((c[g>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}e=(k|0)!=0;k=wq(0,0,v,u)|0;m=e?J:u;n=e?k:v;return(J=m,n)|0}function kq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=e+b;return}else{c[a+100>>2]=d;return}}function lq(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+104|0;f=c[e>>2]|0;if((f|0)==0){g=3}else{if((c[b+108>>2]|0)<(f|0)){g=3}}do{if((g|0)==3){f=pq(b)|0;if((f|0)<0){break}h=c[e>>2]|0;i=c[b+8>>2]|0;do{if((h|0)==0){g=8}else{j=c[b+4>>2]|0;k=h-(c[b+108>>2]|0)-1|0;if((i-j|0)<=(k|0)){g=8;break}c[b+100>>2]=j+k}}while(0);if((g|0)==8){c[b+100>>2]=i}h=c[b+4>>2]|0;if((i|0)!=0){k=b+108|0;c[k>>2]=i+1-h+(c[k>>2]|0)}k=h-1|0;if((d[k]|0|0)==(f|0)){l=f;return l|0}a[k]=f;l=f;return l|0}}while(0);c[b+100>>2]=0;l=-1;return l|0}function mq(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0.0,g=0;do{if((b|0)>1023){d=a*8.98846567431158e+307;e=b-1023|0;if((e|0)<=1023){f=d;g=e;break}e=b-2046|0;f=d*8.98846567431158e+307;g=(e|0)>1023?1023:e}else{if(!((b|0)<-1022)){f=a;g=b;break}d=a*2.2250738585072014e-308;e=b+1022|0;if(!((e|0)<-1022)){f=d;g=e;break}e=b+2044|0;f=d*2.2250738585072014e-308;g=(e|0)<-1022?-1022:e}}while(0);return+(f*(c[k>>2]=0<<20|0>>>12,c[k+4>>2]=g+1023<<20|0>>>12,+h[k>>3]))}function nq(a,b){a=+a;b=b|0;return+(+mq(a,b))}function oq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+74|0;e=a[d]|0;a[d]=e-1&255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0){Cc[c[b+36>>2]&63](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=b|0;f=c[e>>2]|0;if((f&20|0)==0){g=c[d>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;return h|0}if((f&4|0)==0){h=-1;return h|0}c[e>>2]=f|32;h=-1;return h|0}function pq(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+8|0;e=b|0;if((c[a+8>>2]|0)==0){if((oq(a)|0)==0){f=3}else{g=-1}}else{f=3}do{if((f|0)==3){if((Cc[c[a+32>>2]&63](a,e,1)|0)!=1){g=-1;break}g=d[e]|0}}while(0);i=b;return g|0}function qq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d|0;tq(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;kq(e,0);h=+iq(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function rq(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function sq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return wb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function tq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function uq(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{sq(b,c,d)|0}return b|0}function vq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(J=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function wq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(J=e,a-c>>>0|0)|0}function xq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}J=a<<c-32;return 0}function yq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=0;return b>>>c-32|0}function zq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=(b|0)<0?-1:0;return b>>c-32|0}function Aq(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Bq(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Cq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=fa(d,c)|0;f=a>>>16;a=(e>>>16)+(fa(d,f)|0)|0;d=b>>>16;b=fa(d,c)|0;return(J=(a>>>16)+(fa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Dq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=wq(e^a,f^b,e,f)|0;b=J;a=g^e;e=h^f;f=wq((Iq(i,b,wq(g^c,h^d,g,h)|0,J,0)|0)^a,J^e,a,e)|0;return(J=J,f)|0}function Eq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=wq(h^a,j^b,h,j)|0;b=J;Iq(m,b,wq(k^d,l^e,k,l)|0,J,g)|0;l=wq(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=J;i=f;return(J=j,l)|0}function Fq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=Cq(e,a)|0;f=J;return(J=(fa(b,a)|0)+(fa(d,e)|0)+f|f&0,c|0|0)|0}function Gq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Iq(a,b,c,d,0)|0;return(J=J,e)|0}function Hq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;Iq(a,b,d,e,g)|0;i=f;return(J=c[g+4>>2]|0,c[g>>2]|0)|0}function Iq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(J=n,o)|0}else{if(!m){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(J=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(J=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(J=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((Bq(l|0)|0)>>>0);return(J=n,o)|0}p=(Aq(l|0)|0)-(Aq(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}else{if(!m){r=(Aq(l|0)|0)-(Aq(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Aq(j|0)|0)+33-(Aq(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(J=n,o)|0}else{p=Bq(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(J=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=vq(g,d,-1,-1)|0;k=J;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;wq(e,k,j,a)|0;b=J;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=wq(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=J;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=K}}B=H;C=I;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(J=n,o)|0}function Jq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;xc[a&7](b|0,c|0,d|0,e|0,f|0)}function Kq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;yc[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function Lq(a,b){a=a|0;b=b|0;zc[a&511](b|0)}function Mq(a,b,c){a=a|0;b=b|0;c=c|0;Ac[a&127](b|0,c|0)}function Nq(a,b,c){a=a|0;b=b|0;c=c|0;return Bc[a&63](b|0,c|0)|0}function Oq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Cc[a&63](b|0,c|0,d|0)|0}function Pq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Dc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function Qq(a,b){a=a|0;b=b|0;return Ec[a&255](b|0)|0}function Rq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Fc[a&7](b|0,c|0,d|0)}function Sq(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;Gc[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function Tq(a){a=a|0;Hc[a&1]()}function Uq(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Ic[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function Vq(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Jc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function Wq(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Kc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Xq(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Lc[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function Yq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Mc[a&15](b|0,c|0,d|0,e|0)|0}function Zq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Nc[a&31](b|0,c|0,d|0,e|0,f|0)|0}function _q(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Oc[a&31](b|0,c|0,d|0,e|0)}function $q(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(0)}function ar(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ga(1)}function br(a){a=a|0;ga(2)}function cr(a,b){a=a|0;b=b|0;ga(3)}function dr(a,b){a=a|0;b=b|0;ga(4);return 0}function er(a,b,c){a=a|0;b=b|0;c=c|0;ga(5);return 0}function fr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ga(6)}function gr(a){a=a|0;ga(7);return 0}function hr(a,b,c){a=a|0;b=b|0;c=c|0;ga(8)}function ir(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ga(9)}function jr(){ga(10)}function kr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(11);return 0}function lr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ga(12)}function mr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(13)}function nr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ga(14)}function or(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(15);return 0}function pr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(16);return 0}function qr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(17)}




// EMSCRIPTEN_END_FUNCS
var xc=[$q,$q,Pp,$q,Qp,$q,Op,$q];var yc=[ar,ar,Sk,ar,al,ar,cl,ar,Km,ar,Fk,ar,Dk,ar,Em,ar,Ok,ar,Rk,ar,dl,ar,rk,ar,bk,ar,Qk,ar,Rj,ar,bl,ar,pk,ar,Vj,ar,Nj,ar,Pj,ar,Ej,ar,Tj,ar,Lj,ar,Jj,ar,$j,ar,Zj,ar,Xj,ar,el,ar,sj,ar,Pk,ar,wj,ar,oj,ar,qj,ar,uj,ar,mj,ar,Cj,ar,Aj,ar,yj,ar,kj,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar,ar];var zc=[br,br,Qm,br,ij,br,yk,br,gh,br,Uh,br,Vm,br,hn,br,Og,br,Bg,br,jk,br,_g,br,Wn,br,eh,br,Hj,br,_i,br,Wi,br,fq,br,od,br,$g,br,fn,br,wn,br,_k,br,Ij,br,zp,br,Oi,br,Mm,br,gn,br,rd,br,vi,br,jj,br,Nl,br,_m,br,uo,br,Ep,br,to,br,Ui,br,eh,br,ej,br,sl,br,wo,br,jn,br,Vp,br,Gp,br,Fm,br,so,br,Ai,br,Ag,br,dj,br,nl,br,$g,br,cp,br,kk,br,go,br,qd,br,Ol,br,ui,br,Hi,br,kl,br,Zk,br,Xi,br,Cl,br,eq,br,Th,br,fp,br,gp,br,fq,br,Pi,br,gi,br,Gn,br,Bp,br,wi,br,Vi,br,hm,br,sg,br,Yl,br,Qi,br,cn,br,ip,br,Fp,br,Hg,br,Zm,br,ll,br,sm,br,Ap,br,ro,br,km,br,Gm,br,hp,br,rl,br,xk,br,Zi,br,Ig,br,$i,br,Ci,br,oh,br,On,br,zm,br,rm,br,vo,br,Hh,br,pd,br,Bp,br,Ip,br,Gi,br,dq,br,ph,br,ti,br,nd,br,Ni,br,Lm,br,sd,br,Ph,br,Fi,br,Pg,br,an,br,Yi,br,Zl,br,Lk,br,Dl,br,ug,br,Bi,br,fi,br,Ei,br,ep,br,Mk,br,Hp,br,Rm,br,tg,br,Dp,br,ol,br,Am,br,im,br,vh,br,xn,br,dh,br,zi,br,jp,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br,br];var Ac=[cr,cr,Fo,cr,cm,cr,Gl,cr,Co,cr,Xl,cr,Bo,cr,Ml,cr,vg,cr,Pm,cr,Sl,cr,yl,cr,fm,cr,Ul,cr,xl,cr,am,cr,vl,cr,dm,cr,bn,cr,Jg,cr,Cg,cr,gm,cr,Eo,cr,Hl,cr,ch,cr,Go,cr,Wl,cr,Jl,cr,Do,cr,Ll,cr,Vh,cr,Qg,cr,Um,cr,Rl,cr,Bl,cr,Al,cr,wl,cr,hi,cr,Tl,cr,bm,cr,Il,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr,cr];var Bc=[dr,dr,Tg,dr,sn,dr,qi,dr,Cn,dr,yn,dr,Fg,dr,Mg,dr,on,dr,xd,dr,An,dr,ei,dr,si,dr,qn,dr,wd,dr,ci,dr,yg,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr,dr];var Cc=[er,er,cj,er,zn,er,rn,er,Jp,er,Nm,er,un,er,hj,er,jh,er,di,er,$h,er,kn,er,ii,er,Sm,er,En,er,pn,er,xg,er,ni,er,kh,er,Bn,er,Wh,er,Lg,er,ri,er,er,er,er,er,er,er,er,er,er,er,er,er,er,er,er,er,er,er];var Dc=[fr,fr,Hm,fr,Bm,fr,fr,fr];var Ec=[gr,gr,Uo,gr,Ql,gr,ai,gr,Ln,gr,Ko,gr,bi,gr,So,gr,El,gr,Nk,gr,Io,gr,Sg,gr,pi,gr,oi,gr,mo,gr,Oo,gr,Mo,gr,Cp,gr,fh,gr,Ao,gr,xo,gr,No,gr,yo,gr,Zh,gr,Kn,gr,em,gr,Po,gr,wg,gr,Fl,gr,bo,gr,_l,gr,Ho,gr,Dg,gr,no,gr,gq,gr,Si,gr,zl,gr,Eg,gr,zo,gr,_h,gr,li,gr,Kg,gr,Nn,gr,Kl,gr,To,gr,Rg,gr,ao,gr,Tn,gr,mi,gr,tl,gr,Jo,gr,ul,gr,ah,gr,Pl,gr,Vn,gr,Vl,gr,Lo,gr,$l,gr,Sn,gr,$k,gr,vd,gr,Ro,gr,Qo,gr,fo,gr,qo,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr,gr];var Fc=[hr,hr,ih,hr,Ti,hr,hr,hr];var Gc=[ir,ir,Ik,ir,Gk,ir,vk,ir,sk,ir,ir,ir,ir,ir,ir,ir];var Hc=[jr,jr];var Ic=[kr,kr,Pn,kr,Zn,kr,Xn,kr,jo,kr,Qn,kr,ho,kr,Hn,kr,In,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr,kr];var Jc=[lr,lr,fl,lr,Tk,lr,lr,lr];var Kc=[mr,mr,pl,mr,ml,mr,jm,mr,tm,mr,nm,mr,vm,mr,mr,mr];var Lc=[nr,nr,Rp,nr,Ek,nr,Ak,nr,zk,nr,Sp,nr,Jk,nr,Om,nr,ji,nr,wk,nr,lk,nr,qk,nr,mk,nr,td,nr,Tp,nr,Xh,nr,Tm,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr,nr];var Mc=[or,or,ln,or,mn,or,Dn,or,tn,or,nn,or,or,or,or,or];var Nc=[pr,pr,vn,pr,$n,pr,fj,pr,oo,pr,co,pr,Fn,pr,Rn,pr,aj,pr,Jn,pr,Mn,pr,lo,pr,Un,pr,pr,pr,pr,pr,pr,pr];var Oc=[qr,qr,ud,qr,Lp,qr,Mp,qr,Kp,qr,Yh,qr,gj,qr,ki,qr,bj,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr,qr];return{_strlen:rq,_free:Vp,_realloc:Wp,_memmove:uq,__GLOBAL__I_a:Vg,_memset:tq,_malloc:Up,_memcpy:sq,__Z34call_teichmuller_map_with_boundaryPvPKviiS1_iiS1_ii:ed,runPostSets:dd,stackAlloc:Pc,stackSave:Qc,stackRestore:Rc,setThrew:Sc,setTempRet0:Vc,setTempRet1:Wc,setTempRet2:Xc,setTempRet3:Yc,setTempRet4:Zc,setTempRet5:_c,setTempRet6:$c,setTempRet7:ad,setTempRet8:bd,setTempRet9:cd,dynCall_viiiii:Jq,dynCall_viiiiiii:Kq,dynCall_vi:Lq,dynCall_vii:Mq,dynCall_iii:Nq,dynCall_iiii:Oq,dynCall_viiiiiid:Pq,dynCall_ii:Qq,dynCall_viii:Rq,dynCall_viiiiid:Sq,dynCall_v:Tq,dynCall_iiiiiiiii:Uq,dynCall_viiiiiiiii:Vq,dynCall_viiiiiiii:Wq,dynCall_viiiiii:Xq,dynCall_iiiii:Yq,dynCall_iiiiii:Zq,dynCall_viiii:_q}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "__scanString": __scanString, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_strtoull": _strtoull, "_fflush": _fflush, "_fputc": _fputc, "_fwrite": _fwrite, "_send": _send, "_fputs": _fputs, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_isspace": _isspace, "_read": _read, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "___resumeException": ___resumeException, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "__getFloat": __getFloat, "_atexit": _atexit, "_hypot": _hypot, "___cxa_free_exception": ___cxa_free_exception, "_isdigit_l": _isdigit_l, "_clock": _clock, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_exit": _exit, "_sprintf": _sprintf, "_asprintf": _asprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_catgets": _catgets, "__isLeapYear": __isLeapYear, "_fmax": _fmax, "_copysign": _copysign, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_times": _times, "_mkport": _mkport, "__exit": __exit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_printf": _printf, "_pread": _pread, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_puts": _puts, "_strtoll_l": _strtoll_l, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_fread": _fread, "_strftime_l": _strftime_l, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__reallyNegative": __reallyNegative, "__addDays": __addDays, "_fabs": _fabs, "_floor": _floor, "_sqrt": _sqrt, "_write": _write, "___cxa_allocate_exception": ___cxa_allocate_exception, "_vasprintf": _vasprintf, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "_stdout": _stdout, "___dso_handle": ___dso_handle }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __Z34call_teichmuller_map_with_boundaryPvPKviiS1_iiS1_ii = Module["__Z34call_teichmuller_map_with_boundaryPvPKviiS1_iiS1_ii"] = asm["__Z34call_teichmuller_map_with_boundaryPvPKviiS1_iiS1_ii"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






